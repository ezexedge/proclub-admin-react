{"version":3,"sources":["../node_modules/@material-ui/utils/esm/scrollLeft.js","../node_modules/@material-ui/core/internal/animate.js","../node_modules/@material-ui/core/Tabs/ScrollbarSize.js","../node_modules/@material-ui/core/Tabs/TabIndicator.js","../node_modules/@material-ui/core/TabScrollButton/tabScrollButtonClasses.js","../node_modules/@material-ui/core/TabScrollButton/TabScrollButton.js","../node_modules/@material-ui/core/Tabs/Tabs.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowRight.js"],"names":["cachedType","detectScrollType","dummy","document","createElement","container","style","width","height","appendChild","dir","fontSize","position","top","overflow","body","scrollLeft","removeChild","getNormalizedScrollLeft","element","direction","scrollWidth","clientWidth","easeInOutSin","time","Math","sin","PI","animate","property","to","options","cb","ease","duration","start","from","cancelled","cancel","step","timestamp","Error","min","requestAnimationFrame","styles","ScrollbarSize","props","onChange","other","_objectWithoutPropertiesLoose","scrollbarHeight","React","nodeRef","setMeasurements","current","offsetHeight","clientHeight","handleResize","debounce","prevHeight","containerWindow","ownerWindow","addEventListener","clear","removeEventListener","_jsx","_extends","ref","TabIndicator","classes","className","color","orientation","clsx","root","capitalize","vertical","withStyles","theme","bottom","transition","transitions","create","colorPrimary","backgroundColor","palette","primary","main","colorSecondary","secondary","right","name","getTabScrollButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabScrollButtonRoot","experimentalStyled","ButtonBase","overridesResolver","styleProps","deepmerge","flexShrink","opacity","transform","_ref","KeyboardArrowLeft","_ref2","KeyboardArrowRight","TabScrollButton","inProps","useThemeProps","slots","disabled","composeClasses","useUtilityClasses","component","role","tabIndex","children","defaultIndicatorStyle","Tabs","ariaLabel","ariaLabelledBy","action","centered","childrenProp","Component","allowScrollButtonsMobile","indicatorColor","ScrollButtonComponent","scrollButtons","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar","useTheme","scrollable","isRtl","scrollStart","end","clientSize","size","mounted","setMounted","indicatorStyle","setIndicatorStyle","displayScroll","setDisplayScroll","scrollbarWidth","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","tabListRef","getTabsMeta","tabsMeta","tabMeta","tabsNode","rect","getBoundingClientRect","scrollTop","scrollLeftNormalized","left","length","tab","get","process","updateIndicatorState","useEventCallback","startValue","correction","newIndicatorStyle","isNaN","dStart","abs","dSize","scroll","scrollValue","animation","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","Array","i","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","showStartScroll","showEndScroll","scrollHeight","win","handleTabsScroll","updateIndicator","updateScrollButtons","indicator","childIndex","map","child","childValue","undefined","set","selected","fullWidth","conditionalElements","scrollbarSizeListener","scrollableX","hideScrollbar","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","scrollButtonsHideMobile","scrollButtonEnd","getConditionalElements","_jsxs","scroller","scrollableY","fixed","onScroll","flexContainer","flexContainerVertical","onKeyDown","event","target","getAttribute","newFocusTarget","previousItemKey","nextItemKey","key","previousElementSibling","lastChild","nextElementSibling","firstChild","focus","preventDefault","minHeight","WebkitOverflowScrolling","display","flexDirection","justifyContent","flex","whiteSpace","overflowX","overflowY","breakpoints","down","createSvgIcon","d"],"mappings":"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","file":"static/js/2.0623248e.chunk.js","sourcesContent":["// Source from https://github.com/alitaheri/normalize-scroll-left\nlet cachedType;\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\n *\n * Type             | <- Most Left | Most Right -> | Initial\n * ---------------- | ------------ | ------------- | -------\n * default          | 0            | 100           | 100\n * negative (spec*) | -100         | 0             | 0\n * reverse          | 100          | 0             | 0\n *\n * Edge 85: default\n * Safari 14: negative\n * Chrome 85: negative\n * Firefox 81: negative\n * IE11: reverse\n *\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\n */\n\nexport function detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n\n  const dummy = document.createElement('div');\n  const container = document.createElement('div');\n  container.style.width = '10px';\n  container.style.height = '1px';\n  dummy.appendChild(container);\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n\n  document.body.removeChild(dummy);\n  return cachedType;\n} // Based on https://stackoverflow.com/a/24394376\n\nexport function getNormalizedScrollLeft(element, direction) {\n  const scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr behavior\n\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  const type = detectScrollType();\n\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n\n    default:\n      return scrollLeft;\n  }\n}","function easeInOutSin(time) {\n  return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;\n}\n\nexport default function animate(property, element, to, options = {}, cb = () => {}) {\n  const {\n    ease = easeInOutSin,\n    duration = 300 // standard\n\n  } = options;\n  let start = null;\n  const from = element[property];\n  let cancelled = false;\n\n  const cancel = () => {\n    cancelled = true;\n  };\n\n  const step = timestamp => {\n    if (cancelled) {\n      cb(new Error('Animation cancelled'));\n      return;\n    }\n\n    if (start === null) {\n      start = timestamp;\n    }\n\n    const time = Math.min(1, (timestamp - start) / duration);\n    element[property] = ease(time) * (to - from) + from;\n\n    if (time >= 1) {\n      requestAnimationFrame(() => {\n        cb(null);\n      });\n      return;\n    }\n\n    requestAnimationFrame(step);\n  };\n\n  if (from === to) {\n    cb(new Error('Element already at target position'));\n    return cancel;\n  }\n\n  requestAnimationFrame(step);\n  return cancel;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport { ownerWindow } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll'\n};\n/**\n * @ignore - internal component.\n * The component originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nexport default function ScrollbarSize(props) {\n  const {\n    onChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"onChange\"]);\n\n  const scrollbarHeight = React.useRef();\n  const nodeRef = React.useRef(null);\n\n  const setMeasurements = () => {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      const prevHeight = scrollbarHeight.current;\n      setMeasurements();\n\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    });\n    const containerWindow = ownerWindow(nodeRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(() => {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: styles,\n    ref: nodeRef\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    position: 'absolute',\n    height: 2,\n    bottom: 0,\n    width: '100%',\n    transition: theme.transitions.create()\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  colorSecondary: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  vertical: {\n    height: '100%',\n    width: 2,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst TabIndicator = /*#__PURE__*/React.forwardRef(function TabIndicator(props, ref) {\n  const {\n    classes,\n    className,\n    color,\n    orientation\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"orientation\"]);\n\n  return /*#__PURE__*/_jsx(\"span\", _extends({\n    className: clsx(classes.root, classes[`color${capitalize(color)}`], className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabIndicator.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * The color of the tab indicator.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']).isRequired,\n\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabIndicator'\n})(TabIndicator);","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTabScrollButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiTabScrollButton', slot);\n}\nconst tabScrollButtonClasses = generateUtilityClasses('MuiTabScrollButton', ['root', 'vertical', 'horizontal', 'disabled']);\nexport default tabScrollButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.orientation && styles[styleProps.orientation]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nconst TabScrollButtonRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  '&.Mui-disabled': {\n    opacity: 0\n  }\n}, styleProps.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: 'rotate(90deg)'\n  }\n}));\n\nvar _ref = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  const {\n    className,\n    direction\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"direction\", \"orientation\", \"disabled\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    styleProps: styleProps,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _ref : _ref2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TabScrollButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    minHeight: 48,\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    display: 'flex'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element. */\n  flexContainer: {\n    display: 'flex'\n  },\n\n  /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n  flexContainerVertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n  centered: {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the tablist element. */\n  scroller: {\n    position: 'relative',\n    display: 'inline-block',\n    flex: '1 1 auto',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n  fixed: {\n    overflowX: 'hidden',\n    width: '100%'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"horizontal\"`. */\n  scrollableX: {\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"vertical\"`. */\n  scrollableY: {\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `visibleScrollbar={false}`. */\n  hideScrollbar: {\n    // Hide dimensionless scrollbar on MacOS\n    scrollbarWidth: 'none',\n    // Firefox\n    '&::-webkit-scrollbar': {\n      display: 'none' // Safari + Chrome\n\n    }\n  },\n\n  /* Styles applied to the ScrollButtonComponent component. */\n  scrollButtons: {},\n\n  /* Styles applied to the ScrollButtonComponent component if `allowScrollButtonsMobile={true}`. */\n  scrollButtonsHideMobile: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  },\n\n  /* Styles applied to the TabIndicator component. */\n  indicator: {}\n});\nconst defaultIndicatorStyle = {};\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: Component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    TabIndicatorProps = {},\n    TabScrollButtonProps,\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\n\n  const theme = useTheme();\n  const scrollable = variant === 'scrollable';\n  const isRtl = theme.direction === 'rtl';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayScroll, setDisplayScroll] = React.useState({\n    start: false,\n    end: false\n  });\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`Material-UI: The value provided to the Tabs component is invalid.`, `None of the Tabs' children match with \\`${value}\\`.`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    const newIndicatorStyle = {\n      [start]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    }; // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = (scrollValue, {\n    animation = true\n  } = {}) => {\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue);\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(ScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n        scrollWidth,\n        clientWidth\n      } = tabsRef.current;\n      let showStartScroll;\n      let showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  const handleTabsScroll = React.useMemo(() => debounce(() => {\n    updateScrollButtonState();\n  }), [updateScrollButtonState]);\n  React.useEffect(() => {\n    return () => {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n\n  const indicator = /*#__PURE__*/_jsx(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  const handleKeyDown = event => {\n    const {\n      target\n    } = event; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = target.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let newFocusTarget = null;\n    let previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\n        break;\n\n      case nextItemKey:\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\n        break;\n\n      case 'Home':\n        newFocusTarget = tabListRef.current.firstChild;\n        break;\n\n      case 'End':\n        newFocusTarget = tabListRef.current.lastChild;\n        break;\n\n      default:\n        break;\n    }\n\n    if (newFocusTarget !== null) {\n      newFocusTarget.focus();\n      event.preventDefault();\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other, {\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(\"div\", {\n      className: clsx(classes.scroller, scrollable ? [vertical ? classes.scrollableY : classes.scrollableX, !visibleScrollbar && classes.hideScrollbar] : classes.fixed),\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      },\n      ref: tabsRef,\n      onScroll: handleTabsScroll,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');"],"sourceRoot":""}