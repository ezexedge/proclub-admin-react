{"version":3,"sources":["content/applications/ProjectsBoard/PageHeader.js","content/applications/ProjectsBoard/Task.js","content/applications/ProjectsBoard/Results.js","content/applications/ProjectsBoard/index.js","components/Label/index.js","components/PageTitleWrapper/index.js"],"names":["PageHeader","t","useTranslation","Grid","container","justifyContent","alignItems","item","Typography","variant","component","gutterBottom","Button","sx","mt","xs","md","startIcon","fontSize","LinearProgressWrapper","experimentalStyled","LinearProgress","theme","colors","alpha","black","primary","main","general","borderRadius","ButtonWrapper","spacing","Task","forwardRef","ref","taskId","dragging","rest","index","list","task","useSelector","state","projectsBoard","tasks","members","byId","memberIds","map","memberId","taskSelector","useState","onMenuOpen","menuOpen","moreRef","useRef","Box","Card","m","p","className","clsx","raised","noWrap","name","description","py","comments","Tooltip","placement","arrow","title","size","color","attachments","sub_items","formatDistance","due_date","Date","addSuffix","value","progress","pt","display","length","AvatarGroup","max","member","Avatar","width","height","src","avatar","id","IconButton","onClick","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","List","ListItem","button","ListItemText","defaultProps","ListColumnWrapper","IconButtonEdit","typography","pxToRem","ButtonAdd","Results","listId","lists","listSelector","dispatch","useDispatch","enqueueSnackbar","useSnackbar","setName","isRenaming","setRename","handleRenameInit","handleRename","a","update","updateList","TransitionComponent","Zoom","console","error","borderColor","px","ClickAwayListener","onClickAway","TextField","onBlur","onChange","event","persist","target","margin","Label","taskIds","fullWidth","textAlign","droppableId","provided","minHeight","innerRef","draggableId","snapshot","isDragging","style","draggableProps","dragHandleProps","placeholder","pb","TasksWrapper","TasksWrapperContent","CardAddAction","AvatarAddWrapper","FilterOptions","TabsContainerWrapper","white","ApplicationsProjectsBoard","currentTab","setCurrentTab","tabs","label","handleDragEnd","source","destination","moveTask","useEffect","getBoard","ContentWrapper","PageTitleWrapper","Container","maxWidth","direction","Tabs","textColor","indicatorColor","tab","Tab","href","disabled","lg","Autocomplete","multiple","limitTags","options","renderOption","props","option","mr","getOptionLabel","renderInput","params","InputLabelProps","shrink","renderTags","assignees","getTagProps","ev","Chip","autoHighlight","flex","Divider","onDragEnd","allIds","CardActionArea","CardContent","Footer","LabelWrapper","lighter","palette","secondary","success","warning","info","children","PageTitle"],"mappings":"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","file":"static/js/51.ec0d94a5.chunk.js","sourcesContent":["import { Typography, Button, Grid } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport AddTwoToneIcon from '@material-ui/icons/AddTwoTone';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {t('Projects Board')}\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {t('This is your Kanban style projects board')}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          sx={{ mt: { xs: 2, md: 0 } }}\n          variant=\"contained\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n        >\n          {t('Add task')}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import { forwardRef, useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  LinearProgress,\n  Card,\n  Tooltip,\n  List as ListWrapper,\n  ListItem,\n  ListItemText,\n  Menu,\n  Button,\n  IconButton,\n  Typography,\n  AvatarGroup\n} from '@material-ui/core';\nimport { formatDistance } from 'date-fns';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSelector } from 'src/store';\nimport CommentTwoToneIcon from '@material-ui/icons/CommentTwoTone';\nimport MoreHorizTwoToneIcon from '@material-ui/icons/MoreHorizTwoTone';\nimport AttachFileTwoToneIcon from '@material-ui/icons/AttachFileTwoTone';\nimport FormatListBulletedTwoToneIcon from '@material-ui/icons/FormatListBulletedTwoTone';\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveTwoTone';\n\nconst taskSelector = (state, taskId) => {\n  const { tasks, members } = state.projectsBoard;\n  const task = tasks.byId[taskId];\n\n  return {\n    ...task,\n    members: task.memberIds.map((memberId) => members.byId[memberId])\n  };\n};\n\nconst LinearProgressWrapper = experimentalStyled(LinearProgress)(\n  ({ theme }) => `\n      flex-grow: 1;\n      height: 8px;\n      background-color: ${theme.colors.alpha.black[10]};\n\n      .MuiLinearProgress-barColorPrimary {\n        background-color: ${theme.colors.primary.main};\n        border-top-right-radius: ${theme.general.borderRadius};\n        border-bottom-right-radius: ${theme.general.borderRadius};\n      }\n`\n);\n\nconst ButtonWrapper = experimentalStyled(Button)(\n  ({ theme }) => `\n      padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n      min-width: 32px;\n\n      .MuiSvgIcon-root {\n        color: ${theme.colors.alpha.black[30]};\n        margin-right: ${theme.spacing(1)};\n      }\n\n      &:hover {\n        .MuiSvgIcon-root {\n          color: ${theme.colors.primary.main};\n        }\n      }\n`\n);\n\nconst Task = forwardRef(({ taskId, dragging, index, list, ...rest }, ref) => {\n  const task = useSelector((state) => taskSelector(state, taskId));\n  const { t } = useTranslation();\n\n  const [onMenuOpen, menuOpen] = useState(false);\n  const moreRef = useRef(null);\n\n  const openMenu = () => {\n    menuOpen(true);\n  };\n\n  const closeMenu = () => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box key={taskId} ref={ref} {...rest}>\n        <Card\n          sx={{ m: 2, p: 2 }}\n          className={clsx({ dragging: dragging })}\n          raised={dragging}\n          variant={dragging ? 'elevation' : 'outlined'}\n        >\n          <Typography variant=\"h4\" gutterBottom noWrap>\n            {task.name}\n          </Typography>\n          <Typography variant=\"subtitle1\" noWrap>\n            {task.description}\n          </Typography>\n          <Box py={1}>\n            {task.comments > 0 && (\n              <Tooltip placement=\"top\" arrow title={t('Comments')}>\n                <ButtonWrapper size=\"small\" color=\"primary\">\n                  <CommentTwoToneIcon />\n                  {task.comments}\n                </ButtonWrapper>\n              </Tooltip>\n            )}\n            {task.attachments > 0 && (\n              <Tooltip placement=\"top\" arrow title={t('File attachments')}>\n                <ButtonWrapper size=\"small\" color=\"primary\">\n                  <AttachFileTwoToneIcon />\n                  {task.attachments}\n                </ButtonWrapper>\n              </Tooltip>\n            )}\n            {task.sub_items > 0 && (\n              <Tooltip placement=\"top\" arrow title={t('Subtasks')}>\n                <ButtonWrapper size=\"small\" color=\"primary\">\n                  <FormatListBulletedTwoToneIcon />\n                  {task.sub_items}\n                </ButtonWrapper>\n              </Tooltip>\n            )}\n          </Box>\n          <Box>\n            <Typography variant=\"subtitle1\">\n              {t('Due')}{' '}\n              {formatDistance(task.due_date, new Date(), { addSuffix: true })}\n            </Typography>\n            <LinearProgressWrapper\n              value={task.progress}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n          </Box>\n          <Box\n            pt={2}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Box>\n              {task.members.length > 0 && (\n                <AvatarGroup max={4}>\n                  {task.members.map((member) => (\n                    <Tooltip\n                      arrow\n                      placement=\"top\"\n                      key={member.name}\n                      title={member.name}\n                    >\n                      <Avatar\n                        sx={{ width: 30, height: 30 }}\n                        key={member.id}\n                        src={member.avatar}\n                      />\n                    </Tooltip>\n                  ))}\n                </AvatarGroup>\n              )}\n            </Box>\n            <IconButton\n              color=\"inherit\"\n              size=\"small\"\n              onClick={openMenu}\n              ref={moreRef}\n            >\n              <MoreHorizTwoToneIcon fontSize=\"small\" />\n            </IconButton>\n          </Box>\n        </Card>\n      </Box>\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        getContentAnchorEl={null}\n      >\n        <ListWrapper sx={{ p: 1 }} component=\"nav\">\n          <ListItem button>\n            <VisibilityTwoToneIcon />\n            <ListItemText primary={t('View details')} />\n          </ListItem>\n          <ListItem button>\n            <ArchiveTwoToneIcon />\n            <ListItemText primary={t('Move to archive')} />\n          </ListItem>\n          <ListItem button>\n            <DeleteForeverTwoToneIcon />\n            <ListItemText primary={t('Delete')} />\n          </ListItem>\n        </ListWrapper>\n      </Menu>\n    </>\n  );\n});\n\nTask.propTypes = {\n  taskId: PropTypes.string.isRequired,\n  dragging: PropTypes.bool.isRequired,\n  index: PropTypes.number,\n  // @ts-ignore\n  list: PropTypes.object.isRequired\n};\n\nTask.defaultProps = {\n  dragging: false\n};\n\nexport default Task;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport {\n  Box,\n  ClickAwayListener,\n  Button,\n  IconButton,\n  Tooltip,\n  Card,\n  Zoom,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'src/store';\nimport { updateList } from 'src/slices/projects_board';\nimport Task from './Task';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Label from 'src/components/Label';\nimport { useTranslation } from 'react-i18next';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport AddTwoToneIcon from '@material-ui/icons/AddTwoTone';\n\nconst ListColumnWrapper = experimentalStyled(Card)(\n  ({ theme }) => `\n      width: 340px;\n      min-width: 340px;\n      margin-right: ${theme.spacing(3)};\n      border-top-width: 8px;\n      border-top-style: solid;\n  `\n);\n\nconst IconButtonEdit = experimentalStyled(IconButton)(\n  ({ theme }) => `\n      margin-right: ${theme.spacing(0.5)};\n      padding: ${theme.spacing(0.4)};\n\n      .MuiSvgIcon-root {\n        font-size: ${theme.typography.pxToRem(17)};\n        color: ${theme.colors.primary.main};\n      }\n  `\n);\n\nconst ButtonAdd = experimentalStyled(Button)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[10]};\n      padding: ${theme.spacing(1)};\n  `\n);\n\nconst listSelector = (state, listId) => {\n  const { lists } = state.projectsBoard;\n\n  return lists.byId[listId];\n};\n\nconst Results = ({ listId }) => {\n  const { t } = useTranslation();\n\n  const list = useSelector((state) => listSelector(state, listId));\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(list.name);\n  const [isRenaming, setRename] = useState(false);\n\n  const handleChange = (event) => {\n    event.persist();\n    setName(event.target.value);\n  };\n\n  const handleRenameInit = () => {\n    setRename(true);\n  };\n\n  const handleRename = async () => {\n    try {\n      if (!name) {\n        setName(list.name);\n        setRename(false);\n        return;\n      }\n\n      const update = { name };\n\n      setRename(false);\n      await dispatch(updateList(list.id, update));\n      enqueueSnackbar(t('The project board has been successfully updated'), {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(t('There was an error, try again later'), {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    }\n  };\n\n  return (\n    <ListColumnWrapper sx={{ borderColor: list.color }}>\n      <Box\n        px={2}\n        pt={2}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        {isRenaming ? (\n          <ClickAwayListener onClickAway={handleRename}>\n            <TextField\n              value={name}\n              size=\"small\"\n              onBlur={handleRename}\n              onChange={handleChange}\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          </ClickAwayListener>\n        ) : (\n          <Typography color=\"inherit\" variant=\"h3\" onClick={handleRenameInit}>\n            {list.name}\n          </Typography>\n        )}\n        <Box display=\"flex\" alignItems=\"center\">\n          <Tooltip arrow placement=\"top\" title={t('Rename')}>\n            <IconButtonEdit onClick={handleRenameInit}>\n              <EditTwoToneIcon />\n            </IconButtonEdit>\n          </Tooltip>\n          <Label color=\"primary\">\n            <b>{list.taskIds.length}</b>\n          </Label>\n        </Box>\n      </Box>\n      <Box px={2} pt={2}>\n        <Tooltip placement=\"top\" arrow title={t('Add new task')}>\n          <ButtonAdd size=\"small\" color=\"secondary\" fullWidth>\n            <AddTwoToneIcon fontSize=\"small\" />\n          </ButtonAdd>\n        </Tooltip>\n      </Box>\n      {list.taskIds.length === 0 && (\n        <Box p={4} textAlign=\"center\">\n          <Typography variant=\"subtitle2\">\n            {t('Drag tasks here to assign them to this board')}\n          </Typography>\n        </Box>\n      )}\n      <Droppable droppableId={list.id}>\n        {(provided) => (\n          <Box sx={{ minHeight: 260 }} ref={provided.innerRef}>\n            {list.taskIds.map((taskId, index) => (\n              <Draggable draggableId={taskId} index={index} key={taskId}>\n                {(provided, snapshot) => (\n                  <Task\n                    taskId={taskId}\n                    dragging={snapshot.isDragging}\n                    index={index}\n                    key={taskId}\n                    list={list}\n                    // @ts-ignore\n                    ref={provided.innerRef}\n                    style={{ ...provided.draggableProps.style }}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                  />\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </Box>\n        )}\n      </Droppable>\n      <Box px={2} pb={2}>\n        <Tooltip placement=\"top\" arrow title={t('Add new task')}>\n          <ButtonAdd size=\"small\" color=\"secondary\" fullWidth>\n            <AddTwoToneIcon fontSize=\"small\" />\n          </ButtonAdd>\n        </Tooltip>\n      </Box>\n    </ListColumnWrapper>\n  );\n};\n\nResults.propTypes = {\n  listId: PropTypes.string.isRequired\n};\n\nexport default Results;\n","import { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'src/store';\nimport { getBoard, moveTask } from 'src/slices/projects_board';\nimport ContentWrapper from 'src/components/ContentWrapper';\nimport Footer from 'src/components/Footer';\nimport PageHeader from './PageHeader';\nimport { useTranslation } from 'react-i18next';\nimport { useSnackbar } from 'notistack';\nimport Results from './Results';\nimport Label from 'src/components/Label';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\n\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport {\n  Tabs,\n  Tooltip,\n  Tab,\n  CardActionArea,\n  CardContent,\n  Grid,\n  Avatar,\n  Box,\n  Autocomplete,\n  TextField,\n  Chip,\n  Divider,\n  Typography,\n  Card,\n  LinearProgress,\n  Container,\n  Zoom\n} from '@material-ui/core';\nimport AddTwoToneIcon from '@material-ui/icons/AddTwoTone';\n\nconst TasksWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n      display: flex;\n      overflow-y: hidden;\n      overflow-x: auto;\n      flex-direction: row;\n      padding: ${theme.spacing(2)};\n  `\n);\n\nconst TasksWrapperContent = experimentalStyled(Box)(\n  ({ theme }) => `\n      margin: 0 -${theme.spacing(2)};\n  `\n);\n\nconst CardAddAction = experimentalStyled(Card)(\n  ({ theme }) => `\n        border: ${theme.colors.primary.main} dashed 1px;\n        height: 100px;\n        flex: 1;\n        min-width: 120px;\n        color: ${theme.colors.primary.main};\n        \n        .MuiCardActionArea-root {\n          height: 100%;\n          justify-content: center;\n          align-items: center;\n          display: flex;\n        }\n        \n        .MuiTouchRipple-root {\n          opacity: .2;\n        }\n        \n        &:hover {\n          border-color: ${theme.colors.alpha.black[100]};\n        }\n`\n);\n\nconst AvatarAddWrapper = experimentalStyled(Avatar)(\n  ({ theme }) => `\n        background: ${theme.colors.alpha.black[5]};\n        color: ${theme.colors.primary.main};\n        width: ${theme.spacing(8)};\n        height: ${theme.spacing(8)};\n`\n);\n\nconst FilterOptions = experimentalStyled(Card)(\n  ({ theme }) => `\n      padding: ${theme.spacing(2)};\n      border: 1px solid ${theme.colors.alpha.black[10]};\n  `\n);\n\nconst LinearProgressWrapper = experimentalStyled(LinearProgress)(\n  ({ theme }) => `\n      flex-grow: 1;\n      height: 6px;\n      background-color: ${theme.colors.alpha.black[10]};\n\n      .MuiLinearProgress-barColorPrimary {\n        background-color: ${theme.colors.primary.main};\n        border-top-right-radius: ${theme.general.borderRadius};\n        border-bottom-right-radius: ${theme.general.borderRadius};\n      }\n`\n);\n\nconst TabsContainerWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n      padding: 0 ${theme.spacing(2)};\n      position: relative;\n      bottom: -1px;\n\n      .MuiTabs-root {\n        height: 44px;\n        min-height: 44px;\n      }\n\n      .MuiTabs-scrollableX {\n        overflow-x: auto !important;\n      }\n\n      .MuiTabs-indicator {\n          min-height: 4px;\n          height: 4px;\n          box-shadow: none;\n          bottom: -4px;\n          background: none;\n          border: 0;\n\n          &:after {\n            position: absolute;\n            left: 50%;\n            width: 28px;\n            content: ' ';\n            margin-left: -14px;\n            background: ${theme.colors.primary.main};\n            border-radius: inherit;\n            height: 100%;\n          }\n      }\n\n      .MuiTab-root {\n          &.MuiButtonBase-root {\n              height: 44px;\n              min-height: 44px;\n              background: ${theme.colors.alpha.white[50]};\n              border: 1px solid ${theme.colors.alpha.black[10]};\n              border-bottom: 0;\n              position: relative;\n              margin-right: ${theme.spacing(1)};\n              font-size: ${theme.typography.pxToRem(14)};\n              color: ${theme.colors.alpha.black[80]};\n              border-bottom-left-radius: 0;\n              border-bottom-right-radius: 0;\n\n              .MuiTouchRipple-root {\n                opacity: .1;\n              }\n\n              &:after {\n                position: absolute;\n                left: 0;\n                right: 0;\n                width: 100%;\n                bottom: 0;\n                height: 1px;\n                content: '';\n                background: ${theme.colors.alpha.black[10]};\n              }\n\n              &:hover {\n                color: ${theme.colors.alpha.black[100]};\n              }\n          }\n\n          &.Mui-selected {\n              color: ${theme.colors.alpha.black[100]};\n              background: ${theme.colors.alpha.white[100]};\n              border-bottom-color: ${theme.colors.alpha.white[100]};\n\n              &:after {\n                height: 0;\n              }\n          }\n      }\n  `\n);\n\nfunction ApplicationsProjectsBoard() {\n  const { t } = useTranslation();\n\n  const [currentTab, setCurrentTab] = useState('development_meeting');\n\n  const tabs = [\n    { value: 'react_migration', label: t('React Project Migration') },\n    { value: 'development_meeting', label: t('Development Meeting') },\n    { value: 'marketing_campaign', label: t('Marketing Campaign') }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const dispatch = useDispatch();\n  const { lists } = useSelector((state) => state.projectsBoard);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\n    try {\n      if (!destination) {\n        return;\n      }\n\n      if (\n        source.droppableId === destination.droppableId &&\n        source.index === destination.index\n      ) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        await dispatch(moveTask(draggableId, destination.index));\n      } else {\n        await dispatch(\n          moveTask(draggableId, destination.index, destination.droppableId)\n        );\n      }\n\n      enqueueSnackbar(t('Task has been successfully moved'), {\n        variant: 'info',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(t('There was an error, try again later'), {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        TransitionComponent: Zoom\n      });\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, [dispatch]);\n\n  const assignees = [\n    {\n      avatar: '/static/images/avatars/1.jpg',\n      name: 'Maren Lipshutz'\n    },\n    {\n      avatar: '/static/images/avatars/2.jpg',\n      name: 'Zain Vetrovs'\n    },\n    {\n      avatar: '/static/images/avatars/3.jpg',\n      name: 'Hanna Siphron'\n    },\n    {\n      avatar: '/static/images/avatars/4.jpg',\n      name: 'Cristofer Aminoff'\n    },\n    {\n      avatar: '/static/images/avatars/5.jpg',\n      name: 'Maria Calzoni'\n    }\n  ];\n\n  const sprints = [\n    {\n      progress: 58,\n      name: 'Sprint 1'\n    },\n    {\n      progress: 43,\n      name: 'Sprint 2'\n    },\n    {\n      progress: 65,\n      name: 'Sprint 3'\n    },\n    {\n      progress: 84,\n      name: 'Sprint 4'\n    },\n    {\n      progress: 43,\n      name: 'Sprint 5'\n    }\n  ];\n\n  return (\n    <ContentWrapper title=\"Projects Board - Applications\">\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <TabsContainerWrapper>\n              <Tabs\n                onChange={handleTabsChange}\n                value={currentTab}\n                variant=\"scrollable\"\n                textColor=\"primary\"\n                indicatorColor=\"primary\"\n              >\n                {tabs.map((tab) => (\n                  <Tab key={tab.value} label={tab.label} value={tab.value} />\n                ))}\n                <Tab\n                  href=\"#\"\n                  label={\n                    <Tooltip placement=\"top\" arrow title={t('Add new project')}>\n                      <AddTwoToneIcon />\n                    </Tooltip>\n                  }\n                  disabled\n                />\n              </Tabs>\n            </TabsContainerWrapper>\n            <FilterOptions>\n              <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"stretch\"\n                spacing={3}\n              >\n                <Grid item xs={12} lg={6} md={6}>\n                  <Autocomplete\n                    multiple\n                    sx={{ m: 2 }}\n                    limitTags={2}\n                    options={assignees}\n                    renderOption={(props, option) => (\n                      <li {...props}>\n                        <Avatar sx={{ mr: 1 }} src={option.avatar} />\n                        {option.name}\n                      </li>\n                    )}\n                    getOptionLabel={(option) => option.name}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        fullWidth\n                        InputLabelProps={{\n                          shrink: true\n                        }}\n                        label={t('Assigned')}\n                        placeholder={t('Select assignees...')}\n                      />\n                    )}\n                    renderTags={(assignees, getTagProps) =>\n                      assignees.map((ev, index) => (\n                        <Chip\n                          label={ev.name}\n                          {...getTagProps({ index })}\n                          avatar={<Avatar src={ev.avatar} />}\n                        />\n                      ))\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12} lg={6} md={6}>\n                  <Autocomplete\n                    sx={{ m: 2 }}\n                    limitTags={2}\n                    autoHighlight\n                    options={sprints}\n                    renderOption={(props, option) => (\n                      <>\n                        <li {...props}>\n                          <Box flex={1} py={1}>\n                            <Box\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"space-between\"\n                              pb={1}\n                            >\n                              <Typography variant=\"h5\">\n                                {option.name}\n                              </Typography>\n                              <Label color=\"success\">{option.progress}%</Label>\n                            </Box>\n\n                            <LinearProgressWrapper\n                              value={option.progress}\n                              color=\"primary\"\n                              variant=\"determinate\"\n                            />\n                          </Box>\n                        </li>\n                        <Divider />\n                      </>\n                    )}\n                    getOptionLabel={(option) => option.name}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        fullWidth\n                        InputLabelProps={{\n                          shrink: true\n                        }}\n                        label={t('Sprint')}\n                        placeholder={t('Select sprint...')}\n                      />\n                    )}\n                  />\n                </Grid>\n              </Grid>\n            </FilterOptions>\n          </Grid>\n          <Grid item xs={12}>\n            <TasksWrapperContent>\n              <DragDropContext onDragEnd={handleDragEnd}>\n                <TasksWrapper>\n                  {lists.allIds.map((listId) => (\n                    <Results key={listId} listId={listId} />\n                  ))}\n\n                  <Tooltip arrow title={t('Add a new project panel')}>\n                    <CardAddAction>\n                      <CardActionArea sx={{ px: 1 }}>\n                        <CardContent>\n                          <AvatarAddWrapper>\n                            <AddTwoToneIcon fontSize=\"large\" />\n                          </AvatarAddWrapper>\n                        </CardContent>\n                      </CardActionArea>\n                    </CardAddAction>\n                  </Tooltip>\n                </TasksWrapper>\n              </DragDropContext>\n            </TasksWrapperContent>\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </ContentWrapper>\n  );\n}\n\nexport default ApplicationsProjectsBoard;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelWrapper = experimentalStyled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className = '', color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { Container } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\nconst PageTitle = experimentalStyled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">{children}</Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n"],"sourceRoot":""}