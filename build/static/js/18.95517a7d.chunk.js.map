{"version":3,"sources":["content/dashboards/Analytics/PageHeader.js","content/dashboards/Analytics/AudienceOverviewChart.js","content/dashboards/Analytics/AudienceOverviewSparklines.js","content/dashboards/Analytics/AudienceOverview.js","content/dashboards/Analytics/Conversions.js","content/dashboards/Analytics/TopLandingPages.js","content/dashboards/Analytics/ActiveReferrals.js","content/dashboards/Analytics/PendingInvitations.js","content/dashboards/Analytics/BounceRate.js","content/dashboards/Analytics/ConversionsAlt.js","content/dashboards/Analytics/SessionsByCountry.js","content/dashboards/Analytics/TrafficSourcesChart.js","content/dashboards/Analytics/TrafficSources.js","content/dashboards/modal/index.js","content/dashboards/Analytics/index.js","components/Label/index.js","components/PageTitleWrapper/index.js","components/Gauge/index.js"],"names":["PageHeader","t","useTranslation","theme","useAuth","user","useTheme","Grid","container","alignItems","item","Avatar","sx","mr","width","spacing","height","variant","Typography","component","gutterBottom","format","Date","AudienceOverviewChart","dataProp","data","labels","rest","options","responsive","maintainAspectRatio","legend","display","layout","padding","scales","xAxes","gridLines","drawBorder","ticks","fontColor","palette","text","secondary","yAxes","borderDash","borderDashOffset","color","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","tooltips","enabled","mode","intersect","caretSize","displayColors","yPadding","xPadding","borderWidth","borderColor","common","black","backgroundColor","titleFontColor","white","bodyFontColor","footerFontColor","callbacks","title","label","tooltipItem","yLabel","datasets","primary","main","pointBorderColor","pointBorderWidth","pointRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverColor","pointHoverBorderWidth","pointBackgroundColor","lineTension","colors","light","CardActionsWrapper","experimentalStyled","CardActions","alpha","AudienceOverviewChartWrapper","SparklinesChartWrapper","AudienceOverviewSparklines","AudienceOverview","periods","value","audiences","actionRef1","useRef","actionRef2","useState","openPeriod","setOpenMenuPeriod","openAudience","setOpenMenuAudience","period","setPeriod","audience","setAudience","generic","month","Card","CardHeader","action","Button","size","ref","onClick","endIcon","fontSize","Menu","anchorEl","current","onClose","open","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","map","_period","MenuItem","Divider","CardContent","_audience","Box","my","xs","sm","md","position","Hidden","smDown","orientation","flexItem","absolute","p","AvatarWrapperError","error","lighter","AvatarWrapperSuccess","success","AvatarWrapperWarning","warning","Conversions","Gauge","circleRatio","styles","buildStyles","rotation","strokeWidth","List","disablePadding","dense","ListItem","ListItemText","primaryTypographyProps","noWrap","secondaryTypographyProps","AvatarLight","typography","fontWeightBold","pxToRem","TopLandingPages","flexDirection","disableGutters","ListItemAvatar","mt","Label","alignSelf","href","py","flex","justifyContent","AvatarSuccess","contrastText","shadows","CardContentWrapper","ActiveReferrals","ml","mb","Link","pl","AvatarError","getContrastText","PendingInvitations","AvatarPrimary","AvatarWarning","ConversionsAlt","ImageWrapper","LinearProgressWrapper","LinearProgress","ListItemWrapper","SessionsByCountry","button","alt","src","usFlag","minWidth","flexWrap","flexGrow","deFlag","frFlag","esFlag","cnFlag","TrafficSourcesChart","previous","type","barThickness","maxBarThickness","barPercentage","categoryPercentage","cornerRadius","animation","bodySpacing","titleFontSize","hover","TrafficSourcesChartWrapper","TabsContainerWrapper","EmptyResultsWrapper","TrafficSources","currentTab","setCurrentTab","tabs","Tabs","onChange","event","scrollButtons","textColor","indicatorColor","tab","Tab","textAlign","align","fontWeight","px","lg","makeStyles","root","transform","modal","paper","background","border","boxShadow","DashboardAnalytics","location","useLocation","console","log","pathname","ContentWrapper","PageTitleWrapper","Container","maxWidth","direction","BounceRate","Footer","LabelWrapper","general","borderRadius","info","className","children","PageTitle","GaugeWrapper","CircularProgressbarWithChildren"],"mappings":"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","file":"static/js/18.95517a7d.chunk.js","sourcesContent":["import { Grid, Typography, Avatar } from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport { useTranslation } from 'react-i18next';\nimport { useTheme } from '@material-ui/core/styles';\nimport { format } from 'date-fns';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const theme = useTheme();\n\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item>\n        <Avatar\n          sx={{\n            mr: 2,\n            width: theme.spacing(8),\n            height: theme.spacing(8)\n          }}\n          variant=\"rounded\"\n    \n        />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {t('Welcome')}\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {t('These are your analytics stats for today')},{' '}\n          <b>{format(new Date(), 'MMMM dd yyyy')}</b>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nconst AudienceOverviewChart = ({ data: dataProp, labels, ...rest }) => {\n  const theme = useTheme();\n\n  const data = () => {\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          backgroundColor: 'transparent',\n          borderColor: theme.palette.primary.main,\n          pointBorderColor: theme.palette.primary.main,\n          pointBorderWidth: 3,\n          pointRadius: 6,\n          pointHoverRadius: 10,\n          pointHoverBackgroundColor: theme.palette.primary.main,\n          pointHoverBorderColor: theme.palette.common.white,\n          pointHoverColor: theme.palette.primary.main,\n          pointHoverBorderWidth: 4,\n          pointBackgroundColor: theme.palette.common.white\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 18,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [6],\n            borderDashOffset: [0],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [6],\n            zeroLineBorderDashOffset: [0],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 12,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'nearest',\n      intersect: false,\n      caretSize: 6,\n      displayColors: false,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 4,\n      borderColor: theme.palette.common.black,\n      backgroundColor: theme.palette.common.black,\n      titleFontColor: theme.palette.common.white,\n      bodyFontColor: theme.palette.common.white,\n      footerFontColor: theme.palette.common.white,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          return `New Users: ${tooltipItem.yLabel}`;\n        }\n      }\n    }\n  };\n\n  return (\n    <div {...rest}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nAudienceOverviewChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default AudienceOverviewChart;\n","import PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nconst AudienceOverviewChart = ({ data: dataProp, labels, ...rest }) => {\n  const theme = useTheme();\n\n  const data = () => {\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          lineTension: 0,\n          borderWidth: 2,\n          backgroundColor: 'transparent',\n          borderColor: theme.colors.primary.light,\n          pointBorderWidth: 0,\n          pointRadius: 0,\n          pointHoverRadius: 0\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          display: false\n        }\n      ],\n      yAxes: [\n        {\n          display: false\n        }\n      ]\n    },\n    tooltips: {\n      enabled: false\n    }\n  };\n\n  return (\n    <div {...rest}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nAudienceOverviewChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default AudienceOverviewChart;\n","import { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\n\nimport {\n  Button,\n  Card,\n  Box,\n  CardContent,\n  CardHeader,\n  Hidden,\n  Menu,\n  MenuItem,\n  CardActions,\n  Grid,\n  Typography,\n  Divider\n} from '@material-ui/core';\n\nimport AudienceOverviewChart from './AudienceOverviewChart';\nimport AudienceOverviewSparklines from './AudienceOverviewSparklines';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst CardActionsWrapper = experimentalStyled(CardActions)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: 0;\n      display: block;\n`\n);\n\nconst AudienceOverviewChartWrapper = experimentalStyled(AudienceOverviewChart)(\n  ({ theme }) => `\n        height: 200px;\n`\n);\n\nconst SparklinesChartWrapper = experimentalStyled(AudienceOverviewSparklines)(\n  ({ theme }) => `\n        height: 50px;\n`\n);\n\nfunction AudienceOverview() {\n  const { t } = useTranslation();\n\n  const periods = [\n    {\n      value: 'today',\n      text: t('Today')\n    },\n    {\n      value: 'yesterday',\n      text: t('Yesterday')\n    },\n    {\n      value: 'last_month',\n      text: t('Last month')\n    },\n    {\n      value: 'last_year',\n      text: t('Last year')\n    }\n  ];\n  const audiences = [\n    {\n      value: 'users',\n      text: t('Users')\n    },\n    {\n      value: 'new_users',\n      text: t('New users')\n    },\n    {\n      value: 'page_views',\n      text: t('Page views')\n    },\n    {\n      value: 'avg_session_duration',\n      text: t('Avg. session duration')\n    },\n    {\n      value: 'bounce_rate',\n      text: t('Bounce rate')\n    },\n    {\n      value: 'sessions',\n      text: t('Sessions')\n    }\n  ];\n\n  const actionRef1 = useRef(null);\n  const actionRef2 = useRef(null);\n  const [openPeriod, setOpenMenuPeriod] = useState(false);\n  const [openAudience, setOpenMenuAudience] = useState(false);\n  const [period, setPeriod] = useState(periods[3].text);\n  const [audience, setAudience] = useState(audiences[1].text);\n\n  const data = {\n    users: 14.586,\n    newUsers: 12.847,\n    pageViews: 67.492,\n    avgSessionDuration: '00:05:21',\n    bounceRate: '65.37%',\n    sessions: 25.694\n  };\n\n  const newUsersAudience = {\n    month: {\n      data: [324, 315, 578, 576, 227, 459, 473, 282, 214, 623, 477, 401]\n    }\n  };\n\n  const usersSparklines = {\n    month: {\n      data: [467, 696, 495, 477, 422, 585, 691, 294, 508, 304, 499, 390]\n    }\n  };\n  const newUsersSparklines = {\n    month: {\n      data: [581, 203, 462, 518, 329, 395, 375, 447, 303, 423, 405, 589]\n    }\n  };\n  const pageViewsSparklines = {\n    month: {\n      data: [353, 380, 325, 246, 682, 605, 672, 271, 386, 630, 577, 511]\n    }\n  };\n  const avgSessionDurationSparklines = {\n    month: {\n      data: [508, 420, 336, 278, 627, 475, 575, 307, 441, 249, 413, 574]\n    }\n  };\n  const bounceRateSparklines = {\n    month: {\n      data: [534, 345, 622, 332, 567, 250, 494, 270, 313, 470, 329, 287]\n    }\n  };\n  const sessionsSparklines = {\n    month: {\n      data: [610, 234, 374, 423, 207, 507, 699, 304, 285, 257, 350, 227]\n    }\n  };\n\n  const generic = {\n    month: {\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader\n        action={\n          <>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              ref={actionRef1}\n              onClick={() => setOpenMenuPeriod(true)}\n              endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n            >\n              {period}\n            </Button>\n            <Menu\n              anchorEl={actionRef1.current}\n              onClose={() => setOpenMenuPeriod(false)}\n              open={openPeriod}\n              getContentAnchorEl={null}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n            >\n              {periods.map((_period) => (\n                <MenuItem\n                  key={_period.value}\n                  onClick={() => {\n                    setPeriod(_period.text);\n                    setOpenMenuPeriod(false);\n                  }}\n                >\n                  {_period.text}\n                </MenuItem>\n              ))}\n            </Menu>\n          </>\n        }\n        title={t('Audience Overview')}\n      />\n      <Divider />\n      <CardContent>\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          ref={actionRef2}\n          onClick={() => setOpenMenuAudience(true)}\n          endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n        >\n          {audience}\n        </Button>\n        <Menu\n          anchorEl={actionRef2.current}\n          onClose={() => setOpenMenuAudience(false)}\n          open={openAudience}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left'\n          }}\n        >\n          {audiences.map((_audience) => (\n            <MenuItem\n              key={_audience.value}\n              onClick={() => {\n                setAudience(_audience.text);\n                setOpenMenuAudience(false);\n              }}\n            >\n              {_audience.text}\n            </MenuItem>\n          ))}\n        </Menu>\n\n        <Box sx={{ my: 3 }} height={200}>\n          <AudienceOverviewChartWrapper\n            data={newUsersAudience.month.data}\n            labels={generic.month.labels}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActionsWrapper>\n        <Box>\n          <Grid container alignItems=\"center\">\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Users')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.users}</Typography>\n                </Box>\n\n                <Box sx={{ mr: 3 }} height={50}>\n                  <SparklinesChartWrapper\n                    data={usersSparklines.month.data}\n                    labels={generic.month.labels}\n                  />\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('New Users')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.newUsers}</Typography>\n                </Box>\n\n                <Box sx={{ mr: 3 }} height={50}>\n                  <SparklinesChartWrapper\n                    data={newUsersSparklines.month.data}\n                    labels={generic.month.labels}\n                  />\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Page Views')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.pageViews}</Typography>\n                </Box>\n\n                <Box sx={{ mr: 3 }} height={50}>\n                  <SparklinesChartWrapper\n                    data={pageViewsSparklines.month.data}\n                    labels={generic.month.labels}\n                  />\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Avg. Session Duration')}\n                  </Typography>\n                  <Typography variant=\"h3\">\n                    {data.avgSessionDuration}\n                  </Typography>\n                </Box>\n\n                <Box sx={{ mr: 3 }} height={50}>\n                  <SparklinesChartWrapper\n                    data={avgSessionDurationSparklines.month.data}\n                    labels={generic.month.labels}\n                  />\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Bounce Rate')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.bounceRate}</Typography>\n                </Box>\n\n                <Box sx={{ mr: 3 }} height={50}>\n                  <SparklinesChartWrapper\n                    data={bounceRateSparklines.month.data}\n                    labels={generic.month.labels}\n                  />\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    {t('Sessions')}\n                  </Typography>\n                  <Typography variant=\"h3\">{data.sessions}</Typography>\n                </Box>\n\n                <Box sx={{ mr: 3 }} height={50}>\n                  <SparklinesChartWrapper\n                    data={sessionsSparklines.month.data}\n                    labels={generic.month.labels}\n                  />\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n          </Grid>\n        </Box>\n      </CardActionsWrapper>\n    </Card>\n  );\n}\n\nexport default AudienceOverview;\n","import { useTranslation } from 'react-i18next';\nimport {\n  CardHeader,\n  Divider,\n  CardContent,\n  Avatar,\n  Card,\n  ListItemText,\n  List,\n  ListItem\n} from '@material-ui/core';\nimport Gauge from 'src/components/Gauge';\nimport { buildStyles } from 'react-circular-progressbar';\nimport TrendingDown from '@material-ui/icons/TrendingDown';\nimport TrendingUp from '@material-ui/icons/TrendingUp';\nimport TrendingFlat from '@material-ui/icons/TrendingFlat';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst AvatarWrapperError = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.error.lighter};\n      color:  ${theme.colors.error.main};\n`\n);\n\nconst AvatarWrapperSuccess = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.lighter};\n      color:  ${theme.colors.success.main};\n`\n);\n\nconst AvatarWrapperWarning = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.warning.lighter};\n      color:  ${theme.colors.warning.main};\n`\n);\n\nfunction Conversions() {\n  const { t } = useTranslation();\n\n  const data = {\n    percentage: 67,\n    sales: 127,\n    customers: 1.358,\n    earnings: '$15,864.00'\n  };\n\n  return (\n    <Card>\n      <CardHeader title={t('Conversions')} />\n      <Divider />\n      <CardContent>\n        <Gauge\n          circleRatio={0.65}\n          styles={buildStyles({ rotation: 1 / 2 + 1 / 5.7 })}\n          value={data.percentage}\n          strokeWidth={13}\n          text={`${data.percentage}%`}\n          color=\"primary\"\n          size=\"xxlarge\"\n        ></Gauge>\n\n        <List disablePadding dense>\n          <ListItem>\n            <ListItemText\n              primary={t('Sales Today')}\n              primaryTypographyProps={{\n                variant: 'subtitle2',\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondary={data.sales}\n              secondaryTypographyProps={{\n                variant: 'h3',\n                color: 'textPrimary',\n                noWrap: true\n              }}\n            />\n            <AvatarWrapperError>\n              <TrendingDown fontSize=\"medium\" />\n            </AvatarWrapperError>\n          </ListItem>\n          <Divider sx={{ my: 1 }} />\n          <ListItem>\n            <ListItemText\n              primary={t('Customers per month')}\n              primaryTypographyProps={{\n                variant: 'subtitle2',\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondary={data.customers}\n              secondaryTypographyProps={{\n                variant: 'h3',\n                color: 'textPrimary'\n              }}\n            />\n            <AvatarWrapperWarning>\n              <TrendingFlat fontSize=\"medium\" />\n            </AvatarWrapperWarning>\n          </ListItem>\n          <Divider sx={{ my: 1 }} />\n          <ListItem>\n            <ListItemText\n              primary={t('Earnings Report')}\n              primaryTypographyProps={{\n                variant: 'subtitle2',\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondary={data.earnings}\n              secondaryTypographyProps={{\n                variant: 'h3',\n                color: 'textPrimary'\n              }}\n            />\n            <AvatarWrapperSuccess>\n              <TrendingUp fontSize=\"medium\" />\n            </AvatarWrapperSuccess>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Conversions;\n","import {\n  CardHeader,\n  Divider,\n  CardContent,\n  Avatar,\n  Box,\n  CardActions,\n  Button,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  List,\n  ListItem\n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Label from 'src/components/Label';\n\nconst AvatarLight = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[10]};\n      color:  ${theme.colors.alpha.black[100]};\n      font-weight: ${theme.typography.fontWeightBold};\n      font-size: ${theme.typography.pxToRem(15)};\n`\n);\n\nfunction TopLandingPages() {\n  const { t } = useTranslation();\n\n  return (\n    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <CardHeader title={t('Top Landing Pages')} />\n      <Divider />\n      <CardContent>\n        <List component=\"div\" disablePadding>\n          <ListItem\n            sx={{ display: { xs: 'block', sm: 'flex' } }}\n            disableGutters\n            alignItems=\"flex-start\"\n            component=\"div\"\n          >\n            <ListItemAvatar>\n              <AvatarLight>1</AvatarLight>\n            </ListItemAvatar>\n\n            <ListItemText\n              primary=\"/templates/react/react-free/\"\n              primaryTypographyProps={{\n                variant: 'h6',\n                sx: { mt: 1 },\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondaryTypographyProps={{ variant: 'h3', noWrap: true }}\n              secondary={\n                <Box sx={{ mt: 1, flexDirection: 'row', display: 'flex' }}>\n                  <Box sx={{ mr: 5 }}>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Impressions')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography component=\"div\" variant=\"h3\" sx={{ mr: 1 }}>\n                        84.873\n                      </Typography>\n                      <Label color=\"success\">34.76%</Label>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Clicks')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography component=\"div\" variant=\"h3\" sx={{ mr: 1 }}>\n                        15.594\n                      </Typography>\n                      <Label color=\"success\">28.75%</Label>\n                    </Box>\n                  </Box>\n                </Box>\n              }\n            />\n            <Box sx={{ mt: { xs: 2, sm: 0 } }} alignSelf=\"center\">\n              <Button size=\"small\" href=\"#\">\n                {t('Visit URL')}\n              </Button>\n            </Box>\n          </ListItem>\n          <Divider sx={{ my: 1 }} />\n          <ListItem\n            sx={{ display: { xs: 'block', sm: 'flex' } }}\n            disableGutters\n            alignItems=\"flex-start\"\n            component=\"div\"\n          >\n            <ListItemAvatar>\n              <AvatarLight>2</AvatarLight>\n            </ListItemAvatar>\n\n            <ListItemText\n              primary=\"/templates/react/react-free/\"\n              primaryTypographyProps={{\n                variant: 'h6',\n                sx: { mt: 1 },\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondaryTypographyProps={{ variant: 'h3', noWrap: true }}\n              secondary={\n                <Box sx={{ mt: 1, flexDirection: 'row', display: 'flex' }}>\n                  <Box sx={{ mr: 5 }}>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Impressions')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography component=\"div\" variant=\"h3\" sx={{ mr: 1 }}>\n                        84.873\n                      </Typography>\n                      <Label color=\"success\">34.76%</Label>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Clicks')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography component=\"div\" variant=\"h3\" sx={{ mr: 1 }}>\n                        15.594\n                      </Typography>\n                      <Label color=\"success\">28.75%</Label>\n                    </Box>\n                  </Box>\n                </Box>\n              }\n            />\n            <Box sx={{ mt: { xs: 2, sm: 0 } }} alignSelf=\"center\">\n              <Button size=\"small\" href=\"#\">\n                {t('Visit URL')}\n              </Button>\n            </Box>\n          </ListItem>\n          <Divider sx={{ my: 1 }} />\n          <ListItem\n            sx={{ display: { xs: 'block', sm: 'flex' } }}\n            disableGutters\n            alignItems=\"flex-start\"\n            component=\"div\"\n          >\n            <ListItemAvatar>\n              <AvatarLight>3</AvatarLight>\n            </ListItemAvatar>\n\n            <ListItemText\n              primary=\"/templates/react/react-free/\"\n              primaryTypographyProps={{\n                variant: 'h6',\n                sx: { mt: 1 },\n                gutterBottom: true,\n                noWrap: true\n              }}\n              secondaryTypographyProps={{ variant: 'h3', noWrap: true }}\n              secondary={\n                <Box sx={{ mt: 1, flexDirection: 'row', display: 'flex' }}>\n                  <Box sx={{ mr: 5 }}>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Impressions')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography component=\"div\" variant=\"h3\" sx={{ mr: 1 }}>\n                        84.873\n                      </Typography>\n                      <Label color=\"success\">34.76%</Label>\n                    </Box>\n                  </Box>\n                  <Box>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      gutterBottom\n                      color=\"text.secondary\"\n                    >\n                      {t('Clicks')}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Typography component=\"div\" variant=\"h3\" sx={{ mr: 1 }}>\n                        15.594\n                      </Typography>\n                      <Label color=\"success\">28.75%</Label>\n                    </Box>\n                  </Box>\n                </Box>\n              }\n            />\n            <Box sx={{ mt: { xs: 2, sm: 0 } }} alignSelf=\"center\">\n              <Button size=\"small\" href=\"#\">\n                {t('Visit URL')}\n              </Button>\n            </Box>\n          </ListItem>\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions\n        sx={{ py: 2, height: '100%', flex: 1, justifyContent: 'center' }}\n      >\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          {t('Advanced View')}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default TopLandingPages;\n","import {\n  Link,\n  CardContent,\n  Avatar,\n  Box,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  ListItem\n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport AssessmentTwoToneIcon from '@material-ui/icons/AssessmentTwoTone';\n\nconst AvatarSuccess = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.main};\n      color: ${theme.palette.primary.contrastText};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.success};\n`\n);\n\nconst CardContentWrapper = experimentalStyled(CardContent)(\n  ({ theme }) => `\n     padding: ${theme.spacing(2.5, 3, 3)};\n  \n     &:last-child {\n     padding-bottom: 0;\n     }\n`\n);\n\nfunction ActiveReferrals() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardContentWrapper>\n        <Typography variant=\"overline\" color=\"text.primary\">\n          {t('Active Referrals')}\n        </Typography>\n\n        <ListItem disableGutters sx={{ my: 1 }} component=\"div\">\n          <ListItemAvatar>\n            <AvatarSuccess variant=\"rounded\">\n              <AssessmentTwoToneIcon fontSize=\"large\" />\n            </AvatarSuccess>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary=\"275\"\n            primaryTypographyProps={{\n              variant: 'h1',\n              sx: { ml: 2 },\n              noWrap: true\n            }}\n          />\n        </ListItem>\n        <ListItem disableGutters sx={{ mt: 0.5, mb: 1.5 }} component=\"div\">\n          <ListItemText\n            primary={\n              <>\n                <Link href=\"#\">{t('See referring domains')}</Link>\n                <Box component=\"span\" sx={{ pl: 0.5 }}>\n                  {t('which sent most traffic.')}\n                </Box>\n              </>\n            }\n            primaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n        </ListItem>\n      </CardContentWrapper>\n    </Card>\n  );\n}\n\nexport default ActiveReferrals;\n","import {\n  Link,\n  CardContent,\n  Avatar,\n  Box,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  ListItem\n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\n\nconst AvatarError = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.error.main};\n      color: ${theme.palette.getContrastText(theme.colors.error.main)};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.error};\n`\n);\n\nconst CardContentWrapper = experimentalStyled(CardContent)(\n  ({ theme }) => `\n     padding: ${theme.spacing(2.5, 3, 3)};\n  \n     &:last-child {\n     padding-bottom: 0;\n     }\n`\n);\n\nfunction PendingInvitations() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardContentWrapper>\n        <Typography variant=\"overline\" color=\"text.primary\">\n          {t('Pending Invitations')}\n        </Typography>\n\n        <ListItem disableGutters sx={{ my: 1 }} component=\"div\">\n          <ListItemAvatar>\n            <AvatarError variant=\"rounded\">\n              <BusinessTwoToneIcon fontSize=\"large\" />\n            </AvatarError>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary=\"19\"\n            primaryTypographyProps={{\n              variant: 'h1',\n              sx: { ml: 2 },\n              noWrap: true\n            }}\n          />\n        </ListItem>\n        <ListItem disableGutters sx={{ mt: 0.5, mb: 1.5 }} component=\"div\">\n          <ListItemText\n            primary={\n              <>\n                <Link href=\"#\">{t('See all invitations')}</Link>\n                <Box component=\"span\" sx={{ pl: 0.5 }}>\n                  {t('not opened yet.')}\n                </Box>\n              </>\n            }\n            primaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n        </ListItem>\n      </CardContentWrapper>\n    </Card>\n  );\n}\n\nexport default PendingInvitations;\n","import {\n  Link,\n  CardContent,\n  Avatar,\n  Box,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  ListItem\n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport SportsBasketballTwoToneIcon from '@material-ui/icons/SportsBasketballTwoTone';\n\nconst AvatarPrimary = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.primary.main};\n      color: ${theme.palette.getContrastText(theme.colors.primary.main)};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.primary};\n`\n);\n\nconst CardContentWrapper = experimentalStyled(CardContent)(\n  ({ theme }) => `\n     padding: ${theme.spacing(2.5, 3, 3)};\n  \n     &:last-child {\n     padding-bottom: 0;\n     }\n`\n);\n\nfunction ActiveReferrals() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardContentWrapper>\n        <Typography variant=\"overline\" color=\"text.primary\">\n          {t('Bounce Rate')}\n        </Typography>\n\n        <ListItem disableGutters sx={{ my: 1 }} component=\"div\">\n          <ListItemAvatar>\n            <AvatarPrimary variant=\"rounded\">\n              <SportsBasketballTwoToneIcon fontSize=\"large\" />\n            </AvatarPrimary>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary=\"55.2%\"\n            primaryTypographyProps={{\n              variant: 'h1',\n              sx: { ml: 2 },\n              noWrap: true\n            }}\n          />\n        </ListItem>\n        <ListItem disableGutters sx={{ mt: 0.5, mb: 1.5 }} component=\"div\">\n          <ListItemText\n            primary={\n              <>\n                <Link href=\"#\">{t('See all links')}</Link>\n                <Box component=\"span\" sx={{ pl: 0.5 }}>\n                  {t('with high bounce rate.')}\n                </Box>\n              </>\n            }\n            primaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n        </ListItem>\n      </CardContentWrapper>\n    </Card>\n  );\n}\n\nexport default ActiveReferrals;\n","import {\n  Link,\n  CardContent,\n  Avatar,\n  Box,\n  Typography,\n  ListItemAvatar,\n  Card,\n  ListItemText,\n  ListItem\n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport LocalConvenienceStoreTwoToneIcon from '@material-ui/icons/LocalConvenienceStoreTwoTone';\n\nconst AvatarWarning = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.warning.main};\n      color:  ${theme.palette.primary.contrastText};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.warning};\n`\n);\n\nconst CardContentWrapper = experimentalStyled(CardContent)(\n  ({ theme }) => `\n     padding: ${theme.spacing(2.5, 3, 3)};\n  \n     &:last-child {\n     padding-bottom: 0;\n     }\n`\n);\n\nfunction ConversionsAlt() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardContentWrapper>\n        <Typography variant=\"overline\" color=\"text.primary\">\n          {t('Conversion')}\n        </Typography>\n\n        <ListItem disableGutters sx={{ my: 1 }} component=\"div\">\n          <ListItemAvatar>\n            <AvatarWarning variant=\"rounded\">\n              <LocalConvenienceStoreTwoToneIcon fontSize=\"large\" />\n            </AvatarWarning>\n          </ListItemAvatar>\n\n          <ListItemText\n            primary=\"55.2%\"\n            primaryTypographyProps={{\n              variant: 'h1',\n              sx: { ml: 2 },\n              noWrap: true\n            }}\n          />\n        </ListItem>\n        <ListItem disableGutters sx={{ mt: 0.5, mb: 1.5 }} component=\"div\">\n          <ListItemText\n            primary={\n              <>\n                <Link href=\"#\">{t('See products')}</Link>\n                <Box component=\"span\" sx={{ pl: 0.5 }}>\n                  {t('with the best conversion rates.')}\n                </Box>\n              </>\n            }\n            primaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n        </ListItem>\n      </CardContentWrapper>\n    </Card>\n  );\n}\n\nexport default ConversionsAlt;\n","import {\n  CardHeader,\n  Divider,\n  Card,\n  LinearProgress,\n  List,\n  ListItem,\n  Box,\n  Typography\n} from '@material-ui/core';\n\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport deFlag from 'country-flag-icons/3x2/DE.svg';\nimport usFlag from 'country-flag-icons/3x2/US.svg';\nimport esFlag from 'country-flag-icons/3x2/ES.svg';\nimport frFlag from 'country-flag-icons/3x2/FR.svg';\nimport cnFlag from 'country-flag-icons/3x2/CN.svg';\n\nconst ImageWrapper = experimentalStyled('img')(\n  ({ theme }) => `\n        margin-right: ${theme.spacing(1)};\n        width: 36px;\n`\n);\n\nconst LinearProgressWrapper = experimentalStyled(LinearProgress)(\n  ({ theme }) => `\n        flex-grow: 1;\n        margin-right: ${theme.spacing(1)};\n`\n);\n\nconst ListItemWrapper = experimentalStyled(ListItem)(\n  ({ theme }) => `\n        border-radius: 0;\n`\n);\n\nfunction SessionsByCountry() {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardHeader title={t('Sessions by Country')} />\n      <Divider />\n      <List disablePadding component=\"nav\">\n        <ListItemWrapper sx={{ py: 3 }} button>\n          <ImageWrapper alt=\"USA\" src={usFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{ minWidth: 80 }}\n          >\n            USA\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{ ml: 1, flexGrow: 1 }}\n          >\n            <LinearProgressWrapper\n              value={57}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              57%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n        <ListItemWrapper sx={{ py: 3 }} button>\n          <ImageWrapper alt=\"Germany\" src={deFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{ minWidth: 80 }}\n          >\n            Germany\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{ ml: 1, flexGrow: 1 }}\n          >\n            <LinearProgressWrapper\n              value={34}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              34%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n        <ListItemWrapper sx={{ py: 3 }} button>\n          <ImageWrapper alt=\"France\" src={frFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{ minWidth: 80 }}\n          >\n            France\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{ ml: 1, flexGrow: 1 }}\n          >\n            <LinearProgressWrapper\n              value={21}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              21%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n        <ListItemWrapper sx={{ py: 3 }} button>\n          <ImageWrapper alt=\"Spain\" src={esFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{ minWidth: 80 }}\n          >\n            Spain\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{ ml: 1, flexGrow: 1 }}\n          >\n            <LinearProgressWrapper\n              value={13}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              13%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n        <ListItemWrapper sx={{ py: 3 }} button>\n          <ImageWrapper alt=\"China\" src={cnFlag} />\n          <Typography\n            variant=\"h5\"\n            color=\"text.primary\"\n            noWrap\n            sx={{ minWidth: 80 }}\n          >\n            China\n          </Typography>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            sx={{ ml: 1, flexGrow: 1 }}\n          >\n            <LinearProgressWrapper\n              value={71}\n              color=\"primary\"\n              variant=\"determinate\"\n            />\n            <Typography variant=\"h4\" color=\"text.primary\">\n              71%\n            </Typography>\n          </Box>\n        </ListItemWrapper>\n        <Divider />\n      </List>\n    </Card>\n  );\n}\n\nexport default SessionsByCountry;\n","import PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nconst TrafficSourcesChart = ({ data: dataProp, labels, ...rest }) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'Previous Period',\n        backgroundColor: 'transparent',\n        data: dataProp.previous,\n        borderColor: theme.palette.error.main,\n        pointBorderColor: theme.palette.common.white,\n        pointBorderWidth: 3,\n        pointRadius: 6,\n        pointHoverRadius: 10,\n        pointHoverBackgroundColor: theme.palette.error.main,\n        pointHoverBorderColor: theme.palette.common.white,\n        pointHoverColor: theme.palette.error.main,\n        pointHoverBorderWidth: 4,\n        pointBackgroundColor: theme.palette.error.main,\n        borderDash: [10, 5],\n        type: 'line'\n      },\n      {\n        label: 'Current Period',\n        backgroundColor: theme.palette.primary.main,\n        data: dataProp.current,\n        barThickness: 30,\n        maxBarThickness: 33,\n        barPercentage: 0.6,\n        categoryPercentage: 0.6\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cornerRadius: 6,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 18,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [6],\n            borderDashOffset: [0],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [6],\n            zeroLineBorderDashOffset: [0],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 12,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 6,\n      displayColors: true,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 4,\n      bodySpacing: 10,\n      titleFontSize: 16,\n      borderColor: theme.palette.common.black,\n      backgroundColor: theme.palette.common.black,\n      titleFontColor: theme.palette.common.white,\n      bodyFontColor: theme.palette.common.white,\n      footerFontColor: theme.palette.common.white\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true\n    }\n  };\n\n  return (\n    <div {...rest}>\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\nTrafficSourcesChart.propTypes = {\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default TrafficSourcesChart;\n","import { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\n\nimport Divider from '@material-ui/core/Divider';\nimport {\n  Button,\n  Card,\n  Box,\n  CardContent,\n  CardHeader,\n  Menu,\n  MenuItem,\n  CardActions,\n  Grid,\n  Typography,\n  Hidden,\n  Tabs,\n  Tab\n} from '@material-ui/core';\n\nimport TrafficSourcesChart from './TrafficSourcesChart';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst CardActionsWrapper = experimentalStyled(CardActions)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: 0;\n      display: block;\n`\n);\n\nconst TrafficSourcesChartWrapper = experimentalStyled(TrafficSourcesChart)(\n  ({ theme }) => `\n        height: 250px;\n`\n);\n\nconst TabsContainerWrapper = experimentalStyled(CardContent)(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n`\n);\n\nconst EmptyResultsWrapper = experimentalStyled('img')(\n  ({ theme }) => `\n      max-width: 100%;\n      width: ${theme.spacing(66)};\n      height: ${theme.spacing(34)};\n`\n);\n\nfunction TrafficSources() {\n  const { t } = useTranslation();\n\n  const periods = [\n    {\n      value: 'today',\n      text: t('Today')\n    },\n    {\n      value: 'yesterday',\n      text: t('Yesterday')\n    },\n    {\n      value: 'last_month',\n      text: t('Last month')\n    },\n    {\n      value: 'last_year',\n      text: t('Last year')\n    }\n  ];\n\n  const data = {\n    users: 2.593,\n    pagesSession: 2.66,\n    newSessions: '82.05%',\n    avgSessionDuration: '00:03:56',\n    bounceRate: '49.75%',\n    sessions: 9.381\n  };\n\n  const referrals = {\n    current: [1008, 940, 1010, 821, 1035, 1030, 957, 926, 993, 1021, 997, 879],\n    previous: [648, 745, 897, 743, 635, 842, 811, 696, 878, 987, 747, 731]\n  };\n\n  const actionRef1 = useRef(null);\n  const [openPeriod, setOpenMenuPeriod] = useState(false);\n  const [period, setPeriod] = useState('Select period');\n\n  const [currentTab, setCurrentTab] = useState('referral');\n\n  const tabs = [\n    { value: 'direct', label: t('Direct') },\n    { value: 'referral', label: t('Referral') },\n    { value: 'organic', label: t('Organic') },\n    { value: 'social', label: t('Social') }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const generic = {\n    month: {\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader\n        action={\n          <>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              ref={actionRef1}\n              onClick={() => setOpenMenuPeriod(true)}\n              endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n            >\n              {period}\n            </Button>\n            <Menu\n              anchorEl={actionRef1.current}\n              onClose={() => setOpenMenuPeriod(false)}\n              open={openPeriod}\n              getContentAnchorEl={null}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n            >\n              {periods.map((_period) => (\n                <MenuItem\n                  key={_period.value}\n                  onClick={() => {\n                    setPeriod(_period.text);\n                    setOpenMenuPeriod(false);\n                  }}\n                >\n                  {_period.text}\n                </MenuItem>\n              ))}\n            </Menu>\n          </>\n        }\n        title={t('Traffic Sources')}\n      />\n      <Divider />\n      <TabsContainerWrapper>\n        <Tabs\n          onChange={handleTabsChange}\n          value={currentTab}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          textColor=\"primary\"\n          indicatorColor=\"primary\"\n        >\n          {tabs.map((tab) => (\n            <Tab key={tab.value} label={tab.label} value={tab.value} />\n          ))}\n        </Tabs>\n      </TabsContainerWrapper>\n      <Hidden smDown>\n        <Divider />\n      </Hidden>\n      <CardContent sx={{ p: { xs: 0, sm: 3 } }}>\n        <Box sx={{ mt: { xs: 0, sm: 3 } }}>\n          {currentTab === 'direct' && (\n            <Box sx={{ textAlign: 'center', my: 4 }}>\n              <EmptyResultsWrapper src=\"/static/images/placeholders/illustrations/1.svg\" />\n              <Typography\n                align=\"center\"\n                variant=\"h2\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n                sx={{ mt: 3 }}\n                gutterBottom\n              >\n                There are no charts generated for <b>Direct</b> traffic sources!\n              </Typography>\n              <Button variant=\"contained\" sx={{ mt: 4 }}>\n                Generate Chart\n              </Button>\n            </Box>\n          )}\n          {currentTab === 'referral' && (\n            <Hidden smDown>\n              <Box height={250} sx={{ px: { lg: 6 } }}>\n                <TrafficSourcesChartWrapper\n                  data={referrals}\n                  labels={generic.month.labels}\n                />\n              </Box>\n            </Hidden>\n          )}\n          {currentTab === 'organic' && (\n            <Box sx={{ textAlign: 'center', my: 4 }}>\n              <EmptyResultsWrapper src=\"/static/images/placeholders/illustrations/1.svg\" />\n\n              <Typography\n                align=\"center\"\n                variant=\"h2\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n                sx={{ mt: 3 }}\n                gutterBottom\n              >\n                There are no charts generated for <b>Organic</b> traffic\n                sources!\n              </Typography>\n              <Button variant=\"contained\" sx={{ mt: 4 }}>\n                Generate Chart\n              </Button>\n            </Box>\n          )}\n          {currentTab === 'social' && (\n            <Box sx={{ textAlign: 'center', my: 4 }}>\n              <EmptyResultsWrapper src=\"/static/images/placeholders/illustrations/1.svg\" />\n\n              <Typography\n                align=\"center\"\n                variant=\"h2\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n                sx={{ mt: 3 }}\n                gutterBottom\n              >\n                There are no charts generated for <b>Social</b> traffic sources!\n              </Typography>\n              <Button variant=\"contained\" sx={{ mt: 4 }}>\n                Generate Chart\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActionsWrapper>\n        <Box>\n          <Grid container alignItems=\"center\">\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.users}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('Users')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.sessions}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('Sessions')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.pagesSession}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('pages/session')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.avgSessionDuration}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('Avg. Session Duration')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.newSessions}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('% New Sessions')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid xs={12} sm={6} md={4} item sx={{ position: 'relative' }}>\n              <Hidden smDown>\n                <Divider orientation=\"vertical\" flexItem absolute />\n              </Hidden>\n              <Box sx={{ p: 3 }}>\n                <Box>\n                  <Typography align=\"center\" variant=\"h3\" gutterBottom>\n                    {data.bounceRate}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {t('Bounce Rate')}\n                  </Typography>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n          </Grid>\n        </Box>\n      </CardActionsWrapper>\n    </Card>\n  );\n}\n\nexport default TrafficSources;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 300,\n    flexGrow: 1,\n    minWidth: 300,\n    transform: 'translateZ(0)',\n    // The position fixed scoping doesn't work in IE 11.\n    // Disable this demo to preserve the others.\n    '@media all and (-ms-high-contrast: none)': {\n      display: 'none',\n    },\n  },\n  modal: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function ServerModal() {\n  const classes = useStyles();\n  const rootRef = React.useRef(null);\n\n  return (\n    <div className={classes.root} ref={rootRef}>\n      <Modal\n        disablePortal\n        disableEnforceFocus\n        disableAutoFocus\n        open\n        aria-labelledby=\"server-modal-title\"\n        aria-describedby=\"server-modal-description\"\n        className={classes.modal}\n        container={() => rootRef.current}\n      >\n        <div className={classes.paper}>\n          <h2 id=\"server-modal-title\">Server-side modal</h2>\n          <p id=\"server-modal-description\">If you disable JavaScript, you will still see me.</p>\n        </div>\n      </Modal>\n    </div>\n  );\n}","import ContentWrapper from 'src/components/ContentWrapper';\nimport PageHeader from './PageHeader';\nimport Footer from 'src/components/Footer';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { useLocation } from 'react-router-dom'\nimport AudienceOverview from './AudienceOverview';\nimport Conversions from './Conversions';\nimport TopLandingPages from './TopLandingPages';\nimport ActiveReferrals from './ActiveReferrals';\nimport PendingInvitations from './PendingInvitations';\nimport BounceRate from './BounceRate';\nimport ConversionsAlt from './ConversionsAlt';\nimport SessionsByCountry from './SessionsByCountry';\nimport TrafficSources from './TrafficSources';\nimport { Container, Grid } from '@material-ui/core';\nimport {ServerModal} from '../modal/index'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\n\nfunction DashboardAnalytics() {\n  const location = useLocation();\n  console.log(location.pathname);\n  \n \n\n\n  return (\n    <ContentWrapper title=\"Analytics Dashboard\">\n\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <AudienceOverview />\n          </Grid>\n          <Grid item md={5} xs={12}>\n            <Conversions />\n          </Grid>\n          <Grid item md={7} xs={12}>\n            <TopLandingPages />\n          </Grid>\n          <Grid item lg={8} md={6} xs={12}>\n            <Grid\n              container\n              spacing={3}\n              direction=\"row\"\n              justifyContent=\"center\"\n              alignItems=\"stretch\"\n            >\n              <Grid item sm={6} xs={12}>\n                <ActiveReferrals />\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <PendingInvitations />\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <BounceRate />\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <ConversionsAlt />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item lg={4} md={6} xs={12}>\n            <SessionsByCountry />\n          </Grid>\n          <Grid item xs={12}>\n            <TrafficSources />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </ContentWrapper>\n  );\n}\n\nexport default DashboardAnalytics;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelWrapper = experimentalStyled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className = '', color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { Container } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\nconst PageTitle = experimentalStyled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">{children}</Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\n\nconst GaugeWrapper = experimentalStyled(CircularProgressbarWithChildren)(\n  ({ theme }) => `\n  \n  &.CircularProgressbar {\n    vertical-align: middle;\n    width: 80%;\n    margin: 0 auto;\n    display: flex;\n    \n    & + [data-test-id=\"CircularProgressbarWithChildren__children\"] {\n      margin-top: 0 !important;\n      top: 0;\n    }\n\n    .CircularProgressbar-path {\n      stroke-linecap: round;\n      transition: stroke-dashoffset 0.5s ease 0s;\n    }\n  \n    .CircularProgressbar-trail {\n      stroke-linecap: round;\n    }\n    \n    .CircularProgressbar-text {\n      font-size: ${theme.typography.pxToRem(13)};\n      dominant-baseline: middle;\n      text-anchor: middle;\n    }\n  \n    &.MuiGauge {\n      &-xsmall {\n        width: 48px;\n      }\n      &-small {\n        width: 62px;\n        .CircularProgressbar-text {\n          font-weight: bold;\n          font-size: ${theme.typography.pxToRem(24)};\n        }\n      }\n      &-medium {\n        width: 120px;\n      }\n      &-large {\n        width: 140px;\n      }\n      &-xlarge {\n        width: 180px;\n      }\n      &-xxlarge {\n        width: 230px;\n      }\n      \n      &-primary {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.primary.main};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.black[10]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.black[100]};\n        }\n    \n        .CircularProgressbar-background {\n          fill: rgba(${theme.colors.primary.main}, .05);\n        }\n      }\n      \n      &-white {\n\n        .CircularProgressbar-path {\n          stroke: ${theme.colors.alpha.white[100]};\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: ${theme.colors.alpha.white[30]};\n        }\n    \n        .CircularProgressbar-text {\n          fill: ${theme.colors.alpha.white[100]};\n        }\n      }\n\n      &-trueWhite {\n\n        .CircularProgressbar-path {\n          stroke: #fff;\n        }\n    \n        .CircularProgressbar-trail {\n          stroke: rgba(255,255,255, .3);\n        }\n    \n        .CircularProgressbar-text {\n          fill: #fff;\n        }\n      }\n    }\n  }\n`\n);\n\nconst Gauge = ({\n  className = '',\n  color = 'primary',\n  size = 'medium',\n  circleRatio,\n  value,\n  styles,\n  text,\n  strokeWidth,\n  children,\n  ...rest\n}) => {\n  return (\n    <GaugeWrapper\n      circleRatio={circleRatio}\n      value={value}\n      text={text}\n      strokeWidth={strokeWidth}\n      styles={styles}\n      className={`MuiGauge-${color} MuiGauge-${size}`}\n      {...rest}\n    >\n      {children}\n    </GaugeWrapper>\n  );\n};\n\nGauge.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  styles: PropTypes.any,\n  value: PropTypes.number,\n  text: PropTypes.any,\n  strokeWidth: PropTypes.number,\n  circleRatio: PropTypes.number,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info',\n    'white',\n    'trueWhite'\n  ]),\n  size: PropTypes.oneOf([\n    'xsmall',\n    'small',\n    'medium',\n    'large',\n    'xlarge',\n    'xxlarge'\n  ])\n};\n\nexport default Gauge;\n"],"sourceRoot":""}