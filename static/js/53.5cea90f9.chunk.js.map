{"version":3,"sources":["content/dashboards/Monitoring/PageHeader.js","content/dashboards/Monitoring/ResourcesAlarmChart.js","content/dashboards/Monitoring/ResourcesAlarm.js","content/dashboards/Monitoring/HealthStatusChart.js","content/dashboards/Monitoring/HealthStatus.js","content/dashboards/Monitoring/DatacenterClusters.js","content/dashboards/Monitoring/VirtualServers.js","content/dashboards/Monitoring/ActiveServersChart.js","content/dashboards/Monitoring/ActiveServers.js","content/dashboards/Monitoring/DataCenters.js","content/dashboards/Monitoring/CpuUsage.js","content/dashboards/Monitoring/UsageChart.js","content/dashboards/Monitoring/StorageUsage.js","content/dashboards/Monitoring/MemoryUsage.js","content/dashboards/Monitoring/index.js","components/Label/index.js","components/PageTitleWrapper/index.js"],"names":["PageHeader","t","useTranslation","useState","pending","setPending","Grid","container","justifyContent","alignItems","item","Typography","variant","component","sx","pb","color","fontWeight","LoadingButton","mt","xs","md","onClick","ResourcesAlarmChart","dataProp","data","labels","rest","theme","useTheme","datasets","label","backgroundColor","previous","borderColor","palette","primary","main","pointBorderWidth","pointRadius","pointHoverRadius","type","current","colors","error","lineTension","options","responsive","maintainAspectRatio","cornerRadius","animation","legend","display","layout","padding","scales","xAxes","gridLines","drawBorder","ticks","beginAtZero","min","maxTicksLimit","yAxes","tooltips","enabled","hover","mode","intersect","CardHeaderWrapper","experimentalStyled","CardHeader","ResourcesAlarmChartWrapper","ResourcesAlarm","open","setOpen","Card","action","Button","size","title","subheader","formatDistance","subMinutes","Date","addSuffix","Divider","CardContent","Box","height","Collapse","in","Alert","IconButton","aria-label","fontSize","severity","HealthStatusChart","map","dataset","borderWidth","hoverBorderWidth","success","lighter","hoverBackgroundColor","light","alpha","cutoutPercentage","HealthStatusChartWrapper","BoxChartWrapperText","warning","AvatarSuccess","Avatar","spacing","AvatarError","IconButtonWrapper","black","HealthStatus","p","sm","mr","className","flexGrow","flexDirection","pr","List","disablePadding","width","ListItem","disableGutters","ListItemText","primaryTypographyProps","Text","ml","TextfieldWrapper","white","CardIndicatorWrapper","CardActionsWrapper","CardActions","IconWrapper","AvatarAddWrapper","CardAddAction","DatacenterClusters","clusters","value","badge","text","sorts","actionRef","useRef","actionRef1","openCluster","setOpenMenuCluster","cluster","setCluster","openSort","setOpenMenuSort","sort","setSort","ref","endIcon","Menu","anchorEl","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","_cluster","MenuItem","Label","TextField","InputProps","startAdornment","InputAdornment","position","placeholder","pt","_sort","startIcon","lg","background","info","px","textAlign","style","src","alt","gutterBottom","Tooltip","arrow","CardActionArea","DotError","DotSuccess","SwitchSuccess","Switch","VirtualServers","server","state1","setState1","state2","setState2","lineHeight","ListItemAvatar","minWidth","mx","orientation","flexItem","checked","onChange","event","target","name","ActiveServersChart","pointBorderColor","common","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverColor","pointHoverBorderWidth","pointBackgroundColor","borderDash","barThickness","maxBarThickness","barPercentage","categoryPercentage","fontColor","secondary","caretSize","displayColors","yPadding","xPadding","bodySpacing","titleFontSize","titleFontColor","bodyFontColor","footerFontColor","ImageWrapper","ActiveServersChartWrapper","ListItemWrapper","ActiveServers","button","deFlag","secondaryTypographyProps","align","noWrap","usFlag","esFlag","frFlag","DotLegend","DataCenters","projection","projectionConfig","rotate","scale","geography","geographies","geo","fill","stroke","rsmKey","coordinates","placement","r","my","CpuUsage","py","mb","margin","nrOfLevels","hideText","needleColor","needleBaseColor","arcWidth","arcPadding","percent","UsageChart","UsageChartWrapper","StorageUsage","dark","MemoryUsage","DashboardMonitoring","ContentWrapper","PageTitleWrapper","Container","maxWidth","direction","Footer","LabelWrapper","typography","pxToRem","general","borderRadius","children","PageTitle"],"mappings":"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","file":"static/js/53.5cea90f9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport LoadingButton from '@material-ui/lab/LoadingButton';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n\n  const [pending, setPending] = useState(false);\n  function handleClick() {\n    setPending(true);\n  }\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h2\" component=\"h2\" sx={{ pb: 1 }}>\n          {t('Monitoring')}\n        </Typography>\n        <Typography variant=\"h4\" color=\"text.secondary\" fontWeight=\"normal\">\n          {t(\n            'This dashboard shows a live status for all your servers and database clusters!'\n          )}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <LoadingButton\n          sx={{ mt: { xs: 2, md: 0 } }}\n          onClick={handleClick}\n          pending={pending}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          {t('Refresh view')}\n        </LoadingButton>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nconst ResourcesAlarmChart = ({ data: dataProp, labels, ...rest }) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'Patients',\n        backgroundColor: 'transparent',\n        data: dataProp.previous,\n        borderColor: theme.palette.primary.main,\n        pointBorderWidth: 0,\n        pointRadius: 0,\n        pointHoverRadius: 0,\n        type: 'line'\n      },\n      {\n        label: 'Consultations',\n        backgroundColor: 'transparent',\n        data: dataProp.current,\n        borderColor: theme.colors.error.main,\n        pointBorderWidth: 0,\n        pointRadius: 0,\n        pointHoverRadius: 0,\n        lineTension: 0.01\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cornerRadius: 6,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            display: false,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: false\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true\n    }\n  };\n\n  return (\n    <div {...rest}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nResourcesAlarmChart.propTypes = {\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default ResourcesAlarmChart;\n","import { useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Alert,\n  Collapse,\n  IconButton,\n  Divider,\n  Box\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { formatDistance, subMinutes } from 'date-fns';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ResourcesAlarmChart from './ResourcesAlarmChart';\n\nconst CardHeaderWrapper = experimentalStyled(CardHeader)(\n  () => `\n    .MuiCardHeader-action {\n      align-self: center;\n      margin: 0;\n    }\n`\n);\n\nconst ResourcesAlarmChartWrapper = experimentalStyled(ResourcesAlarmChart)(\n  () => `\n    height: 150px;\n`\n);\n\nfunction ResourcesAlarm() {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(true);\n\n  const status = {\n    month: {\n      current: [\n        22,\n        40,\n        37,\n        14,\n        34,\n        13,\n        31,\n        30,\n        15,\n        29,\n        25,\n        39,\n        21,\n        26,\n        19,\n        16,\n        20,\n        36,\n        27,\n        18\n      ],\n      previous: [\n        32,\n        32,\n        32,\n        18,\n        18,\n        18,\n        24,\n        14,\n        24,\n        28,\n        28,\n        28,\n        31,\n        31,\n        31,\n        21,\n        21,\n        21,\n        15,\n        15,\n        15\n      ]\n    }\n  };\n\n  const month = [\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    '11',\n    '12',\n    '13',\n    '14',\n    '15',\n    '16',\n    '17',\n    '18',\n    '19',\n    '20'\n  ];\n\n  return (\n    <Card>\n      <CardHeaderWrapper\n        action={\n          <Button variant=\"contained\" size=\"small\">\n            {t('Run diagnostics')}\n          </Button>\n        }\n        title={t('Resources Alarm')}\n        subheader={\n          <>\n            {t('Server load snapshot from')}{' '}\n            {formatDistance(subMinutes(new Date(), 13), new Date(), {\n              addSuffix: true\n            })}\n          </>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Box height={150}>\n          <ResourcesAlarmChartWrapper data={status.month} labels={month} />\n        </Box>\n\n        <Collapse in={open}>\n          <Alert\n            action={\n              <IconButton\n                aria-label=\"close\"\n                color=\"inherit\"\n                size=\"small\"\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                <CloseIcon fontSize=\"inherit\" />\n              </IconButton>\n            }\n            severity=\"error\"\n          >\n            {t('Your server is overloaded, fix it as soon as possible!')}\n          </Alert>\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ResourcesAlarm;\n","import PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { alpha, useTheme } from '@material-ui/core';\n\nconst HealthStatusChart = ({ data: dataProp, ...rest }) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map((dataset) => ({\n      ...dataset,\n      borderWidth: 0,\n      hoverBorderWidth: 0,\n      backgroundColor: [\n        theme.colors.success.main,\n        theme.colors.success.lighter\n      ],\n      hoverBackgroundColor: [\n        theme.colors.success.light,\n        alpha(theme.colors.success.lighter, 0.3)\n      ]\n    })),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 60,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: false\n    }\n  };\n\n  return <Doughnut data={data} options={options} {...rest} />;\n};\n\nHealthStatusChart.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default HealthStatusChart;\n","import {\n  Button,\n  Card,\n  CardHeader,\n  Typography,\n  Box,\n  List,\n  ListItemText,\n  ListItem,\n  IconButton,\n  Avatar,\n  Grid\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport HealthStatusChart from './HealthStatusChart';\nimport RefreshTwoToneIcon from '@material-ui/icons/RefreshTwoTone';\nimport CloseTwoToneIcon from '@material-ui/icons/CloseTwoTone';\nimport CheckTwoToneIcon from '@material-ui/icons/CheckTwoTone';\nimport Text from 'src/components/Text';\n\nconst HealthStatusChartWrapper = experimentalStyled(HealthStatusChart)(\n  ({ theme }) => `\n    width: 130px;\n`\n);\n\nconst BoxChartWrapperText = experimentalStyled(Box)(\n  ({ theme }) => `\n    position: relative;\n    width: 130px;\n    height: 130px;\n    \n    .ChartText {\n      color: ${theme.colors.warning.main};\n      font-weight: bold;\n      position: absolute;\n      height: 40px;\n      width: 40px;\n      top: 50%;\n      left: 50%;\n      margin: -20px 0 0 -20px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n`\n);\n\nconst AvatarSuccess = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.lighter};\n      color: ${theme.colors.success.main};\n      width: ${theme.spacing(4)};\n      height: ${theme.spacing(4)};\n      margin-right: ${theme.spacing(1)};\n`\n);\n\nconst AvatarError = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.error.lighter};\n      color: ${theme.colors.error.main};\n      width: ${theme.spacing(4)};\n      height: ${theme.spacing(4)};\n      margin-right: ${theme.spacing(1)};\n`\n);\n\nconst IconButtonWrapper = experimentalStyled(IconButton)(\n  ({ theme }) => `\n    color: ${theme.colors.alpha.black[70]};\n    border-radius: 100px;\n    \n    :hover {\n      background-color: ${theme.colors.alpha.black[10]};\n      color: ${theme.colors.alpha.black[100]};\n    }\n`\n);\n\nfunction HealthStatus() {\n  const { t } = useTranslation();\n\n  const data = {\n    value: {\n      datasets: [\n        {\n          data: [82, 18]\n        }\n      ]\n    }\n  };\n\n  return (\n    <Card sx={{ height: '100%' }}>\n      <CardHeader\n        action={<Button>{t('Check status')}</Button>}\n        title={t('Health Status')}\n      />\n      <Box sx={{ p: 4 }}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={12} sm={4}>\n            <BoxChartWrapperText sx={{ mr: 3 }}>\n              <div className=\"ChartText\">\n                <IconButtonWrapper>\n                  <RefreshTwoToneIcon />\n                </IconButtonWrapper>\n              </div>\n              <HealthStatusChartWrapper data={data.value} />\n            </BoxChartWrapperText>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <Box\n              display=\"flex\"\n              alignItems=\"flex-start\"\n              flexGrow={1}\n              flexDirection=\"column\"\n            >\n              <Box sx={{ pb: 2 }}>\n                <Typography\n                  color=\"text.primary\"\n                  variant=\"h1\"\n                  sx={{ pr: 0.5, display: 'inline-flex' }}\n                >\n                  82\n                </Typography>\n                <Typography\n                  color=\"text.secondary\"\n                  variant=\"h3\"\n                  sx={{ pr: 2, display: 'inline-flex' }}\n                >\n                  /100\n                </Typography>\n              </Box>\n              <List disablePadding sx={{ width: '100%' }}>\n                <ListItem disableGutters sx={{ pb: 0 }}>\n                  <ListItemText\n                    primary={t('High accuracy test run')}\n                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                  />\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"success\">\n                      <b>{t('Ok')}</b>\n                    </Text>\n                    <AvatarSuccess sx={{ ml: 1 }}>\n                      <CheckTwoToneIcon />\n                    </AvatarSuccess>\n                  </Box>\n                </ListItem>\n                <ListItem disableGutters sx={{ pb: 0 }}>\n                  <ListItemText\n                    primary={t('Storage capacity')}\n                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                  />\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"success\">\n                      <b>{t('Ok')}</b>\n                    </Text>\n                    <AvatarSuccess sx={{ ml: 1 }}>\n                      <CheckTwoToneIcon />\n                    </AvatarSuccess>\n                  </Box>\n                </ListItem>\n                <ListItem disableGutters sx={{ pb: 0 }}>\n                  <ListItemText\n                    primary={t('Performance test')}\n                    primaryTypographyProps={{ variant: 'subtitle2' }}\n                  />\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text color=\"error\">\n                      <b>{t('Failed')}</b>\n                    </Text>\n                    <AvatarError sx={{ ml: 1 }}>\n                      <CloseTwoToneIcon />\n                    </AvatarError>\n                  </Box>\n                </ListItem>\n              </List>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n}\n\nexport default HealthStatus;\n","import { useRef, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Box,\n  CardContent,\n  Menu,\n  MenuItem,\n  Grid,\n  Typography,\n  Avatar,\n  CardActionArea,\n  Tooltip,\n  InputAdornment,\n  TextField,\n  CardActions,\n  Divider,\n  useTheme\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport AddCircleTwoToneIcon from '@material-ui/icons/AddCircleTwoTone';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport AddTwoToneIcon from '@material-ui/icons/AddTwoTone';\nimport Label from 'src/components/Label';\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\nimport Text from 'src/components/Text';\nimport CheckTwoToneIcon from '@material-ui/icons/CheckTwoTone';\nimport RefreshTwoToneIcon from '@material-ui/icons/RefreshTwoTone';\n\nconst TextfieldWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n    .MuiOutlinedInput-root {\n      background: ${theme.colors.alpha.white[100]};\n    }\n`\n);\n\nconst CardIndicatorWrapper = experimentalStyled(Card)(\n  ({ theme }) => `\n    position: relative;\n    \n    .MuiCard-indicator {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      height: 5px;\n    }\n`\n);\n\nconst CardActionsWrapper = experimentalStyled(CardActions)(\n  ({ theme }) => `\n    background: ${theme.colors.alpha.black[5]};\n    padding: ${theme.spacing(2)} ${theme.spacing(2)};\n`\n);\n\nconst IconWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n    display: flex;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst AvatarAddWrapper = experimentalStyled(Avatar)(\n  ({ theme }) => `\n        background: ${theme.colors.alpha.black[5]};\n        color: ${theme.colors.primary.main};\n        width: ${theme.spacing(8)};\n        height: ${theme.spacing(8)};\n`\n);\n\nconst CardAddAction = experimentalStyled(Card)(\n  ({ theme }) => `\n        border: ${theme.colors.primary.main} dashed 1px;\n        height: 100%;\n        color: ${theme.colors.primary.main};\n        \n        .MuiCardActionArea-root {\n          height: 100%;\n          justify-content: center;\n          align-items: center;\n          display: flex;\n        }\n        \n        .MuiTouchRipple-root {\n          opacity: .2;\n        }\n        \n        &:hover {\n          border-color: ${theme.colors.alpha.black[100]};\n        }\n`\n);\n\nfunction DatacenterClusters() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const clusters = [\n    {\n      value: '1',\n      badge: '15',\n      text: t('All clusters')\n    },\n    {\n      value: '2',\n      badge: '25',\n      text: t('Oracle')\n    },\n    {\n      value: '3',\n      badge: '35',\n      text: t('IBM')\n    },\n    {\n      value: '4',\n      badge: '45',\n      text: t('Microsoft')\n    }\n  ];\n  const sorts = [\n    {\n      value: '1',\n      text: t('Sort by name')\n    },\n    {\n      value: '2',\n      text: t('Sort by name')\n    },\n    {\n      value: '3',\n      text: t('Sort by status')\n    },\n    {\n      value: '4',\n      text: t('Sort by hosts')\n    }\n  ];\n\n  const actionRef = useRef(null);\n  const actionRef1 = useRef(null);\n  const [openCluster, setOpenMenuCluster] = useState(false);\n  const [cluster, setCluster] = useState(clusters[0].text);\n  const [openSort, setOpenMenuSort] = useState(false);\n  const [sort, setSort] = useState('Sort by...');\n\n  return (\n    <>\n      <Typography variant=\"h3\" sx={{ pb: 3 }}>\n        {t('Datacenter Clusters')}\n      </Typography>\n      <Box\n        display={{ xs: 'block', md: 'flex' }}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ pb: 3 }}\n      >\n        <Box display=\"flex\" alignItems=\"center\">\n          <Button\n            sx={{ mr: 1 }}\n            variant=\"contained\"\n            color=\"secondary\"\n            ref={actionRef}\n            onClick={() => setOpenMenuCluster(true)}\n            endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n          >\n            {cluster}\n          </Button>\n          <Menu\n            anchorEl={actionRef.current}\n            onClose={() => setOpenMenuCluster(false)}\n            open={openCluster}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            {clusters.map((_cluster) => (\n              <MenuItem\n                key={_cluster.value}\n                onClick={() => setCluster(_cluster.text)}\n              >\n                {_cluster.text}\n                <Box sx={{ ml: 1 }}>\n                  <Label color=\"success\">{_cluster.badge}</Label>\n                </Box>\n              </MenuItem>\n            ))}\n          </Menu>\n          <TextfieldWrapper>\n            <TextField\n              size=\"small\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchTwoToneIcon />\n                  </InputAdornment>\n                )\n              }}\n              placeholder={t('Search...')}\n            />\n          </TextfieldWrapper>\n        </Box>\n        <Box sx={{ pt: { xs: 2, md: 0 } }}>\n          <Button\n            variant=\"outlined\"\n            ref={actionRef1}\n            onClick={() => setOpenMenuSort(true)}\n            endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n          >\n            {sort}\n          </Button>\n          <Menu\n            anchorEl={actionRef1.current}\n            onClose={() => setOpenMenuSort(false)}\n            open={openSort}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n          >\n            {sorts.map((_sort) => (\n              <MenuItem key={_sort.value} onClick={() => setSort(_sort.text)}>\n                {_sort.text}\n              </MenuItem>\n            ))}\n          </Menu>\n          <Button\n            sx={{ ml: 1 }}\n            variant=\"contained\"\n            startIcon={<AddCircleTwoToneIcon />}\n          >\n            {t('Create new cluster')}\n          </Button>\n        </Box>\n      </Box>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6} md={5} lg={4}>\n          <CardIndicatorWrapper>\n            <Box\n              className=\"MuiCard-indicator\"\n              sx={{ background: `${theme.colors.info.main}` }}\n            />\n            <CardContent sx={{ pb: 4, pt: 7, px: 3, textAlign: 'center' }}>\n              <img\n                style={{ height: '30px' }}\n                src=\"/static/images/placeholders/logo/netflix-logo.jpg\"\n                alt=\"...\"\n              />\n              <Typography variant=\"h3\" sx={{ pt: 2 }} gutterBottom>\n                Mainframe Analytics Cluster for Visitors and Page Views\n              </Typography>\n              <Typography variant=\"subtitle2\">\n                {t('Maintained for')} Netflix Inc.\n              </Typography>\n              <Button variant=\"outlined\" color=\"primary\" sx={{ mt: 3 }}>\n                {t('View details')}\n              </Button>\n            </CardContent>\n            <Divider />\n            <CardActionsWrapper\n              sx={{ display: 'flex', justifyContent: 'space-between' }}\n            >\n              <Typography variant=\"subtitle1\">\n                <Text color=\"black\">\n                  <b>7</b>\n                </Text>{' '}\n                {t('hosts')}\n              </Typography>\n              <Typography\n                sx={{ display: 'flex', alignItems: 'center' }}\n                variant=\"subtitle1\"\n              >\n                <IconWrapper sx={{ color: `${theme.colors.success.main}` }}>\n                  <CheckTwoToneIcon />\n                </IconWrapper>\n                <Text color=\"success\">{t('available')}</Text>\n              </Typography>\n            </CardActionsWrapper>\n          </CardIndicatorWrapper>\n        </Grid>\n        <Grid item xs={12} sm={6} md={5} lg={4}>\n          <CardIndicatorWrapper>\n            <Box\n              className=\"MuiCard-indicator\"\n              sx={{ background: `${theme.colors.success.main}` }}\n            />\n            <CardContent sx={{ pb: 4, pt: 7, px: 3, textAlign: 'center' }}>\n              <img\n                style={{ height: '30px' }}\n                src=\"/static/images/placeholders/logo/google-logo.jpg\"\n                alt=\"...\"\n              />\n              <Typography variant=\"h3\" sx={{ pt: 2 }} gutterBottom>\n                Main Website Sales Monitoring Cluster Database\n              </Typography>\n              <Typography variant=\"subtitle2\">\n                {t('Maintained for')} Google Corp.\n              </Typography>\n              <Button variant=\"outlined\" color=\"primary\" sx={{ mt: 3 }}>\n                {t('View details')}\n              </Button>\n            </CardContent>\n            <Divider />\n            <CardActionsWrapper\n              sx={{ display: 'flex', justifyContent: 'space-between' }}\n            >\n              <Typography variant=\"subtitle1\">\n                <Text color=\"black\">\n                  <b>15</b>\n                </Text>{' '}\n                {t('hosts')}\n              </Typography>\n              <Typography\n                sx={{ display: 'flex', alignItems: 'center' }}\n                variant=\"subtitle1\"\n              >\n                <IconWrapper sx={{ color: `${theme.colors.warning.main}` }}>\n                  <RefreshTwoToneIcon />\n                </IconWrapper>\n                <Text color=\"warning\">{t('provisioning')}</Text>\n              </Typography>\n            </CardActionsWrapper>\n          </CardIndicatorWrapper>\n        </Grid>\n        <Grid item xs={12} sm={12} md={2} lg={4}>\n          <Tooltip arrow title={t('Click to add a new cluster')}>\n            <CardAddAction>\n              <CardActionArea sx={{ px: 1 }}>\n                <CardContent>\n                  <AvatarAddWrapper>\n                    <AddTwoToneIcon fontSize=\"large\" />\n                  </AvatarAddWrapper>\n                </CardContent>\n              </CardActionArea>\n            </CardAddAction>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default DatacenterClusters;\n","import { useState } from 'react';\nimport {\n  Button,\n  Card,\n  Box,\n  Grid,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Divider,\n  IconButton,\n  Tooltip,\n  Switch,\n  alpha\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Label from 'src/components/Label';\nimport RouterTwoToneIcon from '@material-ui/icons/RouterTwoTone';\nimport DnsTwoToneIcon from '@material-ui/icons/DnsTwoTone';\nimport MemoryTwoToneIcon from '@material-ui/icons/MemoryTwoTone';\nimport ShareTwoToneIcon from '@material-ui/icons/ShareTwoTone';\nimport CachedTwoToneIcon from '@material-ui/icons/CachedTwoTone';\n\nconst DotError = experimentalStyled('span')(\n  ({ theme }) => `\n    border-radius: 22px;\n    background: ${theme.colors.error.main};\n    width: ${theme.spacing(1.1)};\n    height: ${theme.spacing(1.1)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst DotSuccess = experimentalStyled('span')(\n  ({ theme }) => `\n    border-radius: 22px;\n    background: ${theme.colors.success.main};\n    width: ${theme.spacing(1.1)};\n    height: ${theme.spacing(1.1)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst SwitchSuccess = experimentalStyled(Switch)(\n  ({ theme }) => `\n  .MuiSwitch-colorPrimary.Mui-checked + .MuiSwitch-track,\n    .MuiSwitch-colorPrimary.Mui-checked .MuiSwitch-thumb {\n      background: ${theme.colors.success.main};\n    }\n    \n    .MuiSwitch-colorPrimary.Mui-checked {\n      color: ${theme.colors.success.main};\n    }\n    \n    .MuiSwitch-colorPrimary.Mui-checked:hover {\n      background-color: ${alpha(theme.colors.success.main, 0.1)};\n    }\n`\n);\n\nfunction VirtualServers() {\n  const { t } = useTranslation();\n\n  const [state1, setState1] = useState({\n    server: true\n  });\n\n  const [state2, setState2] = useState({\n    server: false\n  });\n\n  const serverActivate1 = (event) => {\n    setState1({\n      ...state1,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const serverActivate2 = (event) => {\n    setState2({\n      ...state2,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return (\n    <>\n      <Typography variant=\"h3\" sx={{ pb: 3 }}>\n        {t('Virtual Servers')}\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Card>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              p={2}\n            >\n              <Typography variant=\"h5\" lineHeight={1}>\n                App Staging\n              </Typography>\n              <Label color=\"success\">\n                <DotSuccess />\n                {t('active')}\n              </Label>\n            </Box>\n            <Box sx={{ px: 2, pb: 2 }}>\n              <List disablePadding>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar sx={{ minWidth: 36 }}>\n                    <RouterTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('IP Address')} />\n                  <Typography variant=\"subtitle2\">192.168.1.4</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar sx={{ minWidth: 36 }}>\n                    <DnsTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('CPU')} />\n                  <Typography variant=\"subtitle2\">12 cores</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar sx={{ minWidth: 36 }}>\n                    <MemoryTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('RAM')} />\n                  <Typography variant=\"subtitle2\">32.568 MB</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n              </List>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                pt={2}\n                justifyContent=\"space-between\"\n              >\n                <Box>\n                  <Button variant=\"text\">{t('More information')}</Button>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Tooltip arrow title={t('Share')}>\n                    <IconButton sx={{ ml: 1 }} size=\"small\" color=\"primary\">\n                      <ShareTwoToneIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip arrow title={t('Refresh')}>\n                    <IconButton sx={{ ml: 1 }} size=\"small\" color=\"primary\">\n                      <CachedTwoToneIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Divider sx={{ mx: 2 }} orientation=\"vertical\" flexItem />\n                  <SwitchSuccess\n                    checked={state1.server}\n                    onChange={serverActivate1}\n                    color=\"primary\"\n                    name=\"server\"\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Card>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              p={2}\n            >\n              <Typography variant=\"h5\" lineHeight={1}>\n                Ubuntu Server\n              </Typography>\n              <Label color=\"error\">\n                <DotError />\n                {t('inactive')}\n              </Label>\n            </Box>\n            <Box sx={{ px: 2, pb: 2 }}>\n              <List disablePadding>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar sx={{ minWidth: 36 }}>\n                    <RouterTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('IP Address')} />\n                  <Typography variant=\"subtitle2\">185.155.188.53</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar sx={{ minWidth: 36 }}>\n                    <DnsTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('CPU')} />\n                  <Typography variant=\"subtitle2\">8 cores</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar sx={{ minWidth: 36 }}>\n                    <MemoryTwoToneIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={t('RAM')} />\n                  <Typography variant=\"subtitle2\">16.586 MB</Typography>\n                </ListItem>\n                <Divider component=\"li\" />\n              </List>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                pt={2}\n                justifyContent=\"space-between\"\n              >\n                <Box>\n                  <Button variant=\"text\">{t('More information')}</Button>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Tooltip arrow title={t('Share')}>\n                    <IconButton sx={{ ml: 1 }} size=\"small\" color=\"primary\">\n                      <ShareTwoToneIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip arrow title={t('Refresh')}>\n                    <IconButton sx={{ ml: 1 }} size=\"small\" color=\"primary\">\n                      <CachedTwoToneIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Divider sx={{ mx: 2 }} orientation=\"vertical\" flexItem />\n                  <SwitchSuccess\n                    checked={state2.server}\n                    onChange={serverActivate2}\n                    color=\"primary\"\n                    name=\"server\"\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default VirtualServers;\n","import PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nconst ActiveServersChart = ({ data: dataProp, labels, ...rest }) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'Previous Period',\n        backgroundColor: 'transparent',\n        data: dataProp.previous,\n        borderColor: theme.palette.primary.main,\n        pointBorderColor: theme.palette.common.white,\n        pointBorderWidth: 3,\n        pointRadius: 6,\n        pointHoverRadius: 10,\n        pointHoverBackgroundColor: theme.palette.primary.main,\n        pointHoverBorderColor: theme.palette.common.white,\n        pointHoverColor: theme.palette.primary.main,\n        pointHoverBorderWidth: 4,\n        pointBackgroundColor: theme.palette.primary.main,\n        borderDash: [5, 10],\n        type: 'line'\n      },\n      {\n        label: 'Current Period',\n        backgroundColor: theme.palette.warning.main,\n        data: dataProp.current,\n        barThickness: 18,\n        maxBarThickness: 20,\n        barPercentage: 0.8,\n        categoryPercentage: 0.8\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cornerRadius: 66,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            display: false,\n\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            display: false,\n            padding: 12,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 4,\n            maxTicksLimit: 8\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 6,\n      displayColors: true,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 4,\n      bodySpacing: 10,\n      titleFontSize: 16,\n      borderColor: theme.palette.common.black,\n      backgroundColor: theme.palette.common.black,\n      titleFontColor: theme.palette.common.white,\n      bodyFontColor: theme.palette.common.white,\n      footerFontColor: theme.palette.common.white\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true\n    }\n  };\n\n  return (\n    <div {...rest}>\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\nActiveServersChart.propTypes = {\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default ActiveServersChart;\n","import {\n  Card,\n  CardHeader,\n  Grid,\n  Divider,\n  Alert,\n  List,\n  ListItem,\n  Box,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Label from 'src/components/Label';\nimport Text from 'src/components/Text';\n\nimport deFlag from 'country-flag-icons/3x2/DE.svg';\nimport usFlag from 'country-flag-icons/3x2/US.svg';\nimport esFlag from 'country-flag-icons/3x2/ES.svg';\nimport frFlag from 'country-flag-icons/3x2/FR.svg';\nimport ActiveServersChart from './ActiveServersChart';\n\nconst ImageWrapper = experimentalStyled('img')(\n  ({ theme }) => `\n        width: 46px;\n        margin-right: ${theme.spacing(1)};\n`\n);\n\nconst ActiveServersChartWrapper = experimentalStyled(ActiveServersChart)(\n  ({ theme }) => `\n        height: 200px;      \n`\n);\n\nconst ListItemWrapper = experimentalStyled(ListItem)(\n  ({ theme }) => `\n        border-radius: 0;\n        padding: ${theme.spacing(2)};\n`\n);\n\nfunction ActiveServers() {\n  const { t } = useTranslation();\n\n  const referrals = {\n    current: [1008, 940, 1010, 821, 1035, 1030, 957, 926, 993, 1021, 997, 879],\n    previous: [648, 745, 897, 743, 635, 842, 811, 696, 878, 987, 747, 731]\n  };\n\n  const generic = {\n    month: {\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader title={t('Active Servers')} />\n      <Divider />\n      <Grid container>\n        <Grid item xs={12} md>\n          <List disablePadding component=\"div\">\n            <ListItemWrapper button>\n              <ListItemAvatar\n                sx={{\n                  minWidth: '36px',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ImageWrapper alt=\"Germany\" src={deFlag} />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"Frankfurt\"\n                primaryTypographyProps={{ variant: 'h5' }}\n                secondary=\"material-ui.com\"\n                secondaryTypographyProps={{ variant: 'subtitle1' }}\n              />\n\n              <Box sx={{ textAlign: 'right' }}>\n                <Label color=\"success\">{t('active')}</Label>\n                <Typography\n                  align=\"right\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  noWrap\n                  sx={{ pt: 0.5 }}\n                >\n                  {t('Page Load')}:{' '}\n                  <Text color=\"black\">\n                    <b>36ms</b>\n                  </Text>\n                </Typography>\n              </Box>\n            </ListItemWrapper>\n            <Divider />\n            <ListItemWrapper button>\n              <ListItemAvatar\n                sx={{\n                  minWidth: '36px',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ImageWrapper alt=\"USA\" src={usFlag} />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"San Francisco\"\n                primaryTypographyProps={{ variant: 'h5' }}\n                secondary=\"google.com\"\n                secondaryTypographyProps={{ variant: 'subtitle1' }}\n              />\n\n              <Box sx={{ textAlign: 'right' }}>\n                <Label color=\"warning\">{t('provisioning')}</Label>\n                <Typography\n                  align=\"right\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  noWrap\n                  sx={{ pt: 0.5 }}\n                >\n                  {t('Page Load')}:{' '}\n                  <Text color=\"black\">\n                    <b>255ms</b>\n                  </Text>\n                </Typography>\n              </Box>\n            </ListItemWrapper>\n            <Divider />\n            <ListItemWrapper button>\n              <ListItemAvatar\n                sx={{\n                  minWidth: '36px',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ImageWrapper alt=\"Spain\" src={esFlag} />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"Barcelona\"\n                primaryTypographyProps={{ variant: 'h5' }}\n                secondary=\"example.xyz\"\n                secondaryTypographyProps={{ variant: 'subtitle1' }}\n              />\n\n              <Box sx={{ textAlign: 'right' }}>\n                <Label color=\"error\">{t('high risk')}</Label>\n                <Typography\n                  align=\"right\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  noWrap\n                  sx={{ pt: 0.5 }}\n                >\n                  {t('Page Load')}:{' '}\n                  <Text color=\"black\">\n                    <b>387ms</b>\n                  </Text>\n                </Typography>\n              </Box>\n            </ListItemWrapper>\n            <Divider />\n            <ListItemWrapper button>\n              <ListItemAvatar\n                sx={{\n                  minWidth: '36px',\n                  display: 'flex',\n                  alignItems: 'center'\n                }}\n              >\n                <ImageWrapper alt=\"USA\" src={frFlag} />\n              </ListItemAvatar>\n              <ListItemText\n                primary=\"Toulouse\"\n                primaryTypographyProps={{ variant: 'h5' }}\n                secondary=\"city.example\"\n                secondaryTypographyProps={{ variant: 'subtitle1' }}\n              />\n\n              <Box sx={{ textAlign: 'right' }}>\n                <Label color=\"error\">{t('high risk')}</Label>\n                <Typography\n                  align=\"right\"\n                  variant=\"body2\"\n                  color=\"text.secondary\"\n                  noWrap\n                  sx={{ pt: 0.5 }}\n                >\n                  {t('Page Load')}:{' '}\n                  <Text color=\"black\">\n                    <b>456ms</b>\n                  </Text>\n                </Typography>\n              </Box>\n            </ListItemWrapper>\n          </List>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem />\n        <Grid item xs={12} md>\n          <Box\n            sx={{\n              p: 3,\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            <Alert severity=\"warning\">\n              {t('Too many servers have problems starting!')}\n            </Alert>\n\n            <ActiveServersChartWrapper\n              data={referrals}\n              labels={generic.month.labels}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nexport default ActiveServers;\n","import {\n  Card,\n  CardHeader,\n  Box,\n  Typography,\n  Divider,\n  Tooltip,\n  useTheme\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker\n} from 'react-simple-maps';\n\nconst DotLegend = experimentalStyled('span')(\n  ({ theme }) => `\n    border-radius: 22px;\n    width: ${theme.spacing(1.5)};\n    height: ${theme.spacing(1.5)};\n    display: inline-block;\n    margin-right: ${theme.spacing(0.5)};\n`\n);\n\nfunction DataCenters() {\n  const { t } = useTranslation();\n  const geoUrl =\n    'https://raw.githubusercontent.com/leakyMirror/map-of-europe/master/TopoJSON/europe.topojson';\n  const theme = useTheme();\n\n  return (\n    <Card sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n      <CardHeader title={t('Europe Data Centers')} />\n      <Divider />\n      <ComposableMap\n        projection=\"geoAzimuthalEqualArea\"\n        projectionConfig={{\n          rotate: [-10.0, -48.5, 0],\n          scale: 1350\n        }}\n      >\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill={theme.colors.alpha.black[100]}\n                stroke={theme.colors.alpha.white[30]}\n              />\n            ))\n          }\n        </Geographies>\n        <Marker coordinates={[-3.4, 52.3]}>\n          <Tooltip placement=\"top\" arrow title=\"United Kingdom\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[3.12, 48.37]}>\n          <Tooltip placement=\"top\" arrow title=\"France\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[10.51, 51.72]}>\n          <Tooltip placement=\"top\" arrow title=\"Germany 1\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[10.54, 51.74]}>\n          <Tooltip placement=\"top\" arrow title=\"Germany 2\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[18.5, 51.39]}>\n          <Tooltip placement=\"top\" arrow title=\"Poland\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[-4.2, 39.68]}>\n          <Tooltip placement=\"top\" arrow title=\"Spain\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[14.18, 57.83]}>\n          <Tooltip placement=\"top\" arrow title=\"Sweden\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[27.88, 50.08]}>\n          <Tooltip placement=\"top\" arrow title=\"Ukraine\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[24.19, 44.87]}>\n          <Tooltip placement=\"top\" arrow title=\"Romania\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[10.15, 48.73]}>\n          <Tooltip placement=\"top\" arrow title=\"Germany 3\">\n            <circle r={12} fill={theme.colors.success.main} />\n          </Tooltip>\n        </Marker>\n        <Marker coordinates={[21.89, 49.03]}>\n          <Tooltip placement=\"top\" arrow title=\"Slovakia\">\n            <circle r={12} fill={theme.colors.error.main} />\n          </Tooltip>\n        </Marker>\n      </ComposableMap>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" my={2}>\n        <Typography\n          variant=\"subtitle1\"\n          color=\"text.primary\"\n          sx={{ mx: 1, display: 'flex', alignItems: 'center' }}\n        >\n          <DotLegend style={{ background: theme.colors.error.main }} />\n          {t('Highest downtime')}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          color=\"text.primary\"\n          sx={{ mx: 1, display: 'flex', alignItems: 'center' }}\n        >\n          <DotLegend style={{ background: theme.colors.success.main }} />\n          {t('Best Uptime')}\n        </Typography>\n      </Box>\n    </Card>\n  );\n}\n\nexport default DataCenters;\n","import { Card, Typography, Divider, Box, useTheme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport GaugeChart from 'react-gauge-chart';\nimport Text from 'src/components/Text';\n\nfunction CpuUsage() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  return (\n    <Card sx={{ py: 2, display: 'flex', alignItems: 'center', height: '100%' }}>\n      <Box sx={{ width: '100%' }}>\n        <Typography align=\"center\" variant=\"h3\" sx={{ mb: 2 }}>\n          {t('CPU Usage')}\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"h3\"\n          fontWeight=\"normal\"\n          color=\"text.secondary\"\n          gutterBottom\n        >\n          {t('Today')}\n        </Typography>\n        <GaugeChart\n          style={{ width: '90%', margin: '0 auto' }}\n          nrOfLevels={16}\n          hideText\n          colors={[\n            theme.colors.error.main,\n            theme.colors.warning.main,\n            theme.colors.success.main\n          ]}\n          needleColor={theme.colors.alpha.black[100]}\n          needleBaseColor={theme.colors.alpha.black[100]}\n          arcWidth={0.25}\n          arcPadding={0.02}\n          cornerRadius={3}\n          percent={0.59}\n        />\n        <Typography align=\"center\" variant=\"h1\">\n          59%\n        </Typography>\n        <Divider sx={{ mx: 3, mt: 2, mb: 4 }} />\n        <Typography\n          align=\"center\"\n          variant=\"h3\"\n          fontWeight=\"normal\"\n          color=\"text.secondary\"\n          gutterBottom\n        >\n          {t('Yesterday')}\n        </Typography>\n\n        <GaugeChart\n          style={{ width: '80%', margin: '0 auto' }}\n          nrOfLevels={16}\n          hideText\n          colors={[\n            theme.colors.primary.main,\n            theme.colors.primary.light,\n            theme.colors.primary.lighter\n          ]}\n          needleColor={theme.colors.alpha.black[100]}\n          needleBaseColor={theme.colors.alpha.black[100]}\n          arcWidth={0.2}\n          arcPadding={0.02}\n          cornerRadius={3}\n          percent={0.47}\n        />\n\n        <Typography align=\"center\" variant=\"h2\">\n          47% <Text color=\"success\">({t('good')})</Text>\n        </Typography>\n      </Box>\n    </Card>\n  );\n}\n\nexport default CpuUsage;\n","import PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst UsageChart = ({ data: dataProp, ...rest }) => {\n  const data = {\n    datasets: dataProp.datasets.map((dataset) => ({\n      ...dataset,\n      borderWidth: 0,\n      hoverBorderWidth: 0\n    })),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 60,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: false\n    }\n  };\n\n  return <Doughnut data={data} options={options} {...rest} />;\n};\n\nUsageChart.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default UsageChart;\n","import { alpha, Box, Card, Typography, useTheme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nimport UsageChart from './UsageChart';\n\nconst UsageChartWrapper = experimentalStyled(UsageChart)(\n  ({ theme }) => `\n    width: 120px;\n`\n);\n\nconst BoxChartWrapperText = experimentalStyled(Box)(\n  ({ theme }) => `\n    position: relative;\n    width: 120px;\n    height: 120px;\n    \n    .ChartText {\n      font-weight: bold;\n      position: absolute;\n      height: 40px;\n      width: 40px;\n      top: 50%;\n      left: 50%;\n      font-size: 19px;\n      margin: -20px 0 0 -20px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n`\n);\n\nfunction StorageUsage() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: [\n          theme.colors.error.main,\n          alpha(theme.colors.error.light, 0.15)\n        ],\n        hoverBackgroundColor: [\n          theme.colors.error.dark,\n          alpha(theme.colors.error.light, 0.25)\n        ],\n        data: [25, 75]\n      }\n    ]\n  };\n\n  return (\n    <Card\n      sx={{\n        px: { lg: 4, xs: 2, md: 3 },\n        py: { lg: 7.08, xs: 4 },\n        display: 'flex',\n        alignItems: 'center'\n      }}\n    >\n      <BoxChartWrapperText sx={{ mr: 3 }}>\n        <div className=\"ChartText\" style={{ color: theme.colors.error.main }}>\n          <span>25%</span>\n        </div>\n        <UsageChartWrapper data={data} />\n      </BoxChartWrapperText>\n      <Typography variant=\"h1\">{t('Storage Usage')}</Typography>\n    </Card>\n  );\n}\n\nexport default StorageUsage;\n","import { alpha, Box, Card, Typography, useTheme } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nimport UsageChart from './UsageChart';\n\nconst UsageChartWrapper = experimentalStyled(UsageChart)(\n  ({ theme }) => `\n    width: 120px;\n`\n);\n\nconst BoxChartWrapperText = experimentalStyled(Box)(\n  ({ theme }) => `\n    position: relative;\n    width: 120px;\n    height: 120px;\n    \n    .ChartText {\n      font-weight: bold;\n      position: absolute;\n      height: 40px;\n      width: 40px;\n      top: 50%;\n      left: 50%;\n      font-size: 19px;\n      margin: -20px 0 0 -20px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n`\n);\n\nfunction MemoryUsage() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: [\n          theme.colors.info.main,\n          alpha(theme.colors.info.light, 0.15)\n        ],\n        hoverBackgroundColor: [\n          theme.colors.info.dark,\n          alpha(theme.colors.info.light, 0.25)\n        ],\n        data: [79, 21]\n      }\n    ]\n  };\n\n  return (\n    <Card\n      sx={{\n        px: { lg: 4, xs: 2, md: 3 },\n        py: { lg: 7.08, xs: 4 },\n        display: 'flex',\n        alignItems: 'center'\n      }}\n    >\n      <BoxChartWrapperText sx={{ mr: 3 }}>\n        <div className=\"ChartText\" style={{ color: theme.colors.info.main }}>\n          <span>79%</span>\n        </div>\n        <UsageChartWrapper data={data} />\n      </BoxChartWrapperText>\n      <Typography variant=\"h1\">{t('Memory Usage')}</Typography>\n    </Card>\n  );\n}\n\nexport default MemoryUsage;\n","import ContentWrapper from 'src/components/ContentWrapper';\nimport PageHeader from './PageHeader';\nimport Footer from 'src/components/Footer';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\n\nimport { Container, Grid } from '@material-ui/core';\n\nimport ResourcesAlarm from './ResourcesAlarm';\nimport HealthStatus from './HealthStatus';\nimport DatacenterClusters from './DatacenterClusters';\nimport VirtualServers from './VirtualServers';\nimport ActiveServers from './ActiveServers';\nimport DataCenters from './DataCenters';\nimport CpuUsage from './CpuUsage';\nimport StorageUsage from './StorageUsage';\nimport MemoryUsage from './MemoryUsage';\n\nfunction DashboardMonitoring() {\n  return (\n    <ContentWrapper title=\"Monitoring Dashboard\">\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12} md={6}>\n            <ResourcesAlarm />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <HealthStatus />\n          </Grid>\n          <Grid item xs={12}>\n            <DatacenterClusters />\n          </Grid>\n          <Grid item xs={12}>\n            <VirtualServers />\n          </Grid>\n          <Grid item xs={12}>\n            <ActiveServers />\n          </Grid>\n          <Grid item xs={12} sm={6} md={5}>\n            <DataCenters />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CpuUsage />\n          </Grid>\n          <Grid item xs={12} sm={12} md={4}>\n            <Grid\n              container\n              direction=\"row\"\n              justifyContent=\"center\"\n              alignItems=\"stretch\"\n              spacing={3}\n            >\n              <Grid item xs={12} sm={6} md={12}>\n                <StorageUsage />\n              </Grid>\n              <Grid item xs={12} sm={6} md={12}>\n                <MemoryUsage />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </ContentWrapper>\n  );\n}\n\nexport default DashboardMonitoring;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelWrapper = experimentalStyled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className = '', color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { Container } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\nconst PageTitle = experimentalStyled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">{children}</Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n"],"sourceRoot":""}