{"version":3,"sources":["content/applications/JobsPlatform/PageHeader.js","content/applications/JobsPlatform/Sidebar.js","content/applications/JobsPlatform/Results.js","content/applications/JobsPlatform/index.js","components/Label/index.js","hooks/useRefMounted.js"],"names":["PageHeader","t","useTranslation","Typography","align","variant","component","sx","mb","fontWeight","color","AccordionSummaryWrapper","experimentalStyled","AccordionSummary","ListItemWrapper","ListItem","Sidebar","typeOfEmployment","id","amount","value","text","seniorityLevel","salaryRange","useState","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","checked2","setChecked2","handleToggle2","checked3","setChecked3","handleToggle3","Card","Accordion","defaultExpanded","expandIcon","AccordionDetails","p","List","map","py","px","button","onClick","ListItemIcon","minWidth","Checkbox","edge","tabIndex","disableRipple","ListItemText","primary","primaryTypographyProps","Label","Divider","Results","jobs","page","setPage","limit","setLimit","paginatedJobs","slice","applyPagination","actionRef","useRef","openSort","setOpenMenuSort","sort","setSort","sorts","AvatarWrapper","Avatar","theme","spacing","ChipWrapper","Chip","colors","alpha","black","IconButtonSuccess","IconButton","success","lighter","main","lighten","IconButtonError","error","Grid","container","item","xs","Box","display","alignItems","justifyContent","length","Button","ref","endIcon","fontSize","Menu","anchorEl","current","onClose","open","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","_sort","MenuItem","md","textAlign","height","flexDirection","lineHeight","job","src","company_logo","title","company_name","location","tags","label","size","fullWidth","TablePagination","count","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","rowsPerPage","rowsPerPageOptions","defaultProps","sidebarContent","autoHide","SearchIconWrapper","SearchTwoToneIcon","DrawerWrapperMobile","Drawer","IconButtonToggle","white","header","jobsTags","jobsLocations","ManagementProductsShop","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","isMountedRef","useRefMounted","setJobs","getJobs","useCallback","a","axios","get","response","data","console","useEffect","ContentWrapper","Container","maxWidth","direction","mt","Hidden","mdUp","pl","lg","pr","lgDown","orientation","mx","Autocomplete","multiple","m","limitTags","options","getOptionLabel","option","defaultValue","renderInput","params","TextField","placeholder","mdDown","anchor","Footer","LabelWrapper","typography","pxToRem","general","borderRadius","palette","secondary","warning","info","className","children","rest","isRef"],"mappings":"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","file":"static/js/53.4ea3b81c.chunk.js","sourcesContent":["import { Typography } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Typography align=\"center\" variant=\"h1\" component=\"h3\" sx={{ mb: 1 }}>\n        {t('Jobs Platform')}\n      </Typography>\n      <Typography\n        align=\"center\"\n        variant=\"h4\"\n        fontWeight=\"normal\"\n        color=\"text.secondary\"\n      >\n        {t('Find your dream job, fast and easy!')}\n      </Typography>\n    </>\n  );\n}\n\nexport default PageHeader;\n","import { useState } from 'react';\n\nimport {\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Divider,\n  Card,\n  ListItemIcon,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Label from 'src/components/Label';\n\nconst AccordionSummaryWrapper = experimentalStyled(AccordionSummary)(\n  () => `\n      &.Mui-expanded {\n        min-height: 48px;\n      }\n\n      .MuiAccordionSummary-content.Mui-expanded {\n        margin: 12px 0;\n      }\n  `\n);\n\nconst ListItemWrapper = experimentalStyled(ListItem)(\n  () => `\n  \n      &.MuiButtonBase-root {\n        border-radius: 0;\n      }\n  `\n);\n\nfunction Sidebar() {\n  const { t } = useTranslation();\n\n  const typeOfEmployment = [\n    {\n      id: 1,\n      amount: 12,\n      value: 'full_time',\n      text: t('Full Time')\n    },\n    {\n      id: 2,\n      amount: 16,\n      value: 'part_time',\n      text: t('Part Time')\n    },\n    {\n      id: 3,\n      amount: 9,\n      value: 'remote',\n      text: t('Remote')\n    },\n    {\n      id: 4,\n      amount: 19,\n      value: 'internship',\n      text: t('Internship')\n    },\n    {\n      id: 5,\n      amount: 25,\n      value: 'freelance',\n      text: t('Freelance')\n    }\n  ];\n\n  const seniorityLevel = [\n    {\n      id: 1,\n      amount: 7,\n      value: 'student',\n      text: t('Student')\n    },\n    {\n      id: 2,\n      amount: 35,\n      value: 'entry',\n      text: t('Entry Level')\n    },\n    {\n      id: 3,\n      amount: 27,\n      value: 'mid',\n      text: t('Mid Level')\n    },\n    {\n      id: 4,\n      amount: 8,\n      value: 'director',\n      text: t('Director')\n    },\n    {\n      id: 5,\n      amount: 4,\n      value: 'vp',\n      text: t('VP and above')\n    }\n  ];\n\n  const salaryRange = [\n    {\n      id: 1,\n      amount: 65,\n      value: '700_1200',\n      text: '$700 - $1200'\n    },\n    {\n      id: 2,\n      amount: 345,\n      value: '1200_3000',\n      text: '$1200 - $3000'\n    },\n    {\n      id: 3,\n      amount: 23,\n      value: '3000_5000',\n      text: '$3000 - $5000'\n    },\n    {\n      id: 4,\n      amount: 12,\n      value: '5000_above',\n      text: t('$5000 and above')\n    }\n  ];\n\n  const [checked, setChecked] = useState([0]);\n\n  const handleToggle = (value) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const [checked2, setChecked2] = useState([0]);\n\n  const handleToggle2 = (value) => {\n    const currentIndex = checked2.indexOf(value);\n    const newChecked = [...checked2];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked2(newChecked);\n  };\n\n  const [checked3, setChecked3] = useState([0]);\n\n  const handleToggle3 = (value) => {\n    const currentIndex = checked3.indexOf(value);\n    const newChecked = [...checked3];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked3(newChecked);\n  };\n\n  return (\n    <Card>\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Type of Employment')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails sx={{ p: 0 }}>\n          <List component=\"div\">\n            {typeOfEmployment.map((value) => {\n              return (\n                <ListItemWrapper\n                  sx={{ py: 0, px: 2 }}\n                  key={value.id}\n                  button\n                  onClick={handleToggle(value.id)}\n                >\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked.indexOf(value.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={value.text}\n                    primaryTypographyProps={{ variant: 'body1' }}\n                  />\n                  <Label color=\"primary\">{value.amount}</Label>\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Divider />\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Seniority Level')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails sx={{ p: 0 }}>\n          <List component=\"div\">\n            {seniorityLevel.map((value) => {\n              return (\n                <ListItemWrapper\n                  sx={{ py: 0, px: 2 }}\n                  key={value.id}\n                  button\n                  onClick={handleToggle2(value.id)}\n                >\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked2.indexOf(value.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={value.text}\n                    primaryTypographyProps={{ variant: 'body1' }}\n                  />\n                  <Label color=\"primary\">{value.amount}</Label>\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Divider />\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Salary Range')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails sx={{ p: 0 }}>\n          <List component=\"div\">\n            {salaryRange.map((value) => {\n              return (\n                <ListItemWrapper\n                  sx={{ py: 0, px: 2 }}\n                  key={value.id}\n                  button\n                  onClick={handleToggle3(value.id)}\n                >\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked3.indexOf(value.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={value.text}\n                    primaryTypographyProps={{ variant: 'body1' }}\n                  />\n                  <Label color=\"primary\">{value.amount}</Label>\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </Card>\n  );\n}\n\nexport default Sidebar;\n","import { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid,\n  Chip,\n  Typography,\n  Card,\n  Box,\n  IconButton,\n  Avatar,\n  Button,\n  MenuItem,\n  Menu,\n  Divider,\n  lighten,\n  TablePagination\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport MoreVertTwoToneIcon from '@material-ui/icons/MoreVertTwoTone';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport ThumbUpTwoToneIcon from '@material-ui/icons/ThumbUpTwoTone';\nimport ThumbDownTwoToneIcon from '@material-ui/icons/ThumbDownTwoTone';\n\nconst applyPagination = (jobs, page, limit) => {\n  return jobs.slice(page * limit, page * limit + limit);\n};\n\nconst Results = ({ jobs }) => {\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const { t } = useTranslation();\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const paginatedJobs = applyPagination(jobs, page, limit);\n\n  const actionRef = useRef(null);\n  const [openSort, setOpenMenuSort] = useState(false);\n  const [sort, setSort] = useState('Sort by...');\n\n  const sorts = [\n    {\n      value: '1',\n      text: t('Most recent')\n    },\n    {\n      value: '2',\n      text: t('Company name')\n    },\n    {\n      value: '3',\n      text: t('Location')\n    },\n    {\n      value: '4',\n      text: t('Salary range')\n    }\n  ];\n\n  const AvatarWrapper = experimentalStyled(Avatar)(\n    ({ theme }) => `\n        height: ${theme.spacing(12)};\n        width: ${theme.spacing(12)};\n`\n  );\n\n  const ChipWrapper = experimentalStyled(Chip)(\n    ({ theme }) => `\n        background: ${theme.colors.alpha.black[10]};\n        margin: ${theme.spacing(1)};\n        padding: ${theme.spacing(1)};\n        height: 28px;\n        line-height: 28px;\n        font-weight: bold;\n`\n  );\n\n  const IconButtonSuccess = experimentalStyled(IconButton)(\n    ({ theme }) => `\n        background: ${theme.colors.success.lighter};\n        color: ${theme.colors.success.main};\n        width: ${theme.spacing(10)};\n        height: ${theme.spacing(10)};\n        margin: ${theme.spacing(1.5)};\n\n        &:hover {\n            background: ${lighten(theme.colors.success.lighter, 0.4)};\n        }\n`\n  );\n\n  const IconButtonError = experimentalStyled(IconButton)(\n    ({ theme }) => `\n        background: ${theme.colors.error.lighter};\n        color: ${theme.colors.error.main};\n        width: ${theme.spacing(10)};\n        height: ${theme.spacing(10)};\n        margin: ${theme.spacing(1.5)};\n\n        &:hover {\n            background: ${lighten(theme.colors.error.lighter, 0.4)};\n        }\n`\n  );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <Typography component=\"span\" variant=\"subtitle1\">\n              {t('Showing')}\n            </Typography>{' '}\n            <b>{limit}</b> {t('of')} <b>{paginatedJobs.length}</b>{' '}\n            <b>{t('total job positions')}</b>\n          </Box>\n          <Button\n            variant=\"outlined\"\n            ref={actionRef}\n            onClick={() => setOpenMenuSort(true)}\n            endIcon={<ExpandMoreTwoToneIcon fontSize=\"small\" />}\n          >\n            {sort}\n          </Button>\n          <Menu\n            anchorEl={actionRef.current}\n            onClose={() => setOpenMenuSort(false)}\n            open={openSort}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n          >\n            {sorts.map((_sort) => (\n              <MenuItem\n                key={_sort.value}\n                onClick={() => {\n                  setSort(_sort.text);\n                  setOpenMenuSort(false);\n                }}\n              >\n                {_sort.text}\n              </MenuItem>\n            ))}\n          </Menu>\n        </Box>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Card\n          sx={{\n            textAlign: 'center',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100%',\n            flexDirection: 'column',\n            py: 3\n          }}\n        >\n          <Typography variant=\"h3\" fontWeight=\"normal\">\n            {t('Are these jobs right for you?')}\n          </Typography>\n          <Box py={2}>\n            <IconButtonSuccess>\n              <ThumbUpTwoToneIcon fontSize=\"large\" />\n            </IconButtonSuccess>\n            <IconButtonError>\n              <ThumbDownTwoToneIcon fontSize=\"large\" />\n            </IconButtonError>\n          </Box>\n          <Typography\n            variant=\"h4\"\n            fontWeight=\"normal\"\n            color=\"text.secondary\"\n            sx={{ px: 2, lineHeight: 1.5 }}\n          >\n            {t(\"We'll use your feedback to improve future recommendations\")}\n          </Typography>\n        </Card>\n      </Grid>\n      {paginatedJobs.map((job) => {\n        return (\n          <Grid key={job.id} item xs={12} md={6}>\n            <Card>\n              <Box\n                p={3}\n                display=\"flex\"\n                alignItems=\"flex-start\"\n                justifyContent=\"space-between\"\n              >\n                <AvatarWrapper src={job.company_logo} variant=\"rounded\" />\n                <IconButton color=\"primary\">\n                  <MoreVertTwoToneIcon />\n                </IconButton>\n              </Box>\n              <Box px={3}>\n                <Typography variant=\"h4\" sx={{ mb: 1 }}>\n                  {job.title}\n                </Typography>\n                <Typography variant=\"h6\" color=\"text.secondary\">\n                  {job.company_name}\n                </Typography>\n                <Typography variant=\"subtitle1\">{job.location}</Typography>\n              </Box>\n              <Box px={2} py={1}>\n                {job.tags.map((value) => {\n                  return (\n                    <ChipWrapper key={value} color=\"secondary\" label={value} />\n                  );\n                })}\n              </Box>\n\n              <Divider />\n              <Box px={3} py={2}>\n                <Grid container spacing={3}>\n                  <Grid item md={6}>\n                    <Button size=\"small\" fullWidth variant=\"contained\">\n                      {t('Apply Now')}\n                    </Button>\n                  </Grid>\n                  <Grid item md={6}>\n                    <Button size=\"small\" fullWidth variant=\"outlined\">\n                      {t('View details')}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Card>\n          </Grid>\n        );\n      })}\n      <Grid item xs={12}>\n        <Card sx={{ p: 2 }}>\n          <TablePagination\n            component=\"div\"\n            count={jobs.length}\n            onPageChange={handlePageChange}\n            onRowsPerPageChange={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 15]}\n          />\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nResults.propTypes = {\n  jobs: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  jobs: []\n};\n\nexport default Results;\n","import { useState, useEffect, useCallback } from 'react';\n\nimport ContentWrapper from 'src/components/ContentWrapper';\nimport PageHeader from './PageHeader';\nimport Footer from 'src/components/Footer';\nimport Sidebar from './Sidebar';\n\nimport {\n  Container,\n  TextField,\n  Divider,\n  Card,\n  Hidden,\n  Box,\n  Autocomplete,\n  Grid,\n  IconButton,\n  Drawer,\n  useTheme\n} from '@material-ui/core';\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'src/utils/axios';\nimport MenuTwoToneIcon from '@material-ui/icons/MenuTwoTone';\n\nimport useRefMounted from 'src/hooks/useRefMounted';\n\nimport Results from './Results';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nconst sidebarContent = (\n  <Scrollbars autoHide>\n    <Sidebar />\n  </Scrollbars>\n);\n\nconst SearchIconWrapper = experimentalStyled(SearchTwoToneIcon)(\n  ({ theme }) => `\n        color: ${theme.colors.alpha.black[30]}\n`\n);\n\nconst DrawerWrapperMobile = experimentalStyled(Drawer)(\n  () => `\n    width: 340px;\n    flex-shrink: 0;\n\n  & > .MuiPaper-root {\n        width: 340px;\n        z-index: 3;\n  }\n`\n);\n\nconst IconButtonToggle = experimentalStyled(IconButton)(\n  ({ theme }) => `\n  width: ${theme.spacing(6)};\n  height: ${theme.spacing(6)};\n  position: absolute;\n  background: ${theme.colors.alpha.white[100]};\n  z-index: 5;\n  top: calc(${theme.header.height} + ${theme.spacing(4)});\n`\n);\n\nconst jobsTags = [\n  { title: 'QA Engineer' },\n  { title: 'Team Lead' },\n  { title: 'React Developer' },\n  { title: 'Project Manager' }\n];\n\nconst jobsLocations = [\n  { title: 'Bucharest, Romania' },\n  { title: 'San Francisco, USA' },\n  { title: 'Madrid, Spain' },\n  { title: 'Berlin, Germany' },\n  { title: 'Paris, France' },\n  { title: 'London, UK' }\n];\n\nfunction ManagementProductsShop() {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const isMountedRef = useRefMounted();\n  const [jobs, setJobs] = useState([]);\n\n  const getJobs = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/jobs');\n\n      if (isMountedRef.current) {\n        setJobs(response.data.jobs);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getJobs();\n  }, [getJobs]);\n\n  return (\n    <ContentWrapper title=\"Jobs Platform - Applications\">\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Box mt={3}>\n              <PageHeader />\n            </Box>\n            <Hidden mdUp>\n              <IconButtonToggle\n                color=\"primary\"\n                onClick={handleDrawerToggle}\n                size=\"small\"\n              >\n                <MenuTwoToneIcon />\n              </IconButtonToggle>\n            </Hidden>\n          </Grid>\n          <Grid item xs={12}>\n            <Card\n              sx={{\n                pl: { xs: 1, lg: 3 },\n                pr: 1,\n                display: 'flex',\n                alignItems: 'center'\n              }}\n            >\n              <Hidden lgDown>\n                <SearchIconWrapper />\n              </Hidden>\n              <Grid\n                alignItems=\"center\"\n                justifyContent=\"space-around\"\n                container\n                spacing={0}\n              >\n                <Hidden lgDown>\n                  <Divider orientation=\"vertical\" sx={{ height: 48, mx: 2 }} />\n                </Hidden>\n                <Grid item xs={12} lg={6} md={6}>\n                  <Autocomplete\n                    multiple\n                    sx={{ m: 2 }}\n                    limitTags={2}\n                    options={jobsTags}\n                    getOptionLabel={(option) => option.title}\n                    defaultValue={[jobsTags[0], jobsTags[1]]}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        fullWidth\n                        variant=\"outlined\"\n                        label={t('Jobs Tags')}\n                        placeholder={t('Select tags...')}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Hidden lgDown>\n                  <Divider orientation=\"vertical\" sx={{ height: 48, mx: 2 }} />\n                </Hidden>\n                <Grid item xs={12} lg={5} md={6}>\n                  <Autocomplete\n                    sx={{ m: 2 }}\n                    multiple\n                    limitTags={2}\n                    options={jobsLocations}\n                    getOptionLabel={(option) => option.title}\n                    defaultValue={[jobsLocations[1]]}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        fullWidth\n                        variant=\"outlined\"\n                        label={t('Location')}\n                        placeholder={t('Select location...')}\n                      />\n                    )}\n                  />\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid>\n          <Hidden mdDown>\n            <Grid item xs={12} md={3}>\n              <Sidebar />\n            </Grid>\n          </Hidden>\n          <Grid item xs={12} md={9}>\n            {jobs && <Results jobs={jobs} />}\n          </Grid>\n        </Grid>\n      </Container>\n      <Hidden mdUp>\n        <DrawerWrapperMobile\n          variant=\"temporary\"\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n        >\n          {sidebarContent}\n        </DrawerWrapperMobile>\n      </Hidden>\n      <Footer />\n    </ContentWrapper>\n  );\n}\n\nexport default ManagementProductsShop;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelWrapper = experimentalStyled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className = '', color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { useRef, useEffect } from 'react';\n\nconst useRefMounted = () => {\n  const isRef = useRef(true);\n\n  useEffect(\n    () => () => {\n      isRef.current = false;\n    },\n    []\n  );\n\n  return isRef;\n};\n\nexport default useRefMounted;\n"],"sourceRoot":""}