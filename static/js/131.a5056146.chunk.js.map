{"version":3,"sources":["content/dashboards/superadmin/Info/RegisterWizard.js","content/dashboards/superadmin/Info/PageHeader.js","content/dashboards/superadmin/Info/Search.js","content/dashboards/superadmin/Info/index.js","api/rubro.js","api/info.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Input","experimentalStyled","display","MainContent","Box","BoxActions","colors","alpha","black","AvatarSuccess","Avatar","success","main","palette","contrastText","shadows","typography","pxToRem","AvatarWrapper","ButtonUploadWrapper","primary","dark","sleep","time","Promise","acc","setTimeout","FormikStep","children","FormikStepper","props","childrenArray","Children","toArray","useState","step","setStep","currentChild","completed","setCompleted","t","useTranslation","isLastStep","length","validationSchema","onSubmit","values","helpers","a","s","setTouched","isSubmitting","autoComplete","Stepper","alternativeLabel","activeStep","map","child","index","Step","StepLabel","label","p","alignItems","justifyContent","Button","disabled","variant","color","type","onClick","startIcon","CircularProgress","size","RegisterWizard","classes","ContentWrapper","title","Container","sx","my","maxWidth","px","Typography","mb","fontWeight","initialValues","nombre","nombre_visible","terms","descripcion","cuit","password","email","phone","direccion","numero","console","log","Yup","shape","max","required","min","integer","Grid","container","item","xs","md","fullWidth","name","component","TextField","placeholder","CheckboxWithLabel","Label","Link","href","telefono","FormControl","className","InputLabel","id","Select","labelId","MenuItem","value","nombre_responsable","apellido_responsable","telefono_responsable","email_responsable","accept","htmlFor","IconButton","py","align","pt","pb","lineHeight","modified","height","width","extendedIcon","marginRight","texto","fontSize","opacity","card","background","boxShadow","border","dialog","backgroundColor","PageHeader","open","setOpen","enqueueSnackbar","useSnackbar","useAuth","user","public","direction","justify","lg","RouterLink","to","Dialog","onClose","username","first_name","last_name","submit","resetForm","setErrors","setStatus","setSubmitting","wait","anchorOrigin","vertical","horizontal","TransitionComponent","Zoom","error","message","errors","handleBlur","handleChange","handleSubmit","touched","OutlinedInput","white","Search","OutlinedInputWrapper","IconButtonToggle","SearchTwoToneIcon","header","Info","token","window","localStorage","getItem","periods","text","useRef","beneficios","setBeneficios","beneficiosViejo","setBeneficiosViejo","pages","setPages","setRubros","cargando","setCargando","jobsTags","setJobsTags","llamadaBeneficios","getInfo","result","llamadaRubros","getRubros","arr","val","obj","push","useEffect","handlePagination","event","currentTarget","textContent","Number","resultado","Hidden","mdUp","setMobileOpen","mobileOpen","onChange","buscar","target","titulo","toLowerCase","includes","categoria","filter","find","valor","endAdornment","InputAdornment","position","startAdornment","mt","pertenece_superadmin","Card","CardContent","CardMedia","image","pathImage","i","mr","noWrap","Math","random","dangerouslySetInnerHTML","__html","Pagination","count","defaultPage","siblingCount","crearRubro","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","eliminarRubro","getInfoId","eliminarInfo","getInfoByClub","club","page"],"mappings":"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","file":"static/js/131.a5056146.chunk.js","sourcesContent":["import { useState, Children } from 'react';\nimport {\n  Typography,\n  Container,\n  Button,\n  Card,\n  CircularProgress,\n  Grid,\n  Box,\n  Step,\n  StepLabel,\n  Stepper,\n  Link,\n  Collapse,\n  Alert,\n  Avatar,\n  IconButton\n} from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadTwoToneIcon from '@material-ui/icons/CloudUploadTwoTone';\n\nimport { Field, Form, Formik } from 'formik';\nimport { CheckboxWithLabel, TextField } from 'formik-material-ui';\nimport * as Yup from 'yup';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckTwoToneIcon from '@material-ui/icons/CheckTwoTone';\nimport Select from '@material-ui/core/Select';\n\nimport ContentWrapper from 'src/components/ContentWrapper';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Logo from 'src/components/LogoSign';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%!important',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Input = experimentalStyled('input')({\n  display: 'none'\n});\n\n\nconst MainContent = experimentalStyled(Box)(\n  () => `\n    height: 100%;\n    overflow: auto;\n    flex: 1;\n`\n);\n\nconst BoxActions = experimentalStyled(Box)(\n  ({ theme }) => `\n    background: ${theme.colors.alpha.black[5]}\n`\n);\n\nconst AvatarSuccess = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.main};\n      color: ${theme.palette.success.contrastText};\n      width: ${theme.spacing(12)};\n      height: ${theme.spacing(12)};\n      box-shadow: ${theme.colors.shadows.success};\n      margin-left: auto;\n      margin-right: auto;\n\n      .MuiSvgIcon-root {\n        font-size: ${theme.typography.pxToRem(45)};\n      }\n`\n);\n\nconst AvatarWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n\n    position: relative;\n\n    .MuiAvatar-root {\n      width: ${theme.spacing(16)};\n      height: ${theme.spacing(16)};\n     \n    }\n`\n);\n\nconst ButtonUploadWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n    position: absolute;\n    width: ${theme.spacing(6)};\n    height: ${theme.spacing(6)};\n    bottom: -${theme.spacing(2)};\n    right: -${theme.spacing(2)};\n\n    .MuiIconButton-root {\n      border-radius: 100%;\n      background: ${theme.colors.primary.main};\n      color: ${theme.palette.primary.contrastText};\n      box-shadow: ${theme.colors.shadows.primary};\n      width: ${theme.spacing(6)};\n      height: ${theme.spacing(6)};\n      padding: 0;\n  \n      &:hover {\n        background: ${theme.colors.primary.dark};\n      }\n    }\n`\n);\n\n\nconst sleep = (time) => new Promise((acc) => setTimeout(acc, time));\n\nfunction RegisterWizard() {\n    const classes = useStyles();\n\n  const { t } = useTranslation();\n  const [openAlert, setOpenAlert] = useState(true);\n\n  return (\n    <ContentWrapper title=\"Agregar club\">\n      <MainContent>\n        <Container sx={{ my: 4 }} maxWidth=\"md\">\n      \n        \n            <Box px={4}>\n              <Typography variant=\"h2\" sx={{ mb: 1 }}>\n                {t('Crear un nuevo club')}\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                color=\"text.secondary\"\n                fontWeight=\"normal\"\n                sx={{ mb: 3 }}\n              >\n                {t('Coompleta la informacion basica del club')}\n              </Typography>\n            </Box>\n\n            <FormikStepper\n              initialValues={{\n                nombre: '',\n                 nombre_visible: '',\n                terms: true,\n                descripcion: '',\n                cuit:'',\n                password: '',\n                email: '',\n                phone: '',\n                direccion: '',\n                numero: ''\n                \n              }}\n              onSubmit={async (values) => {\n                await sleep(3000);\n                console.log('values', values);\n              }}\n            >\n              <FormikStep\n                validationSchema={Yup.object().shape({\n                \n                  nombre: Yup.string()\n                    .max(255)\n                    .required(t('El nombre es obligatorio')),\n                  descripcion: Yup.string()\n                    .max(255)\n                    .required(t('La descripcion es obligatoria')),\n                  nombre_visible: Yup.string()\n                    .max(255)\n                    .required(t('El nombre visible es obligatorio')),\n                  cuit: Yup.number()\n                    .min(20)\n                    .integer()\n                    .required(t('El CUIT es obligatorio')),\n                  password: Yup.string()\n                    .min(8)\n                    .max(255)\n                    .required(t('The password field is required')),\n                \n                })}\n                label={t('Informacion del club')}\n              >\n                <Box p={4}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"nombre\"\n                        component={TextField}\n                        label={t('Nombre del club')}\n                        placeholder={t('Nombre del club...')}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"nombre_visible\"\n                        component={TextField}\n                        label={t('Nombre visible')}\n                        placeholder={t('Nombre visible...')}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                      <Field\n                        fullWidth\n                        name=\"descripcion\"\n                        component={TextField}\n                        label={t('Breve descripcion')}\n                        placeholder={t('Breve descripcion...')}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={12} />\n\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"cuit\"\n                        type=\"number\"\n                        component={TextField}\n                        label={t('Cuit')}\n                        placeholder={t('CUIT...')}\n\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"password\"\n                        component={TextField}\n                        label={t('Confirm password')}\n                        placeholder={t('El password es obligatorio...')}\n                      />\n                    </Grid>\n                 \n                    <Grid item xs={12}>\n                     \n                      <Field\n                        name=\"terms\"\n                        type=\"checkbox\"\n                        component={CheckboxWithLabel}\n                        Label={{\n                          label: (\n                            <Typography variant=\"body2\">\n                              {t('I accept the')}{' '}\n                              <Link component=\"a\" href=\"#\">\n                                {t('terms and conditions')}\n                              </Link>\n                              .\n                            </Typography>\n                          )\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                </Box>\n              </FormikStep>\n              <FormikStep\n                validationSchema={Yup.object().shape({\n                  direccion: Yup.string()\n                    .max(255)\n                    .required(t('La direccion obligatoria')),\n                    numero: Yup.number()\n                    .integer()\n                    .min(20)\n                    .required(t('El numero es obligatorio')),\n                    telefono: Yup.number()\n                    .integer()\n                    .min(20)\n                    .required(t('El telefono es obligatorio')),\n                    email: Yup.string()\n                    .email(\n                      t('el email es obligatorio')\n                    )\n                    .max(255)\n                    .required(t('The email field is required')),\n                })}\n                label={t('Datos de contacto')}\n              >\n                <Box p={4}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} md={9}>\n                      <Field\n                        fullWidth\n                        name=\"direccion\"\n                        component={TextField}\n                        label={t('Direccion')}\n\n                        placeholder={t('Direccion...')}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={3}>\n                      <Field\n                        fullWidth\n                        name=\"numero\"\n                        type=\"number\"\n                        component={TextField}\n                        label={t('Numero')}\n\n                        placeholder={t('Numero...')}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={3}>\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Pais</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n       \n          label=\"Age\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n                    </Grid>\n                       <Grid item xs={12} md={3}>\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Provincia</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n       \n          label=\"Age\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n                    </Grid>\n\n            \n\n                         <Grid item xs={12} md={3}>\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">Localidad</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n       \n          label=\"Age\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n                    </Grid>\n\n                           <Grid item xs={12} md={3}>\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">CP</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n       \n          label=\"Age\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={10}>Ten</MenuItem>\n          <MenuItem value={20}>Twenty</MenuItem>\n          <MenuItem value={30}>Thirty</MenuItem>\n        </Select>\n      </FormControl>\n\n\n                    </Grid>\n                 <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"telefono\"\n                        type=\"number\"\n                        component={TextField}\n                        label={t('Telefono')}\n\n                        placeholder={t('Telefono...')}\n                      />\n                    </Grid>\n         <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"email\"\n                        type=\"email\"\n                        component={TextField}\n                        label={t('Mail')}\n\n                        placeholder={t('Mail...')}\n                      />\n                    </Grid>\n                       <Grid item xs={12} md={4}>\n                      <Field\n                        fullWidth\n                        name=\"facebook\"\n                        type=\"text\"\n                        component={TextField}\n                        label={t('Facebook')}\n\n                        placeholder={t('@Facebook...')}\n                      />\n                      </Grid>\n                         <Grid item xs={12} md={4}>\n                      <Field\n                        fullWidth\n                        name=\"instagram\"\n                        type=\"text\"\n                        component={TextField}\n                        label={t('Instagram')}\n\n                        placeholder={t('@Instagram...')}\n                      />\n                    </Grid>\n                       <Grid item xs={12} md={4}>\n                      <Field\n                        fullWidth\n                        name=\"twitter\"\n                        type=\"text\"\n                        component={TextField}\n                        label={t('Twitter')}\n\n                        placeholder={t('@Twitter...')}\n                      />\n                    </Grid>\n\n                    \n                  </Grid>\n                </Box>\n              </FormikStep>\n              <FormikStep\n                validationSchema={Yup.object().shape({\n                  nombre_responsable: Yup.string()\n                    .max(255)\n                    .required(t('El nombre es obligatorio')),\n                    apellido_responsable: Yup.string()\n                    .max(255)\n                    .required(t('El apellido es obligatorio')),\n                    telefono_responsable: Yup.number()\n                    .integer()\n                    .min(20)\n                    .required(t('El telefono es obligatorio')),\n                    email_responsable: Yup.string()\n                    .email(\n                      t('el email es obligatorio')\n                    )\n                    .max(255)\n                    .required(t('El email es obligatorio')),\n                })}\n                label={t('responsable')}\n              >\n                <Box p={4}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"nombre_responsable\"\n                        component={TextField}\n                        label={t('Nombre')}\n\n                        placeholder={t('Nombre...')}\n                      />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"apellido_responsable\"\n                        type=\"text\"\n                        component={TextField}\n                        label={t('Apellido')}\n\n                        placeholder={t('Apellido...')}\n                      />\n                    </Grid>\n\n                 <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"telefono_responsable\"\n                        type=\"number\"\n                        component={TextField}\n                        label={t('Telefono')}\n\n                        placeholder={t('Telefono...')}\n                      />\n                    </Grid>\n         <Grid item xs={12} md={6}>\n                      <Field\n                        fullWidth\n                        name=\"email_responsable\"\n                        type=\"email\"\n                        component={TextField}\n                        label={t('Mail')}\n\n                        placeholder={t('Mail...')}\n                      />\n                    </Grid>\n                    \n                  </Grid>\n                </Box>\n              </FormikStep>\n              <FormikStep\n                validationSchema={Yup.object().shape({\n                  nombre_responsable: Yup.string()\n                    .max(255)\n                    .required(t('El nombre es obligatorio')),\n                    apellido_responsable: Yup.string()\n                    .max(255)\n                    .required(t('El apellido es obligatorio')),\n                    telefono_responsable: Yup.number()\n                    .integer()\n                    .min(20)\n                    .required(t('El telefono es obligatorio')),\n                    email_responsable: Yup.string()\n                    .email(\n                      t('el email es obligatorio')\n                    )\n                    .max(255)\n                    .required(t('El email es obligatorio')),\n                })}\n                label={t('Configuraciones')}\n              >\n                <Box p={4}>\n                  <Grid container spacing={3}\n                  \n             \n                  >\n                    <Grid item xs={12} md={2}>\n                \n\n                    <AvatarWrapper>\n                        <Avatar\n                          variant=\"rounded\"\n                     \n                        />\n                        <ButtonUploadWrapper>\n                          <Input\n                            accept=\"image/*\"\n                            id=\"icon-button-file\"\n                            name=\"icon-button-file\"\n                            type=\"file\"\n                          />\n                          <label htmlFor=\"icon-button-file\">\n                            <IconButton component=\"span\" color=\"primary\">\n                              <CloudUploadTwoToneIcon />\n                            </IconButton>\n                          </label>\n                        </ButtonUploadWrapper>\n                      </AvatarWrapper>\n\n                    </Grid>\n                \n\n                    <Grid item xs={12} md={5}>\n                    <Field\n                        fullWidth\n                        name=\"color\"\n                        type=\"text\"\n                        component={TextField}\n                        label={t('Color primario')}\n\n                        placeholder={t('Color primario...')}\n                      />\n                      </Grid>\n                      <Grid item xs={12} md={5}>\n                    <Field\n                        fullWidth\n                        name=\"color2\"\n                        type=\"text\"\n                        component={TextField}\n                        label={t('Texto primario')}\n\n                        placeholder={t('Texto primario...')}\n                      />\n                      </Grid>\n\n                      <Grid item xs={12} md={5}>\n                    <Field\n                        fullWidth\n                        name=\"color\"\n                        type=\"text\"\n                        component={TextField}\n                        label={t('Color secundario')}\n\n                        placeholder={t('Color secundario...')}\n                      />\n                      </Grid>\n                      <Grid item xs={12} md={5}>\n                    <Field\n                        fullWidth\n                        name=\"color2\"\n                        type=\"text\"\n                        component={TextField}\n                        label={t('Texto secundario')}\n\n                        placeholder={t('Texto secundario...')}\n                      />\n                      </Grid>\n                    \n                  </Grid>\n                </Box>\n              </FormikStep>\n            \n                     <FormikStep label={t('Confirmar')}>\n                <Box px={4} py={8}>\n                  <Container maxWidth=\"sm\">\n                    <AvatarSuccess>\n                      <CheckTwoToneIcon />\n                    </AvatarSuccess>\n                \n\n                    <Typography\n                      align=\"center\"\n                      sx={{ pt: 5, pb: 4, lineHeight: 1.5, px: 10 }}\n                      variant=\"h2\"\n                    >\n                      {t(\n                        'Club registrado'\n                      )}\n                    </Typography>\n\n                    <Button fullWidth variant=\"contained\" href=\"/login\">\n                      Salir\n                    </Button>\n                  </Container>\n                </Box>\n              </FormikStep>\n            </FormikStepper>\n         \n        </Container>\n      </MainContent>\n    </ContentWrapper>\n  );\n}\n\nexport function FormikStep({ children }) {\n  return <>{children}</>;\n}\n\nexport function FormikStepper({ children, ...props }) {\n  const childrenArray = Children.toArray(children);\n  const [step, setStep] = useState(0);\n  const currentChild = childrenArray[step];\n  const [completed, setCompleted] = useState(false);\n  const { t } = useTranslation();\n\n  function isLastStep() {\n    return step === childrenArray.length - 2;\n  }\n\n  return (\n    <Formik\n      {...props}\n      validationSchema={currentChild.props.validationSchema}\n      onSubmit={async (values, helpers) => {\n        if (isLastStep()) {\n          await props.onSubmit(values, helpers);\n          setCompleted(true);\n          setStep((s) => s + 1);\n        } else {\n          setStep((s) => s + 1);\n          helpers.setTouched({});\n        }\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form autoComplete=\"off\">\n          <Stepper alternativeLabel activeStep={step}>\n            {childrenArray.map((child, index) => (\n              <Step\n                key={child.props.label}\n                completed={step > index || completed}\n              >\n                <StepLabel>{child.props.label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n\n          {currentChild}\n          {!completed ? (\n            <BoxActions\n              p={4}\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n            >\n              <Button\n                disabled={isSubmitting || step === 0}\n                variant=\"outlined\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={() => setStep((s) => s - 1)}\n              >\n                {t('Previous')}\n              </Button>\n\n              <Button\n                startIcon={\n                  isSubmitting ? <CircularProgress size=\"1rem\" /> : null\n                }\n                disabled={isSubmitting}\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n              >\n                {isSubmitting\n                  ? t('Submitting')\n                  : isLastStep()\n                  ? t('Complete registration')\n                  : t('Next step')}\n              </Button>\n            </BoxActions>\n          ) : null}\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default RegisterWizard;\n","import { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport wait from 'src/utils/wait';\nimport useAuth from 'src/hooks/useAuth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RegisterWizard from './RegisterWizard'\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  Box,\n  Zoom,\n  Typography,\n  Divider,\n  TextField,\n  CircularProgress,\n  Switch,\n  Avatar,\n  Autocomplete,\n  IconButton,\n  Button\n} from '@material-ui/core';\nimport AddTwoToneIcon from '@material-ui/icons/AddTwoTone';\nimport { useSnackbar } from 'notistack';\nimport CloudUploadTwoToneIcon from '@material-ui/icons/CloudUploadTwoTone';\n\nconst Input = experimentalStyled('input')({\n  display: 'none'\n});\n\nconst AvatarWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n\n    position: relative;\n\n    .MuiAvatar-root {\n      width: ${theme.spacing(16)};\n      height: ${theme.spacing(16)};\n    }\n`\n);\n\nconst ButtonUploadWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n    position: absolute;\n    width: ${theme.spacing(6)};\n    height: ${theme.spacing(6)};\n    bottom: -${theme.spacing(2)};\n    right: -${theme.spacing(2)};\n\n    .MuiIconButton-root {\n      border-radius: 100%;\n      background: ${theme.colors.primary.main};\n      color: ${theme.palette.primary.contrastText};\n      box-shadow: ${theme.colors.shadows.primary};\n      width: ${theme.spacing(6)};\n      height: ${theme.spacing(6)};\n      padding: 0;\n  \n      &:hover {\n        background: ${theme.colors.primary.dark};\n      }\n    }\n`\n);\n\nconst roles = [\n  { label: 'Administrator', value: 'admin' },\n  { label: 'Subscriber', value: 'subscriber' },\n  { label: 'Customer', value: 'customer' }\n];\n\nconst useStyles = makeStyles((theme) => ({\n    modified: {\n    height: '50px!important',\n    width: '208px!important'\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    margin:{\n        marginTop: '35px!important'\n    },\n    texto: {\n        color: '#223354!important',\n        marginTop: '12px!important',\n        fontSize: '17px!important',\n        fontWeight: '400!important',\n        opacity: '70%'\n        \n    },\n    title: {\n        color: '#223354!important',\n        fontSize: '30px!important',\n        fontWeight: '700!important',\n        \n        \n    },\n    card:{\n        marginTop: '41px!important',\n        background: '#FFFFFF',\n        boxShadow: '0px 9px 16px rgba(159, 162, 191, 0.18), 0px 2px 2px rgba(159, 162, 191, 0.32)',\n        border: '6px'\n\n    },\n    dialog:{\n        backgroundColor: 'red!important'\n    }\n  }));\n\n  \n\nfunction PageHeader() {\n    const classes = useStyles();\n\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n\n  const [publicProfile, setPublicProfile] = useState({\n    public: true\n  });\n\n  const handlePublicProfile = (event) => {\n    setPublicProfile({\n      ...publicProfile,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleCreateUserOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCreateUserClose = () => {\n    setOpen(false);\n  };\n\n  const handleCreateUserSuccess = () => {\n    enqueueSnackbar(t('The user account was created successfully'), {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      TransitionComponent: Zoom\n    });\n\n    setOpen(false);\n  };\n\n\n\n\n  \n  return (\n    <>\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid\n   container\n   direction=\"row\"\n   justify=\"space-between\"\n   alignItems=\"center\"\n  spacing={5}\n className={classes.margin}\n>\n<Grid item lg={9} xs={12}>\n<Typography variant=\"h1\"> Info útil </Typography>\n<div className={classes.texto}>{'Todos los aspectos relacionados con info útil de la aplicación se pueden gestionar desde esta página.'}</div>\n    </Grid>\n    <Grid item lg={3} xs={12}  >\n        <Button\n        \n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<AddTwoToneIcon />}\n        className={classes.modified}\n        onClick={handleCreateUserOpen}\n        component={RouterLink} to=\"/superadmin/dashboard/info/crear\"\n     \n     >\n        Agregar información\n      </Button>\n      </Grid>\n      \n      </Grid>\n      </Grid>\n\n      <Dialog\n        fullWidth\n        maxWidth=\"md\"\n        open={open}\n        onClose={handleCreateUserClose}\n   \n      >\n       \n        <Formik\n          initialValues={{\n            email: '',\n            username: '',\n            first_name: '',\n            last_name: '',\n            password: '',\n            submit: null\n          }}\n          validationSchema={Yup.object().shape({\n            username: Yup.string()\n              .max(255)\n              .required(t('The username field is required')),\n            first_name: Yup.string()\n              .max(255)\n              .required(t('The first name field is required')),\n            last_name: Yup.string()\n              .max(255)\n              .required(t('The last name field is required')),\n            email: Yup.string()\n              .email(t('The email provided should be a valid email address'))\n              .max(255)\n              .required(t('The email field is required')),\n            password: Yup.string()\n              .max(255)\n              .required(t('The password field is required'))\n          })}\n          onSubmit={async (\n            values,\n            { resetForm, setErrors, setStatus, setSubmitting }\n          ) => {\n            try {\n              await wait(1000);\n              resetForm();\n              setStatus({ success: true });\n              setSubmitting(false);\n              handleCreateUserSuccess();\n            } catch (err) {\n              console.error(err);\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => (\n            <>\n             \n               <RegisterWizard/>\n          \n            \n           </>\n          )}\n        </Formik>\n      </Dialog>\n    </>\n  );\n}\n\nexport default PageHeader;\n","import { useRef, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Grid,\n  Box,\n  CardContent,\n  FormControl,\n  CardActions,\n  Typography,\n  Avatar,\n  Divider,\n  Link,\n  Rating,\n  OutlinedInput,\n  Chip,\n  Tooltip,\n  AvatarGroup,\n  Pagination,\n  InputAdornment,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useSnackbar } from 'notistack';\nimport { formatDistance, subMonths, subDays } from 'date-fns';\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\nimport { Link as RouterLink } from 'react-router-dom';\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\nimport Text from 'src/components/Text';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst OutlinedInputWrapper = experimentalStyled(OutlinedInput)(\n  ({ theme }) => `\n    background-color: ${theme.colors.alpha.white[100]};\n`\n);\n\nfunction Search() {\n  const { t } = useTranslation();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleDelete = () => {\n    enqueueSnackbar(t('You clicked on delete!'), {\n      variant: 'error'\n    });\n  };\n\n  const handleClick = () => {\n    enqueueSnackbar(t('You clicked on the chip!'), {\n      variant: 'success'\n    });\n  };\n\n  const periods = [\n    {\n      value: 'popular',\n      text: t('Most popular')\n    },\n    {\n      value: 'recent',\n      text: t('Recent tasks')\n    },\n    {\n      value: 'updated',\n      text: t('Latest updated tasks')\n    },\n    {\n      value: 'oldest',\n      text: t('Oldest tasks first')\n    }\n  ];\n\n  const actionRef1 = useRef(null);\n  const [openPeriod, setOpenMenuPeriod] = useState(false);\n  const [period, setPeriod] = useState(periods[0].text);\n\n  return (\n    <>\n      <FormControl  fullWidth \n    \n      >\n        <OutlinedInputWrapper\n                    className=\"buscadorInfo\"\n\n          type=\"text\"\n          \n          endAdornment={\n            <InputAdornment position=\"end\"\n            >\n              <Button variant=\"contained\" size=\"small\">\n                {t('Buscar')}\n              </Button>\n            </InputAdornment>\n          }\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchTwoToneIcon  className=\"iconoInfo\"/>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n  \n    </>\n  );\n}\n\nexport default Search;\n","import { useRef, useState,useEffect,createRef } from 'react';\nimport ContentWrapper from 'src/components/ContentWrapper';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Button,\n  Card,\n  Grid,\n  Box,\n  CardContent,\n  FormControl,\n  CardActions,\n  Typography,\n  Avatar,\n  Divider,\n  Link,\n  Rating,\n  OutlinedInput,\n  Chip,\n  Tooltip,\n  AvatarGroup,\n  Pagination,\n  InputAdornment,\n  Menu,\n  MenuItem,\n  Container,\n  Hidden,\n  IconButton,\n  Autocomplete,\n TextField,\n CardMedia,\n\n} from '@material-ui/core';\nimport PageHeader from './PageHeader';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { useTranslation } from 'react-i18next';\nimport { useSnackbar } from 'notistack';\nimport { formatDistance, subMonths, subDays } from 'date-fns';\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\nimport Text from 'src/components/Text';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport MenuTwoToneIcon from '@material-ui/icons/MenuTwoTone';\nimport {getInfo} from 'src/api/info'\nimport {getRubros} from 'src/api/rubro'\nimport Search from './Search'\nconst OutlinedInputWrapper = experimentalStyled(OutlinedInput)(\n  ({ theme }) => `\n    background-color: ${theme.colors.alpha.white[100]};\n`\n);\n\n\nconst SearchIconWrapper = experimentalStyled(SearchTwoToneIcon)(\n  ({ theme }) => `\n        color: ${theme.colors.alpha.black[30]}\n`\n);\n\n\nconst IconButtonToggle = experimentalStyled(IconButton)(\n  ({ theme }) => `\n  width: ${theme.spacing(6)};\n  height: ${theme.spacing(6)};\n  position: absolute;\n  background: ${theme.colors.alpha.white[100]};\n  z-index: 5;\n  top: calc(${theme.header.height} + ${theme.spacing(4)});\n`\n);\n\n\nfunction Info() {\n  const { t } = useTranslation();\n  const { enqueueSnackbar } = useSnackbar();\n  const token = window.localStorage.getItem('accessToken');\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleDelete = () => {\n    enqueueSnackbar(t('You clicked on delete!'), {\n      variant: 'error'\n    });\n  };\n\n  const handleClick = () => {\n    enqueueSnackbar(t('You clicked on the chip!'), {\n      variant: 'success'\n    });\n  };\n\n  const periods = [\n    {\n      value: 'popular',\n      text: t('Most popular')\n    },\n    {\n      value: 'recent',\n      text: t('Recent tasks')\n    },\n    {\n      value: 'updated',\n      text: t('Latest updated tasks')\n    },\n    {\n      value: 'oldest',\n      text: t('Oldest tasks first')\n    }\n  ];\n\n  \n  const jobsLocations = [\n    { title: 'Bucharest, Romania' },\n    { title: 'San Francisco, USA' },\n    { title: 'Madrid, Spain' },\n    { title: 'Berlin, Germany' },\n    { title: 'Paris, France' },\n    { title: 'London, UK' }\n  ];\n  \n\n  const valorTexto = useRef(null);\n  const [openPeriod, setOpenMenuPeriod] = useState(false);\n  const [period, setPeriod] = useState(periods[0].text);\n  const [beneficios,setBeneficios] = useState(null)\n  const [beneficiosViejo,setBeneficiosViejo] = useState(null)\n\n  const [pages,setPages] = useState(1)\n  const [rubros,setRubros] = useState([])\n  const [cargando,setCargando] = useState(false)\n  const [jobsTags,setJobsTags] = useState([{\n    title: 'cargando...'\n  }])\n  const llamadaBeneficios = async() => {\n\n    setCargando(true)\n    const result =  await getInfo(1,token)\n    console.log('beneficios',result)\n    setBeneficios(result.result)\n    setBeneficiosViejo(result.result)\n\n    setPages(result.pages)\n    setCargando(false)\n\n  }\n\n\n  const handleChange = (event) => {\n  //event.target.value\n  let buscar = event.target.value\n  console.log('....',buscar)\n\n  if(event.target.value === ''){\n    llamadaBeneficios()\n  }\n\n\n\n\n  let arr = []\n   for(let val of beneficiosViejo){\n\n\n    if(val.titulo.toLowerCase().includes(buscar.toLowerCase()) || val.descripcion.toLowerCase().includes(buscar.toLowerCase()) ){\n      arr.push(val)\n    }\n\n   if(val.categoria.length > 0){\n        let result = val.categoria.filter(val => val.categoria.nombre.toLowerCase().includes(buscar.toLowerCase()) )\n        if(result.length > 0){\n          let encontrado = arr.find(valor => valor.id === val.id )\n          if(!encontrado){\n            arr.push(val)\n\n          }\n        }\n   }\n    \n\n   }\n   console.log('beneficio actualizado',arr)\n   setBeneficios(arr)\n\n  }\n\n  const llamadaRubros =  async() => {\n    const result = await getRubros(token)\n    let arr = []\n    for(let val of result){\n      let obj = {\n        title: val.nombre\n      }\n      arr.push(obj)\n    }\n\n    setJobsTags(arr)\n    setRubros(result)\n    \n  }\n\n\n  useEffect(()=>{\n\n\n    llamadaBeneficios()\n    llamadaRubros()\n\n  },[])\n\n\n \n\n\n  const contarTexto = (param) => {\n    if(param){\n      return param.substring(10,-1)\n    }\n  }\n\n\n\n  const  handlePagination =  async(event,value) => {\n    console.log(event.currentTarget.textContent)\n    setCargando(true)\n    let resultado =  await getInfo(Number(value),token)\n    setBeneficios(resultado.result)\n    setCargando(false)\n    }\n\n  console.log('aca etan los tags',jobsTags)\n\n  return (\n    <>\n        <ContentWrapper title=\"Klubo | info útil\">\n      <Container maxWidth=\"lg\"                    className=\"field\"\n>\n      <Grid\n          mb={4}\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <Box >\n              <PageHeader />\n            </Box>\n            <Hidden mdUp>\n              <IconButtonToggle\n                color=\"primary\"\n                onClick={handleDrawerToggle}\n                size=\"small\"\n              >\n                <MenuTwoToneIcon />\n              </IconButtonToggle>\n            </Hidden>\n          </Grid>\n       </Grid>\n       <Grid item xs={12} className=\"marginBuscador-documentacion\">\n           \n       <FormControl  fullWidth \n    \n    >\n      <OutlinedInputWrapper\n                  className=\"buscadorInfo\"\n\n        type=\"text\"\n        onChange={handleChange} \n        endAdornment={\n          <InputAdornment position=\"end\"\n          >\n            <Button variant=\"contained\" size=\"small\">\n              {t('Buscar')}\n            </Button>\n          </InputAdornment>\n        }\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <SearchTwoToneIcon  className=\"iconoInfo\"/>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n \n\n\n          </Grid>\n      <Box\n        className=\"marginFilter-documentacion\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n  \n      </Box>\n\n\n      <Grid container spacing={3}>\n\n\n\n        {cargando === true &&\n        \n         ( \n      <Grid\n  container\n  direction=\"row\"\n  justifyContent=\"center\"\n  alignItems=\"center\"\n  mt={5}\n>\n      <CircularProgress mt={4} color=\"primary\" />\n</Grid>\n         )\n}\n\n\n {cargando === false && beneficios !== null && beneficios.length === 0 && (\n         <Grid\n         container\n         direction=\"row\"\n         justifyContent=\"center\"\n         alignItems=\"center\"\n         mt={5}\n       >\n             <p>No hay beneficios</p>\n       </Grid>\n ) }\n\n          {cargando === false && beneficios !== null && beneficios && beneficios.map((val)=>(\n\n\n\n            val.pertenece_superadmin === 1 ? \n            \n            (\n\n            <>\n            <Grid item xs={12} md={4}>\n              \n            <Card>\n<CardContent>\n             \n<CardMedia\n           className=\"img-documentacion\"\n           image={val.pathImage}\n           title=\"Contemplative Reptile\"\n         />\n  <Link  component={RouterLink}  mt={3}   to={'/superadmin/dashboard/info/single/' + val.id} color=\"text.primary\" className=\"titleCardInfo\">\n  {val.titulo}\n  </Link>\n  <Grid\n             container\n             direction=\"row\"\n             justifyContent=\"start\"\n           \n  >\n\n  {val.categoria && val.categoria.map((val,i)=>(\n      <Grid xs={5} mr={1} mt={2}>\n    <Typography noWrap variant=\"p\" className={(i * Math.random()) % 2 === 0 ? 'chipInfo' : 'chipInfo2'} >{val.categoria && val.categoria.nombre}</Typography>\n  </Grid>\n))}\n  \n\n \n</Grid>\n<Typography sx={{ pb: 2 }} color=\"text.secondary\">\n<div  dangerouslySetInnerHTML={{ __html: val.descripcion }} />\n  </Typography>\n\n   <Button size=\"small\" variant=\"outlined\" \n     component={RouterLink}\n     to={'/superadmin/dashboard/info/editar/' + val.id}\n   \n   sx={{ mr: 2 }}>\n    {t('Editar')}\n  </Button>\n  <Button size=\"small\"\n  component={RouterLink}\n  to={'/superadmin/dashboard/info/single/' + val.id}\n  \n  variant=\"contained\" >\n    {t('Más info')}\n  </Button>\n</CardContent>\n\n</Card>\n         </Grid>\n \n           \n           </>\n          \n            )\n            :\n     \n               (\n                 <>\n                 </>\n               )\n          \n          ))}\n      \n\n\n    \n    \n      </Grid>\n      <Box\n        \n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className=\"paginacion-documentacion\"\n      >\n        <Pagination\n          onChange={handlePagination}\n          count={pages}\n          defaultPage={1}\n          siblingCount={0}\n          size=\"large\"\n          shape=\"rounded\"\n          color=\"primary\"\n          \n        />\n      </Box>\n      </Container>\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default Info;\n\n\n\n\n\n\n\n\n\n\n///superadmin/dashboard/info/single/:userId","export const crearRubro = (nombre,token) => {\n    return fetch(`https://api.klubo.club/api/rubro`,{\n            method: \"POST\",\n            headers: {\n                Accept: 'application/json',\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(nombre)\n        })\n        .then(response => {\n            console.log(response)\n            return response.json()\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n\n\n    export const getRubros = (token) => {\n\n\n        return fetch(`https://api.klubo.club/api/rubro`,{\n             method: \"GET\",\n             headers: {\n                Accept: 'application/json',\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n         })\n         .then(response => {\n             return response.json()\n         })\n         .catch(err => console.log(err))\n    \n     \n       }\n\n\n       export const eliminarRubro = (id,token) => {\n        return fetch(`https://api.klubo.club/api/rubro/${id}`,{\n            method: \"DELETE\",\n            headers: {\n                Accept: 'application/json',\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            }\n            })\n            .then(response => {\n                return response.json()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }","export const getInfo = (id,token) => {\n\n\n    return fetch(`https://api.klubo.club/api/page/info/${id}`,{\n         method: \"GET\",\n         headers: {\n            Accept: 'application/json',\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n     })\n     .then(response => {\n         return response.json()\n     })\n     .catch(err => console.log(err))\n\n \n   }\n\n\n\n   export const getInfoId = (id,token) => {\n\n\n    return fetch(`https://api.klubo.club/api/info/${id}`,{\n         method: \"GET\",\n         headers: {\n            Accept: 'application/json',\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n     })\n     .then(response => {\n         return response.json()\n     })\n     .catch(err => console.log(err))\n\n \n   }\n\n\n\n\n   export const eliminarInfo = (id,token) => {\n\n\n    return fetch(`https://api.klubo.club/api/info/${id}`,{\n         method: \"DELETE\",\n         headers: {\n            Accept: 'application/json',\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n     })\n     .then(response => {\n         return response.json()\n     })\n     .catch(err => console.log(err))\n\n \n   }\n\n   ///info/:id\n\n\n   ///admin/info/:club\n\n\n   ////page/info/:club/:page\n\n\n   export const getInfoByClub = (club,page,token) => {\n\n\n    return fetch(`https://api.klubo.club/api/page/info/${club}/${page}`,{\n         method: \"GET\",\n         headers: {\n            Accept: 'application/json',\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n     })\n     .then(response => {\n         return response.json()\n     })\n     .catch(err => console.log(err))\n\n \n   }\n"],"sourceRoot":""}