{"version":3,"sources":["../node_modules/@material-ui/core/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/Chip/chipClasses.js","../node_modules/@material-ui/core/Chip/Chip.js","../node_modules/@material-ui/core/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/core/Autocomplete/autocompleteClasses.js","../node_modules/@material-ui/core/Autocomplete/Autocomplete.js","../node_modules/@material-ui/core/internal/svg-icons/Close.js"],"names":["createSvgIcon","_jsx","d","getChipUtilityClass","slot","generateUtilityClass","chipClasses","generateUtilityClasses","ChipRoot","experimentalStyled","name","overridesResolver","props","styles","styleProps","color","clickable","onDelete","size","variant","deepmerge","_extends","capitalize","deletable","avatar","icon","label","deleteIcon","root","theme","deleteIconColor","alpha","palette","text","primary","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","backgroundColor","action","selected","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","disabledOpacity","pointerEvents","marginLeft","marginRight","width","mode","grey","avatarColorPrimary","contrastText","dark","avatarColorSecondary","secondary","avatarSmall","WebkitTapHighlightColor","margin","main","selectedOpacity","focusOpacity","userSelect","hoverOpacity","boxShadow","shadows","hover","focus","iconSmall","deleteIconSmall","ChipLabel","overflow","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","key","Chip","React","inProps","ref","useThemeProps","avatarProp","className","clickableProp","ComponentProp","component","deleteIconProp","disabled","iconProp","onClick","onKeyDown","onKeyUp","other","_objectWithoutPropertiesLoose","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","ButtonBase","classes","slots","composeClasses","useUtilityClasses","moreProps","focusVisibleClassName","focusVisible","disableRipple","Boolean","customClasses","clsx","CancelIcon","_jsxs","as","undefined","currentTarget","target","preventDefault","current","blur","children","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","getOptionSelected","value","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","useEventCallback","newValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","tagToFocus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","defaultMuiPrevented","which","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","handleOptionMouseOver","Number","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","role","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","getListboxProps","getOptionProps","onMouseOver","onTouchStart","getAutocompleteUtilityClass","autocompleteClasses","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","tag","inputRoot","endAdornment","clearIndicator","popupIndicator","popupIndicatorOpen","visibility","maxWidth","flexWrap","minWidth","paddingBottom","right","paddingTop","flexGrow","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","IconButton","AutocompletePopupIndicator","transform","AutocompletePopper","Popper","disablePortal","popperDisablePortal","paper","listbox","loading","noOptions","groupLabel","groupUl","popper","zIndex","modal","AutocompletePaper","Paper","body1","AutocompleteLoading","AutocompleteNoOptions","AutocompleteListbox","listStyle","maxHeight","minHeight","breakpoints","up","AutocompleteGroupLabel","ListSubheader","background","AutocompleteGroupUl","_ref","ClearIcon","_ref2","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","clearIcon","clearText","closeText","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","params","map","props2","renderListOption","optionProps","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2"],"mappings":"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","file":"static/js/4.889f0ae6.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport { alpha } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  const {\n    color,\n    clickable,\n    onDelete,\n    size,\n    variant\n  } = styleProps;\n  return deepmerge(_extends({}, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], variant === 'outlined' && styles[`outlined${capitalize(color)}`], {\n    [`& .${chipClasses.avatar}`]: _extends({}, styles.avatar, styles[`avatar${capitalize(size)}`], styles[`avatarColor${capitalize(color)}`]),\n    [`& .${chipClasses.icon}`]: _extends({}, styles.icon, styles[`icon${capitalize(size)}`], styles[`iconColor${capitalize(color)}`]),\n    [`& .${chipClasses.label}`]: _extends({}, styles.label, styles[`label${capitalize(size)}`]),\n    [`& .${chipClasses.deleteIcon}`]: _extends({}, styles.deleteIcon, styles[`deleteIcon${capitalize(size)}`], styles[`deleteIconColor${capitalize(color)}`], styles[`deleteIconOutlinedColor${capitalize(color)}`])\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(color)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIconOutlinedColor${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = experimentalStyled('div', {}, {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    /* Styles applied to the root element. */\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 'none',\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    '&.Mui-disabled': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n\n    /* Styles applied to the icon element. */\n    [`& .${chipClasses.icon}`]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, styleProps.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, styleProps.color !== 'default' && {\n      color: 'inherit'\n    }),\n\n    /* Styles applied to the deleteIcon element. */\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, styleProps.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, styleProps.color !== 'default' && {\n      color: alpha(theme.palette[styleProps.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[styleProps.color].contrastText\n      }\n    })\n  }, styleProps.size === 'small' && {\n    height: 24\n  }, styleProps.color !== 'default' && {\n    backgroundColor: theme.palette[styleProps.color].main,\n    color: theme.palette[styleProps.color].contrastText\n  }, styleProps.onDelete && {\n    '&.Mui-focusVisible': {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, styleProps.onDelete && styleProps.color !== 'default' && {\n    '&.Mui-focusVisible': {\n      backgroundColor: theme.palette[styleProps.color].dark\n    }\n  });\n}, ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: theme.shadows[1]\n  }\n}, styleProps.clickable && styleProps.color !== 'default' && {\n  '&:hover, &.Mui-focusVisible': {\n    backgroundColor: theme.palette[styleProps.color].dark\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, styleProps.variant === 'outlined' && styleProps.color !== 'default' && {\n  color: theme.palette[styleProps.color].main,\n  border: `1px solid ${alpha(theme.palette[styleProps.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity)\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.focusOpacity)\n  },\n\n  /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: alpha(theme.palette[styleProps.color].main, 0.7),\n    '&:hover, &:active': {\n      color: theme.palette[styleProps.color].main\n    }\n  }\n}));\nconst ChipLabel = experimentalStyled('span', {}, {\n  name: 'MuiChip',\n  slot: 'Label'\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the label `span` element. */\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, styleProps.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const styleProps = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const moreProps = component === ButtonBase ? {\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: Boolean(onDelete)\n  } : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    styleProps: styleProps\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      styleProps: styleProps,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '../utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n    },\n    getOptionSelected = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = useEventCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(() => {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && getOptionSelected(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => getOptionSelected(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => getOptionSelected(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => getOptionSelected(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`Material-UI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'select-option', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => getOptionSelected(option, val));\n\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`getOptionSelected\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => getOptionSelected(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'remove-option', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && getOptionSelected(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '../styles/colorManipulator';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  const {\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = styleProps;\n  return deepmerge(_extends({}, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon, {\n    [`& .${autocompleteClasses.tag}`]: _extends({}, styles.tag, styles[`tagSize${capitalize(size)}`]),\n    [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot,\n    [`& .${autocompleteClasses.input}`]: _extends({}, styles.input, inputFocused && styles.inputFocused),\n    [`& .${autocompleteClasses.endAdornment}`]: styles.endAdornment,\n    [`& .${autocompleteClasses.clearIndicator}`]: styles.clearIndicator,\n    [`& .${autocompleteClasses.popupIndicator}`]: _extends({}, styles.popupIndicator, popupOpen && styles.popupIndicatorOpen)\n  }), styles.root || {});\n};\n\nconst overridesResolverPortal = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.disablePortal && styles.popperDisablePortal, {\n    [`& .${autocompleteClasses.paper}`]: styles.paper,\n    [`& .${autocompleteClasses.listbox}`]: styles.listbox,\n    [`& .${autocompleteClasses.loading}`]: styles.loading,\n    [`& .${autocompleteClasses.noOptions}`]: styles.noOptions,\n    [`& .${autocompleteClasses.option}`]: styles.option,\n    [`& .${autocompleteClasses.groupLabel}`]: styles.groupLabel,\n    [`& .${autocompleteClasses.groupUl}`]: styles.groupUl\n  }), styles.popper || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = styleProps;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)})`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  [`&.Mui-focused .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, styleProps.fullWidth && {\n  width: '100%'\n}, {\n  /* Styles applied to the tag elements, e.g. the chips. */\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, styleProps.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n\n  /* Styles applied to the Input element. */\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    },\n    '&.MuiInput-root': {\n      paddingBottom: 1,\n      '& .MuiInput-input': {\n        padding: '6px 4px 6px 0px'\n      }\n    },\n    '&.MuiInput-root.MuiInputBase-sizeSmall': {\n      '& .MuiInput-input': {\n        padding: '2px 4px 3px 0'\n      }\n    },\n    '&.MuiOutlinedInput-root': {\n      padding: 9,\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 26 + 4 + 9\n      },\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 52 + 4 + 9\n      },\n      [`& .${autocompleteClasses.input}`]: {\n        padding: '7.5px 4px 7.5px 6px'\n      },\n      [`& .${autocompleteClasses.endAdornment}`]: {\n        right: 9\n      }\n    },\n    '&.MuiOutlinedInput-root.MuiInputBase-sizeSmall': {\n      padding: 6,\n      [`& .${autocompleteClasses.input}`]: {\n        padding: '2.5px 4px 2.5px 6px'\n      }\n    },\n    '&.MuiFilledInput-root': {\n      paddingTop: 19,\n      paddingLeft: 8,\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 26 + 4 + 9\n      },\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 52 + 4 + 9\n      },\n      '& .MuiFilledInput-input': {\n        padding: '7px 4px'\n      },\n      [`& .${autocompleteClasses.endAdornment}`]: {\n        right: 9\n      }\n    },\n    '&.MuiFilledInput-root.MuiInputBase-sizeSmall': {\n      paddingBottom: 1,\n      '& .MuiFilledInput-input': {\n        padding: '2.5px 4px'\n      }\n    }\n  },\n\n  /* Styles applied to the input element. */\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, styleProps.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment'\n})({\n  /* Styles applied to the endAdornment element. */\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = experimentalStyled(IconButton, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator'\n})({\n  /* Styles applied to the clear indicator. */\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = experimentalStyled(IconButton, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator'\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the popup indicator. */\n  padding: 2,\n  marginRight: -2\n}, styleProps.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = experimentalStyled(Popper, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: overridesResolverPortal\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the popper element. */\n  zIndex: theme.zIndex.modal\n}, styleProps.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = experimentalStyled(Paper, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper'\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto',\n  margin: '4px 0'\n}));\nconst AutocompleteLoading = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Loading'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the loading wrapper. */\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the no option wrapper. */\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the listbox component. */\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n\n  /* Styles applied to the option elements. */\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    '&[data-focus=\"true\"]': {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    '&.Mui-focusVisible': {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      '&[data-focus=\"true\"]': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      '&.Mui-focusVisible': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = experimentalStyled(ListSubheader, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the group's label elements. */\n  backgroundColor: theme.palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = experimentalStyled('ul', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl'\n})({\n  /* Styles applied to the group's ul elements. */\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\n\nvar _ref = /*#__PURE__*/_jsx(ClearIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/_jsx(ArrowDropDownIcon, {});\n\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ref,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ref2,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  const styleProps = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      styleProps: styleProps,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      styleProps: styleProps,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      styleProps: styleProps\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            styleProps: styleProps,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              className: classes.clearIndicator,\n              styleProps: styleProps,\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              styleProps: styleProps,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      styleProps: styleProps,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        styleProps: styleProps,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          styleProps: styleProps,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          styleProps: styleProps,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          styleProps: styleProps\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value(s).\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"remove-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"sourceRoot":""}