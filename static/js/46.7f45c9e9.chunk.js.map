{"version":3,"sources":["content/management/Products/BulkActions.js","content/dashboards/Crypto/PageHeader.js","content/dashboards/Crypto/AccountBalanceChart.js","content/dashboards/Crypto/AccountBalance.js","content/dashboards/Crypto/Wallets.js","content/dashboards/Crypto/AccountSecurity.js","content/dashboards/Crypto/RecentOrdersTable.js","content/dashboards/Crypto/RecentOrders.js","content/dashboards/Crypto/WatchListColumn1Chart.js","content/dashboards/Crypto/WatchListColumn1.js","content/dashboards/Crypto/WatchListColumn2.js","content/dashboards/Crypto/WatchListColumn3.js","content/dashboards/Crypto/WatchListRowChart.js","content/dashboards/Crypto/WatchListRow.js","content/dashboards/Crypto/WatchList.js","content/dashboards/Crypto/index.js","components/Label/index.js","hooks/useRefMounted.js","components/PageTitleWrapper/index.js"],"names":["ButtonError","experimentalStyled","Button","theme","colors","error","main","palette","contrastText","dark","BulkActions","useState","onMenuOpen","menuOpen","moreRef","useRef","t","useTranslation","display","alignItems","justifyContent","variant","color","sx","ml","startIcon","onClick","ref","p","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","component","button","primary","PageHeader","user","useAuth","useTheme","Grid","container","item","Avatar","mr","width","spacing","height","alt","name","src","avatar","Typography","gutterBottom","AccountBalanceChart","dataProp","data","rest","datasets","map","dataset","borderWidth","borderColor","alpha","white","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","layout","padding","tooltips","enabled","caretSize","displayColors","mode","intersect","yPadding","xPadding","bodySpacing","black","backgroundColor","common","titleFontColor","bodyFontColor","footerFontColor","callbacks","label","tooltipItem","_data","index","value","AccountBalanceChartWrapper","AvatarSuccess","success","shadows","AccountBalance","cryptoBalance","Card","xs","md","Box","pb","fontWeight","py","fontSize","noWrap","sm","fullWidth","position","Hidden","mdDown","Divider","absolute","orientation","flex","style","List","disablePadding","ListItem","disableGutters","ListItemAvatar","minWidth","ListItemText","primaryTypographyProps","secondary","secondaryTypographyProps","align","Text","AvatarWrapper","AvatarAddWrapper","CardAddAction","Wallets","size","px","CardContent","pt","Tooltip","arrow","title","CardActionArea","AvatarWrapperError","lighter","AvatarWrapperSuccess","AvatarWrapperWarning","warning","AccountSecurity","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","CardHeader","Switch","edge","onChange","getStatusLabel","cryptoOrderStatus","failed","text","completed","pending","Label","RecentOrdersTable","cryptoOrders","selectedCryptoOrders","setSelectedCryptoOrders","selectedBulkActions","length","page","setPage","limit","setLimit","status","filters","setFilters","statusOptions","id","filteredCryptoOrders","filter","cryptoOrder","matches","applyFilters","paginatedCryptoOrders","slice","applyPagination","selectedSomeCryptoOrders","selectedAllCryptoOrders","action","FormControl","InputLabel","Select","e","target","prevFilters","autoWidth","statusOption","MenuItem","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","indeterminate","event","TableBody","isCryptoOrderSelected","includes","hover","selected","cryptoOrderId","prevSelected","orderDetails","format","orderDate","orderID","sourceName","sourceDesc","amountCrypto","cryptoCurrency","numeral","amount","currency","IconButton","background","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","RecentOrders","isMountedRef","useRefMounted","setCryptoOrders","getCryptoOrders","useCallback","a","axios","get","response","console","useEffect","WatchListColumn1Chart","scales","xAxes","gridLines","drawBorder","ticks","yAxes","yLabel","canvas","primaryGradient","getContext","createLinearGradient","addColorStop","light","pointBorderWidth","pointRadius","pointHoverRadius","WatchListColumn1ChartWrapper","WatchListColumn1","price","week","pr","mb","pl","WatchListColumn2","WatchListColumn3","WatchListRowChart","LabelWrapper","WatchListRowChartWrapper","WatchListRow","bitcoin","ethereum","cardano","flexItem","CardActions","disableSpacing","EmptyResultsWrapper","WatchList","tabs","setTab","ToggleButtonGroup","exclusive","newValue","ToggleButton","disableRipple","direction","lg","textAlign","mt","DashboardCrypto","ContentWrapper","PageTitleWrapper","Container","maxWidth","Footer","typography","pxToRem","general","borderRadius","info","className","children","isRef","PageTitle"],"mappings":"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","file":"static/js/46.7f45c9e9.chunk.js","sourcesContent":["import { useState, useRef } from 'react';\n\nimport {\n  Box,\n  Menu,\n  IconButton,\n  Button,\n  ListItemText,\n  ListItem,\n  List,\n  Typography\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\nimport MoreVertTwoToneIcon from '@material-ui/icons/MoreVertTwoTone';\n\nconst ButtonError = experimentalStyled(Button)(\n  ({ theme }) => `\n     background: ${theme.colors.error.main};\n     color: ${theme.palette.error.contrastText};\n\n     &:hover {\n        background: ${theme.colors.error.dark};\n     }\n    `\n);\n\nfunction BulkActions() {\n  const [onMenuOpen, menuOpen] = useState(false);\n  const moreRef = useRef(null);\n  const { t } = useTranslation();\n\n  const openMenu = () => {\n    menuOpen(true);\n  };\n\n  const closeMenu = () => {\n    menuOpen(false);\n  };\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            {t('Bulk actions')}:\n          </Typography>\n          <ButtonError\n            sx={{ ml: 1 }}\n            startIcon={<DeleteTwoToneIcon />}\n            variant=\"contained\"\n          >\n            {t('Delete')}\n          </ButtonError>\n        </Box>\n        <IconButton\n          color=\"primary\"\n          onClick={openMenu}\n          ref={moreRef}\n          sx={{ ml: 2, p: 1 }}\n        >\n          <MoreVertTwoToneIcon />\n        </IconButton>\n      </Box>\n\n      <Menu\n        keepMounted\n        anchorEl={moreRef.current}\n        open={onMenuOpen}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center'\n        }}\n        getContentAnchorEl={null}\n      >\n        <List sx={{ p: 1 }} component=\"nav\">\n          <ListItem button>\n            <ListItemText primary={t('Bulk delete selected')} />\n          </ListItem>\n          <ListItem button>\n            <ListItemText primary={t('Bulk edit selected')} />\n          </ListItem>\n        </List>\n      </Menu>\n    </>\n  );\n}\n\nexport default BulkActions;\n","import { Typography, Avatar, Grid } from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport { useTranslation } from 'react-i18next';\nimport { useTheme } from '@material-ui/core/styles';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const theme = useTheme();\n\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item>\n        <Avatar\n          sx={{ mr: 2, width: theme.spacing(8), height: theme.spacing(8) }}\n          variant=\"rounded\"\n          alt={user.name}\n          src={user.avatar}\n        />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {t('Welcome')}, {user.name}!\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          {t('Today is a good day to start trading crypto assets!')}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nconst AccountBalanceChart = ({ data: dataProp, ...rest }) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map((dataset) => ({\n      ...dataset,\n      borderWidth: 10,\n      borderColor: theme.colors.alpha.white[100],\n      hoverBorderColor: theme.colors.alpha.white[30]\n    })),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 60,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      caretSize: 6,\n      displayColors: false,\n      mode: 'label',\n      intersect: true,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 2,\n      bodySpacing: 10,\n      borderColor: theme.colors.alpha.black[30],\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.common.black,\n      bodyFontColor: theme.palette.common.black,\n      footerFontColor: theme.palette.common.black,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return <Doughnut data={data} options={options} {...rest} />;\n};\n\nAccountBalanceChart.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default AccountBalanceChart;\n","import {\n  Button,\n  Card,\n  Box,\n  Grid,\n  Typography,\n  Hidden,\n  Avatar,\n  Divider,\n  ListItem,\n  ListItemText,\n  List,\n  ListItemAvatar\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport TrendingUp from '@material-ui/icons/TrendingUp';\nimport AccountBalanceChart from './AccountBalanceChart';\nimport Text from 'src/components/Text';\n\nconst AccountBalanceChartWrapper = experimentalStyled(AccountBalanceChart)(\n  () => `\n      width: 100%;\n      height: 100%;\n`\n);\nconst AvatarSuccess = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.main};\n      color: ${theme.palette.success.contrastText};\n      width: ${theme.spacing(8)};\n      height: ${theme.spacing(8)};\n      box-shadow: ${theme.colors.shadows.success};\n`\n);\n\nfunction AccountBalance() {\n  const { t } = useTranslation();\n\n  const cryptoBalance = {\n    datasets: [\n      {\n        data: [20, 10, 40, 30],\n        backgroundColor: ['#ff9900', '#1c81c2', '#333', '#5c6ac0']\n      }\n    ],\n    labels: [t('Bitcoin'), t('Ripple'), t('Cardano'), t('Ethereum')]\n  };\n\n  return (\n    <Card>\n      <Grid spacing={0} container>\n        <Grid item xs={12} md={6}>\n          <Box p={4}>\n            <Typography sx={{ pb: 3 }} variant=\"h4\">\n              {t('Account Balance')}\n            </Typography>\n            <Box>\n              <Typography variant=\"h1\" gutterBottom>\n                $54,584.23\n              </Typography>\n              <Typography\n                variant=\"h4\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n              >\n                1.0045983485234 BTC\n              </Typography>\n              <Box display=\"flex\" sx={{ py: 4 }} alignItems=\"center\">\n                <AvatarSuccess sx={{ mr: 2 }} variant=\"rounded\">\n                  <TrendingUp fontSize=\"large\" />\n                </AvatarSuccess>\n                <Box>\n                  <Typography variant=\"h4\">+ $3,594.00</Typography>\n                  <Typography variant=\"subtitle2\" noWrap>\n                    {t('this month')}\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n            <Grid container spacing={3}>\n              <Grid sm item>\n                <Button fullWidth variant=\"outlined\">\n                  {t('Send')}\n                </Button>\n              </Grid>\n              <Grid sm item>\n                <Button fullWidth variant=\"contained\">\n                  {t('Receive')}\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid\n          sx={{ position: 'relative' }}\n          display=\"flex\"\n          alignItems=\"center\"\n          item\n          xs={12}\n          md={6}\n        >\n          <Hidden mdDown>\n            <Divider absolute orientation=\"vertical\" />\n          </Hidden>\n          <Box p={4} flex={1}>\n            <Grid container spacing={0}>\n              <Grid\n                xs={12}\n                sm={5}\n                item\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Box style={{ height: '160px' }}>\n                  <AccountBalanceChartWrapper data={cryptoBalance} />\n                </Box>\n              </Grid>\n              <Grid xs={12} sm={7} item display=\"flex\" alignItems=\"center\">\n                <List disablePadding sx={{ width: '100%' }}>\n                  <ListItem disableGutters>\n                    <ListItemAvatar\n                      sx={{\n                        minWidth: '46px',\n                        display: 'flex',\n                        alignItems: 'center'\n                      }}\n                    >\n                      <img\n                        alt=\"BTC\"\n                        src=\"/static/images/placeholders/logo/bitcoin.png\"\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary=\"BTC\"\n                      primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                      secondary=\"Bitcoin\"\n                      secondaryTypographyProps={{\n                        variant: 'subtitle2',\n                        noWrap: true\n                      }}\n                    />\n                    <Box>\n                      <Typography align=\"right\" variant=\"h4\" noWrap>\n                        20%\n                      </Typography>\n                      <Text color=\"success\">+2.54%</Text>\n                    </Box>\n                  </ListItem>\n                  <ListItem disableGutters>\n                    <ListItemAvatar\n                      sx={{\n                        minWidth: '46px',\n                        display: 'flex',\n                        alignItems: 'center'\n                      }}\n                    >\n                      <img\n                        alt=\"XRP\"\n                        src=\"/static/images/placeholders/logo/ripple.png\"\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary=\"XRP\"\n                      primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                      secondary=\"Ripple\"\n                      secondaryTypographyProps={{\n                        variant: 'subtitle2',\n                        noWrap: true\n                      }}\n                    />\n                    <Box>\n                      <Typography align=\"right\" variant=\"h4\" noWrap>\n                        10%\n                      </Typography>\n                      <Text color=\"error\">-1.22%</Text>\n                    </Box>\n                  </ListItem>\n                  <ListItem disableGutters>\n                    <ListItemAvatar\n                      sx={{\n                        minWidth: '46px',\n                        display: 'flex',\n                        alignItems: 'center'\n                      }}\n                    >\n                      <img\n                        alt=\"ADA\"\n                        src=\"/static/images/placeholders/logo/cardano.png\"\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary=\"ADA\"\n                      primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                      secondary=\"Cardano\"\n                      secondaryTypographyProps={{\n                        variant: 'subtitle2',\n                        noWrap: true\n                      }}\n                    />\n                    <Box>\n                      <Typography align=\"right\" variant=\"h4\" noWrap>\n                        40%\n                      </Typography>\n                      <Text color=\"success\">+10.50%</Text>\n                    </Box>\n                  </ListItem>\n                  <ListItem disableGutters>\n                    <ListItemAvatar\n                      sx={{\n                        minWidth: '46px',\n                        display: 'flex',\n                        alignItems: 'center'\n                      }}\n                    >\n                      <img\n                        alt=\"ETH\"\n                        src=\"/static/images/placeholders/logo/ethereum.png\"\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary=\"ETH\"\n                      primaryTypographyProps={{ variant: 'h5', noWrap: true }}\n                      secondary=\"Ethereum\"\n                      secondaryTypographyProps={{\n                        variant: 'subtitle2',\n                        noWrap: true\n                      }}\n                    />\n                    <Box>\n                      <Typography align=\"right\" variant=\"h4\" noWrap>\n                        30%\n                      </Typography>\n                      <Text color=\"error\">-12.38%</Text>\n                    </Box>\n                  </ListItem>\n                </List>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nexport default AccountBalance;\n","import {\n  Button,\n  Card,\n  Grid,\n  Box,\n  CardContent,\n  Typography,\n  Avatar,\n  Tooltip,\n  CardActionArea\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport AddTwoToneIcon from '@material-ui/icons/AddTwoTone';\n\nconst AvatarWrapper = experimentalStyled(Avatar)(\n  ({ theme }) => `\n        background: transparent;\n        margin-left: -${theme.spacing(0.5)};\n        margin-bottom: ${theme.spacing(1)};\n        margin-top: ${theme.spacing(2)};\n`\n);\n\nconst AvatarAddWrapper = experimentalStyled(Avatar)(\n  ({ theme }) => `\n        background: ${theme.colors.alpha.black[5]};\n        color: ${theme.colors.primary.main};\n        width: ${theme.spacing(8)};\n        height: ${theme.spacing(8)};\n`\n);\n\nconst CardAddAction = experimentalStyled(Card)(\n  ({ theme }) => `\n        border: ${theme.colors.primary.main} dashed 1px;\n        height: 100%;\n        color: ${theme.colors.primary.main};\n        \n        .MuiCardActionArea-root {\n          height: 100%;\n          justify-content: center;\n          align-items: center;\n          display: flex;\n        }\n        \n        .MuiTouchRipple-root {\n          opacity: .2;\n        }\n        \n        &:hover {\n          border-color: ${theme.colors.alpha.black[100]};\n        }\n`\n);\n\nfunction Wallets() {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ pb: 3 }}\n      >\n        <Typography variant=\"h3\">{t('Wallets')}</Typography>\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n        >\n          {t('Add New Wallet')}\n        </Button>\n      </Box>\n      <Grid container spacing={3}>\n        <Grid xs={12} sm={6} md={3} item>\n          <Card sx={{ px: 1 }}>\n            <CardContent>\n              <AvatarWrapper>\n                <img\n                  alt=\"BTC\"\n                  src=\"/static/images/placeholders/logo/bitcoin.png\"\n                />\n              </AvatarWrapper>\n              <Typography variant=\"h5\" noWrap>\n                Bitcoin\n              </Typography>\n              <Typography variant=\"subtitle1\" noWrap>\n                BTC\n              </Typography>\n              <Box sx={{ pt: 3 }}>\n                <Typography variant=\"h3\" gutterBottom noWrap>\n                  $3,586.22\n                </Typography>\n                <Typography variant=\"subtitle2\" noWrap>\n                  1.25843 BTC\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <Card sx={{ px: 1 }}>\n            <CardContent>\n              <AvatarWrapper>\n                <img\n                  alt=\"Ripple\"\n                  src=\"/static/images/placeholders/logo/ripple.png\"\n                />\n              </AvatarWrapper>\n              <Typography variant=\"h5\" noWrap>\n                Ripple\n              </Typography>\n              <Typography variant=\"subtitle1\" noWrap>\n                XRP\n              </Typography>\n              <Box sx={{ pt: 3 }}>\n                <Typography variant=\"h3\" gutterBottom noWrap>\n                  $586.83\n                </Typography>\n                <Typography variant=\"subtitle2\" noWrap>\n                  5,783 XRP\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <Card sx={{ px: 1 }}>\n            <CardContent>\n              <AvatarWrapper>\n                <img\n                  alt=\"Cardano\"\n                  src=\"/static/images/placeholders/logo/cardano.png\"\n                />\n              </AvatarWrapper>\n              <Typography variant=\"h5\" noWrap>\n                Cardano\n              </Typography>\n              <Typography variant=\"subtitle1\" noWrap>\n                ADA\n              </Typography>\n              <Box sx={{ pt: 3 }}>\n                <Typography variant=\"h3\" gutterBottom noWrap>\n                  $54,985.00\n                </Typography>\n                <Typography variant=\"subtitle2\" noWrap>\n                  34,985 ADA\n                </Typography>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid xs={12} sm={6} md={3} item>\n          <Tooltip arrow title={t('Click to add a new wallet')}>\n            <CardAddAction>\n              <CardActionArea sx={{ px: 1 }}>\n                <CardContent>\n                  <AvatarAddWrapper>\n                    <AddTwoToneIcon fontSize=\"large\" />\n                  </AvatarAddWrapper>\n                </CardContent>\n              </CardActionArea>\n            </CardAddAction>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Wallets;\n","import { useState } from 'react';\nimport {\n  Card,\n  CardHeader,\n  ListItemText,\n  List,\n  ListItem,\n  Divider,\n  Switch,\n  ListItemAvatar,\n  Avatar\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport LockTwoToneIcon from '@material-ui/icons/LockTwoTone';\nimport PhoneLockedTwoToneIcon from '@material-ui/icons/PhoneLockedTwoTone';\nimport EmailTwoToneIcon from '@material-ui/icons/EmailTwoTone';\nimport Text from 'src/components/Text';\n\nconst AvatarWrapperError = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.error.lighter};\n      color:  ${theme.colors.error.main};\n`\n);\n\nconst AvatarWrapperSuccess = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.success.lighter};\n      color:  ${theme.colors.success.main};\n`\n);\n\nconst AvatarWrapperWarning = experimentalStyled(Avatar)(\n  ({ theme }) => `\n      background-color: ${theme.colors.warning.lighter};\n      color:  ${theme.colors.warning.main};\n`\n);\n\nfunction AccountSecurity() {\n  const { t } = useTranslation();\n\n  const [checked, setChecked] = useState(['phone_verification']);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <Card>\n      <CardHeader title={t('Account Security')} />\n      <Divider />\n      <List disablePadding>\n        <ListItem sx={{ py: 2 }}>\n          <ListItemAvatar>\n            <AvatarWrapperError>\n              <LockTwoToneIcon fontSize=\"medium\" />\n            </AvatarWrapperError>\n          </ListItemAvatar>\n          <ListItemText\n            primary={<Text color=\"black\">{t('2FA Authentication')}</Text>}\n            primaryTypographyProps={{\n              variant: 'body1',\n              fontWeight: 'bold',\n              color: 'textPrimary',\n              gutterBottom: true,\n              noWrap: true\n            }}\n            secondary={<Text color=\"error\">{t('Disabled')}</Text>}\n            secondaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n          <Switch\n            edge=\"end\"\n            color=\"primary\"\n            onChange={handleToggle('2fa')}\n            checked={checked.indexOf('2fa') !== -1}\n          />\n        </ListItem>\n        <Divider />\n        <ListItem sx={{ py: 2 }}>\n          <ListItemAvatar>\n            <AvatarWrapperSuccess>\n              <PhoneLockedTwoToneIcon fontSize=\"medium\" />\n            </AvatarWrapperSuccess>\n          </ListItemAvatar>\n          <ListItemText\n            primary={<Text color=\"black\">{t('Phone Verification')}</Text>}\n            primaryTypographyProps={{\n              variant: 'body1',\n              fontWeight: 'bold',\n              color: 'textPrimary',\n              gutterBottom: true,\n              noWrap: true\n            }}\n            secondary={<Text color=\"success\">{t('Active')}</Text>}\n            secondaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n          <Switch\n            edge=\"end\"\n            color=\"primary\"\n            onChange={handleToggle('phone_verification')}\n            checked={checked.indexOf('phone_verification') !== -1}\n          />\n        </ListItem>\n        <Divider />\n        <ListItem sx={{ py: 2 }}>\n          <ListItemAvatar>\n            <AvatarWrapperWarning>\n              <EmailTwoToneIcon fontSize=\"medium\" />\n            </AvatarWrapperWarning>\n          </ListItemAvatar>\n          <ListItemText\n            primary={<Text color=\"black\">{t('Recovery Email')}</Text>}\n            primaryTypographyProps={{\n              variant: 'body1',\n              fontWeight: 'bold',\n              color: 'textPrimary',\n              gutterBottom: true,\n              noWrap: true\n            }}\n            secondary={<Text color=\"warning\">{t('Not completed')}</Text>}\n            secondaryTypographyProps={{ variant: 'body2', noWrap: true }}\n          />\n          <Switch\n            edge=\"end\"\n            color=\"primary\"\n            onChange={handleToggle('recovery_email')}\n            checked={checked.indexOf('recovery_email') !== -1}\n          />\n        </ListItem>\n      </List>\n    </Card>\n  );\n}\n\nexport default AccountSecurity;\n","import { useState } from 'react';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  Divider,\n  Box,\n  FormControl,\n  InputLabel,\n  Card,\n  Checkbox,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableContainer,\n  Select,\n  MenuItem,\n  Typography,\n  useTheme,\n  CardHeader\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\nimport { useTranslation } from 'react-i18next';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\nimport BulkActions from 'src/content/management/Products/BulkActions';\n\nconst getStatusLabel = (cryptoOrderStatus) => {\n  const map = {\n    failed: {\n      text: 'Failed',\n      color: 'error'\n    },\n    completed: {\n      text: 'Completed',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    }\n  };\n\n  const { text, color } = map[cryptoOrderStatus];\n\n  return <Label color={color}>{text}</Label>;\n};\n\nconst applyFilters = (cryptoOrders, filters) => {\n  return cryptoOrders.filter((cryptoOrder) => {\n    let matches = true;\n\n    if (filters.status && cryptoOrder.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (cryptoOrders, page, limit) => {\n  return cryptoOrders.slice(page * limit, page * limit + limit);\n};\n\nconst RecentOrdersTable = ({ cryptoOrders }) => {\n  const { t } = useTranslation();\n\n  const [selectedCryptoOrders, setSelectedCryptoOrders] = useState([]);\n  const selectedBulkActions = selectedCryptoOrders.length > 0;\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const statusOptions = [\n    {\n      id: 'all',\n      name: 'All'\n    },\n    {\n      id: 'completed',\n      name: t('Completed')\n    },\n    {\n      id: 'pending',\n      name: t('Pending')\n    },\n    {\n      id: 'failed',\n      name: t('Failed')\n    }\n  ];\n\n  const handleStatusChange = (e) => {\n    let value = null;\n\n    if (e.target.value !== 'all') {\n      value = e.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSelectAllCryptoOrders = (event) => {\n    setSelectedCryptoOrders(\n      event.target.checked\n        ? cryptoOrders.map((cryptoOrder) => cryptoOrder.id)\n        : []\n    );\n  };\n\n  const handleSelectOneCryptoOrder = (event, cryptoOrderId) => {\n    if (!selectedCryptoOrders.includes(cryptoOrderId)) {\n      setSelectedCryptoOrders((prevSelected) => [\n        ...prevSelected,\n        cryptoOrderId\n      ]);\n    } else {\n      setSelectedCryptoOrders((prevSelected) =>\n        prevSelected.filter((id) => id !== cryptoOrderId)\n      );\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredCryptoOrders = applyFilters(cryptoOrders, filters);\n  const paginatedCryptoOrders = applyPagination(\n    filteredCryptoOrders,\n    page,\n    limit\n  );\n  const selectedSomeCryptoOrders =\n    selectedCryptoOrders.length > 0 &&\n    selectedCryptoOrders.length < cryptoOrders.length;\n  const selectedAllCryptoOrders =\n    selectedCryptoOrders.length === cryptoOrders.length;\n  const theme = useTheme();\n\n  return (\n    <Card>\n      {selectedBulkActions && (\n        <Box flex={1} p={2}>\n          <BulkActions />\n        </Box>\n      )}\n      {!selectedBulkActions && (\n        <CardHeader\n          action={\n            <Box width={150}>\n              <FormControl fullWidth variant=\"outlined\">\n                <InputLabel>{t('Status')}</InputLabel>\n                <Select\n                  value={filters.status || 'all'}\n                  onChange={handleStatusChange}\n                  label={t('Status')}\n                  autoWidth\n                >\n                  {statusOptions.map((statusOption) => (\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\n                      {statusOption.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          }\n          title={t('Recent Orders')}\n        />\n      )}\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  color=\"primary\"\n                  checked={selectedAllCryptoOrders}\n                  indeterminate={selectedSomeCryptoOrders}\n                  onChange={handleSelectAllCryptoOrders}\n                />\n              </TableCell>\n              <TableCell>{t('Order Details')}</TableCell>\n              <TableCell>{t('Order ID')}</TableCell>\n              <TableCell>{t('Source')}</TableCell>\n              <TableCell align=\"right\">{t('Amount')}</TableCell>\n              <TableCell align=\"right\">{t('Status')}</TableCell>\n              <TableCell align=\"right\">{t('Actions')}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedCryptoOrders.map((cryptoOrder) => {\n              const isCryptoOrderSelected = selectedCryptoOrders.includes(\n                cryptoOrder.id\n              );\n              return (\n                <TableRow\n                  hover\n                  key={cryptoOrder.id}\n                  selected={isCryptoOrderSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      color=\"primary\"\n                      checked={isCryptoOrderSelected}\n                      onChange={(event) =>\n                        handleSelectOneCryptoOrder(event, cryptoOrder.id)\n                      }\n                      value={isCryptoOrderSelected}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.orderDetails}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {format(cryptoOrder.orderDate, 'MMMM dd yyyy')}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.orderID}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.sourceName}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {cryptoOrder.sourceDesc}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography\n                      variant=\"body1\"\n                      fontWeight=\"bold\"\n                      color=\"text.primary\"\n                      gutterBottom\n                      noWrap\n                    >\n                      {cryptoOrder.amountCrypto}\n                      {cryptoOrder.cryptoCurrency}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                      {numeral(cryptoOrder.amount).format(\n                        `${cryptoOrder.currency}0,0.00`\n                      )}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {getStatusLabel(cryptoOrder.status)}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Tooltip title={t('Edit Order')} arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': {\n                            background: theme.colors.primary.lighter\n                          },\n                          color: theme.palette.primary.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                      >\n                        <EditTwoToneIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title={t('Delete Order')} arrow>\n                      <IconButton\n                        sx={{\n                          '&:hover': { background: theme.colors.error.lighter },\n                          color: theme.palette.error.main\n                        }}\n                        color=\"inherit\"\n                        size=\"small\"\n                      >\n                        <DeleteTwoToneIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box p={2}>\n        <TablePagination\n          component=\"div\"\n          count={filteredCryptoOrders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25, 30]}\n        />\n      </Box>\n    </Card>\n  );\n};\n\nRecentOrdersTable.propTypes = {\n  cryptoOrders: PropTypes.array.isRequired\n};\n\nRecentOrdersTable.defaultProps = {\n  cryptoOrders: []\n};\n\nexport default RecentOrdersTable;\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { Card } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport RecentOrdersTable from './RecentOrdersTable';\n\nfunction RecentOrders() {\n  const isMountedRef = useRefMounted();\n  const [cryptoOrders, setCryptoOrders] = useState([]);\n\n  const getCryptoOrders = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/crypto-orders');\n\n      if (isMountedRef.current) {\n        setCryptoOrders(response.data.cryptoOrders);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCryptoOrders();\n  }, [getCryptoOrders]);\n\n  return (\n    <Card>\n      <RecentOrdersTable cryptoOrders={cryptoOrders} />\n    </Card>\n  );\n}\n\nexport default RecentOrders;\n","import PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { alpha, useTheme } from '@material-ui/core';\n\nconst WatchListColumn1Chart = ({ data: dataProp, labels, ...rest }) => {\n  const theme = useTheme();\n\n  const data = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const primaryGradient = ctx.createLinearGradient(6, 6, 6, 150);\n\n    primaryGradient.addColorStop(0, alpha(theme.colors.primary.light, 0.8));\n    primaryGradient.addColorStop(0.8, theme.colors.alpha.white[10]);\n    primaryGradient.addColorStop(1, theme.colors.alpha.white[100]);\n\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          borderWidth: 1,\n          backgroundColor: primaryGradient,\n          borderColor: theme.colors.primary.main,\n          pointBorderWidth: 0,\n          pointRadius: 0,\n          pointHoverRadius: 0\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'nearest',\n      intersect: false,\n      caretSize: 6,\n      displayColors: false,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 4,\n      borderColor: theme.palette.common.black,\n      backgroundColor: theme.palette.common.black,\n      titleFontColor: theme.palette.common.white,\n      bodyFontColor: theme.palette.common.white,\n      footerFontColor: theme.palette.common.white,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          return `Price: $${tooltipItem.yLabel}`;\n        }\n      }\n    }\n  };\n\n  return (\n    <div {...rest}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nWatchListColumn1Chart.propTypes = {\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default WatchListColumn1Chart;\n","import { Card, Box, Typography, Avatar } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Label from 'src/components/Label';\nimport Text from 'src/components/Text';\nimport WatchListColumn1Chart from './WatchListColumn1Chart';\n\nconst AvatarWrapper = experimentalStyled(Avatar)(\n  ({ theme }) => `\n        background: transparent;\n        margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst WatchListColumn1ChartWrapper = experimentalStyled(WatchListColumn1Chart)(\n  ({ theme }) => `\n        height: 130px;\n`\n);\n\nfunction WatchListColumn1() {\n  const { t } = useTranslation();\n\n  const price = {\n    week: {\n      labels: [\n        'Monday',\n        'Tueday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n      ],\n      data: [55.701, 57.598, 48.607, 46.439, 58.755, 46.978, 58.16]\n    }\n  };\n\n  return (\n    <Card>\n      <Box sx={{ p: 3 }}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <AvatarWrapper>\n            <img alt=\"BTC\" src=\"/static/images/placeholders/logo/bitcoin.png\" />\n          </AvatarWrapper>\n          <Box>\n            <Typography variant=\"h4\" noWrap>\n              Bitcoin\n            </Typography>\n            <Typography variant=\"subtitle1\" noWrap>\n              BTC\n            </Typography>\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            pt: 3\n          }}\n        >\n          <Typography variant=\"h2\" sx={{ pr: 1, mb: 1 }}>\n            $56,475.99\n          </Typography>\n          <Text color=\"success\">\n            <b>+12.5%</b>\n          </Text>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-start'\n          }}\n        >\n          <Label color=\"success\">+$500</Label>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 1 }}>\n            {t('last 24h')}\n          </Typography>\n        </Box>\n      </Box>\n      <Box height={130} sx={{ ml: -1.5 }}>\n        <WatchListColumn1ChartWrapper\n          data={price.week.data}\n          labels={price.week.labels}\n        />\n      </Box>\n    </Card>\n  );\n}\n\nexport default WatchListColumn1;\n","import { Card, Box, Typography, Avatar } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Label from 'src/components/Label';\nimport Text from 'src/components/Text';\nimport WatchListColumn1Chart from './WatchListColumn1Chart';\n\nconst AvatarWrapper = experimentalStyled(Avatar)(\n  ({ theme }) => `\n        background: transparent;\n        margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst WatchListColumn1ChartWrapper = experimentalStyled(WatchListColumn1Chart)(\n  () => `\n        height: 130px;\n`\n);\n\nfunction WatchListColumn2() {\n  const { t } = useTranslation();\n\n  const price = {\n    week: {\n      labels: [\n        'Monday',\n        'Tueday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n      ],\n      data: [1.854, 1.773, 2.092, 2.009, 1.909, 1.842, 1.884]\n    }\n  };\n\n  return (\n    <Card>\n      <Box sx={{ p: 3 }}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <AvatarWrapper>\n            <img\n              alt=\"ETH\"\n              src=\"/static/images/placeholders/logo/ethereum.png\"\n            />\n          </AvatarWrapper>\n          <Box>\n            <Typography variant=\"h4\" noWrap>\n              Ethereum\n            </Typography>\n            <Typography variant=\"subtitle1\" noWrap>\n              ETH\n            </Typography>\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            pt: 3\n          }}\n        >\n          <Typography variant=\"h2\" sx={{ pr: 1, mb: 1 }}>\n            $1,968.00\n          </Typography>\n          <Text color=\"error\">\n            <b>-3.24%</b>\n          </Text>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-start'\n          }}\n        >\n          <Label color=\"error\">-$90</Label>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 1 }}>\n            {t('last 24h')}\n          </Typography>\n        </Box>\n      </Box>\n      <Box height={130} sx={{ ml: -1.5 }}>\n        <WatchListColumn1ChartWrapper\n          data={price.week.data}\n          labels={price.week.labels}\n        />\n      </Box>\n    </Card>\n  );\n}\n\nexport default WatchListColumn2;\n","import { Card, Box, Typography, Avatar } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Label from 'src/components/Label';\nimport Text from 'src/components/Text';\nimport WatchListColumn1Chart from './WatchListColumn1Chart';\n\nconst AvatarWrapper = experimentalStyled(Avatar)(\n  ({ theme }) => `\n        background: transparent;\n        margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst WatchListColumn1ChartWrapper = experimentalStyled(WatchListColumn1Chart)(\n  ({ theme }) => `\n        height: 130px;\n`\n);\n\nfunction WatchListColumn3() {\n  const { t } = useTranslation();\n\n  const price = {\n    week: {\n      labels: [\n        'Monday',\n        'Tueday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n      ],\n      data: [13, 16, 14, 21, 8, 11, 20]\n    }\n  };\n\n  return (\n    <Card>\n      <Box sx={{ p: 3 }}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <AvatarWrapper>\n            <img alt=\"ADA\" src=\"/static/images/placeholders/logo/cardano.png\" />\n          </AvatarWrapper>\n          <Box>\n            <Typography variant=\"h4\" noWrap>\n              Cardano\n            </Typography>\n            <Typography variant=\"subtitle1\" noWrap>\n              ADA\n            </Typography>\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            pt: 3\n          }}\n        >\n          <Typography variant=\"h2\" sx={{ pr: 1, mb: 1 }}>\n            $23.00\n          </Typography>\n          <Text color=\"error\">\n            <b>-0.33%</b>\n          </Text>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-start'\n          }}\n        >\n          <Label color=\"error\">-$5</Label>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 1 }}>\n            {t('last 24h')}\n          </Typography>\n        </Box>\n      </Box>\n      <Box height={130} sx={{ ml: -1.5 }}>\n        <WatchListColumn1ChartWrapper\n          data={price.week.data}\n          labels={price.week.labels}\n        />\n      </Box>\n    </Card>\n  );\n}\n\nexport default WatchListColumn3;\n","import PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nconst WatchListRowChart = ({ data: dataProp, labels, ...rest }) => {\n  const theme = useTheme();\n\n  const data = () => {\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          borderWidth: 3,\n          backgroundColor: 'transparent',\n          borderColor: theme.colors.primary.main,\n          pointBorderWidth: 0,\n          pointRadius: 0,\n          pointHoverRadius: 0\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 5\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'nearest',\n      intersect: false,\n      caretSize: 6,\n      displayColors: false,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 4,\n      borderColor: theme.palette.common.black,\n      backgroundColor: theme.palette.common.black,\n      titleFontColor: theme.palette.common.white,\n      bodyFontColor: theme.palette.common.white,\n      footerFontColor: theme.palette.common.white,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          return `Price: $${tooltipItem.yLabel}`;\n        }\n      }\n    }\n  };\n\n  return (\n    <div {...rest}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nWatchListRowChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default WatchListRowChart;\n","import {\n  Button,\n  Card,\n  Box,\n  CardActions,\n  Grid,\n  Typography,\n  Avatar,\n  Divider\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Text from 'src/components/Text';\nimport Label from 'src/components/Label';\nimport WatchListRowChart from './WatchListRowChart';\n\nconst AvatarWrapper = experimentalStyled(Avatar)(\n  ({ theme }) => `\n        background: transparent;\n        margin-right: ${theme.spacing(0.5)};\n`\n);\n\nconst LabelWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n        position: absolute;\n        right: ${theme.spacing(2)};\n        top: ${theme.spacing(2)};\n`\n);\n\nconst WatchListRowChartWrapper = experimentalStyled(WatchListRowChart)(\n  ({ theme }) => `\n        height: 100px;\n`\n);\n\nfunction WatchListRow() {\n  const { t } = useTranslation();\n\n  const price = {\n    week: {\n      labels: [\n        'Monday',\n        'Tueday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n      ],\n      bitcoin: [55.701, 57.598, 48.607, 46.439, 58.755, 46.978, 58.16],\n      ethereum: [1.854, 1.773, 2.092, 2.009, 1.909, 1.842, 1.884],\n      cardano: [13, 16, 14, 21, 8, 11, 20]\n    }\n  };\n\n  return (\n    <Card>\n      <Grid container spacing={0} alignItems=\"center\">\n        <Grid xs={12} md item sx={{ position: 'relative' }}>\n          <Box sx={{ px: 3, pt: 3 }}>\n            <LabelWrapper>\n              <Label color=\"secondary\">24h</Label>\n            </LabelWrapper>\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"BTC\"\n                  src=\"/static/images/placeholders/logo/bitcoin.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Bitcoin\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  BTC\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                pt: 3\n              }}\n            >\n              <Typography variant=\"h2\" sx={{ pr: 1, mb: 1 }}>\n                $56,475.99\n              </Typography>\n              <Text color=\"success\">\n                <b>+12.5%</b>\n              </Text>\n            </Box>\n            <Box height={100} sx={{ ml: -1.5 }}>\n              <WatchListRowChartWrapper\n                data={price.week.bitcoin}\n                labels={price.week.labels}\n              />\n            </Box>\n          </Box>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem />\n        <Grid xs={12} md item sx={{ position: 'relative' }}>\n          <Box sx={{ px: 3, pt: 3 }}>\n            <LabelWrapper>\n              <Label color=\"secondary\">24h</Label>\n            </LabelWrapper>\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"ETH\"\n                  src=\"/static/images/placeholders/logo/ethereum.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Ethereum\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  ETH\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                pt: 3\n              }}\n            >\n              <Typography variant=\"h2\" sx={{ pr: 1, mb: 1 }}>\n                $1,968.00\n              </Typography>\n              <Text color=\"error\">\n                <b>-3.24%</b>\n              </Text>\n            </Box>\n            <Box height={100} sx={{ ml: -1.5 }}>\n              <WatchListRowChartWrapper\n                data={price.week.ethereum}\n                labels={price.week.labels}\n              />\n            </Box>\n          </Box>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem />\n        <Grid xs={12} md item sx={{ position: 'relative' }}>\n          <Box sx={{ px: 3, pt: 3 }}>\n            <LabelWrapper>\n              <Label color=\"secondary\">24h</Label>\n            </LabelWrapper>\n            <Box display=\"flex\" alignItems=\"center\">\n              <AvatarWrapper>\n                <img\n                  alt=\"ADA\"\n                  src=\"/static/images/placeholders/logo/cardano.png\"\n                />\n              </AvatarWrapper>\n              <Box>\n                <Typography variant=\"h4\" noWrap>\n                  Cardano\n                </Typography>\n                <Typography variant=\"subtitle1\" noWrap>\n                  ADA\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                pt: 3\n              }}\n            >\n              <Typography variant=\"h2\" sx={{ pr: 1, mb: 1 }}>\n                $23.00\n              </Typography>\n              <Text color=\"error\">\n                <b>-0.33%</b>\n              </Text>\n            </Box>\n            <Box height={100} sx={{ ml: -1.5 }}>\n              <WatchListRowChartWrapper\n                data={price.week.cardano}\n                labels={price.week.labels}\n              />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <Divider />\n      <CardActions\n        disableSpacing\n        sx={{ p: 3, display: 'flex', justifyContent: 'center' }}\n      >\n        <Button variant=\"outlined\">{t('View more assets')}</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default WatchListRow;\n","import { useState } from 'react';\nimport {\n  Button,\n  Box,\n  ToggleButton,\n  ToggleButtonGroup,\n  Grid,\n  Card,\n  Typography\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport ViewWeekTwoToneIcon from '@material-ui/icons/ViewWeekTwoTone';\nimport TableRowsTwoToneIcon from '@material-ui/icons/TableRowsTwoTone';\nimport WatchListColumn1 from './WatchListColumn1';\nimport WatchListColumn2 from './WatchListColumn2';\nimport WatchListColumn3 from './WatchListColumn3';\nimport WatchListRow from './WatchListRow';\n\nconst EmptyResultsWrapper = experimentalStyled('img')(\n  ({ theme }) => `\n      max-width: 100%;\n      width: ${theme.spacing(66)};\n      height: ${theme.spacing(34)};\n`\n);\n\nfunction WatchList() {\n  const { t } = useTranslation();\n\n  const [tabs, setTab] = useState('watch_list_columns');\n\n  const handleViewOrientation = (event, newValue) => {\n    setTab(newValue);\n  };\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ pb: 3 }}\n      >\n        <Typography variant=\"h3\">{t('Watch List')}</Typography>\n        <ToggleButtonGroup\n          value={tabs}\n          exclusive\n          onChange={handleViewOrientation}\n        >\n          <ToggleButton disableRipple value=\"watch_list_columns\">\n            <ViewWeekTwoToneIcon />\n          </ToggleButton>\n          <ToggleButton disableRipple value=\"watch_list_rows\">\n            <TableRowsTwoToneIcon />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Box>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        {tabs === 'watch_list_columns' && (\n          <>\n            <Grid item lg={4} xs={12}>\n              <WatchListColumn1 />\n            </Grid>\n            <Grid item lg={4} xs={12}>\n              <WatchListColumn2 />\n            </Grid>\n            <Grid item lg={4} xs={12}>\n              <WatchListColumn3 />\n            </Grid>\n          </>\n        )}\n\n        {tabs === 'watch_list_rows' && (\n          <Grid item xs={12}>\n            <WatchListRow />\n          </Grid>\n        )}\n\n        {!tabs && (\n          <Grid item xs={12}>\n            <Card sx={{ textAlign: 'center', p: 3 }}>\n              <EmptyResultsWrapper src=\"/static/images/placeholders/illustrations/1.svg\" />\n\n              <Typography\n                align=\"center\"\n                variant=\"h2\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n                sx={{ mt: 3 }}\n                gutterBottom\n              >\n                {t('Click something, anything!')}\n              </Typography>\n              <Button variant=\"contained\" size=\"large\" sx={{ mt: 4 }}>\n                Maybe, a button?\n              </Button>\n            </Card>\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n}\n\nexport default WatchList;\n","import ContentWrapper from 'src/components/ContentWrapper';\nimport PageHeader from './PageHeader';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { Container, Grid } from '@material-ui/core';\nimport Footer from 'src/components/Footer';\n\nimport AccountBalance from './AccountBalance';\nimport Wallets from './Wallets';\nimport AccountSecurity from './AccountSecurity';\nimport RecentOrders from './RecentOrders';\nimport WatchList from './WatchList';\n\nfunction DashboardCrypto() {\n  return (\n    <ContentWrapper title=\"Crypto Dashboard\">\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <AccountBalance />\n          </Grid>\n          <Grid item lg={8} xs={12}>\n            <Wallets />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <AccountSecurity />\n          </Grid>\n          <Grid item xs={12}>\n            <RecentOrders />\n          </Grid>\n          <Grid item xs={12}>\n            <WatchList />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </ContentWrapper>\n  );\n}\n\nexport default DashboardCrypto;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelWrapper = experimentalStyled('span')(\n  ({ theme }) => `\n      background-color: ${theme.colors.alpha.black[5]};\n      padding: ${theme.spacing(0.5, 1)};\n      font-size: ${theme.typography.pxToRem(13)};\n      border-radius: ${theme.general.borderRadius};\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      max-height: ${theme.spacing(3)};\n      \n      &.MuiLabel {\n        &-primary {\n          background-color: ${theme.colors.primary.lighter};\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          background-color: ${theme.colors.secondary.lighter};\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          background-color: ${theme.colors.success.lighter};\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          background-color: ${theme.colors.warning.lighter};\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          background-color: ${theme.colors.error.lighter};\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          background-color: ${theme.colors.info.lighter};\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Label = ({ className = '', color = 'secondary', children, ...rest }) => {\n  return (\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\n      {children}\n    </LabelWrapper>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info'\n  ])\n};\n\nexport default Label;\n","import { useRef, useEffect } from 'react';\n\nconst useRefMounted = () => {\n  const isRef = useRef(true);\n\n  useEffect(\n    () => () => {\n      isRef.current = false;\n    },\n    []\n  );\n\n  return isRef;\n};\n\nexport default useRefMounted;\n","import { Container } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\nconst PageTitle = experimentalStyled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">{children}</Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n"],"sourceRoot":""}