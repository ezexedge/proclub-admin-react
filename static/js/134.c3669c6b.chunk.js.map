{"version":3,"sources":["content/docs/Installation/index.js","components/PageHeaderDocs/index.js"],"names":["Installation","title","maxWidth","container","spacing","item","xs","heading","subheading","variant","sx","mb","paragraph","my","primaryTypographyProps","gutterBottom","secondaryTypographyProps","primary","secondary","component","mt","wrapLines","language","style","a11yDark","RootWrapper","experimentalStyled","Box","theme","PageHeader","rest","t","useTranslation"],"mappings":"qJAAA,gIAqKeA,UAtJf,WAkCE,OACE,cAAC,IAAD,CAAgBC,MAAM,6CAAtB,SACE,cAAC,IAAD,CAAWC,UAAU,EAArB,SACE,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAYC,QAAQ,eAAeC,WAAW,OAEhD,eAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,IAAD,CAAYG,QAAQ,KAAKC,GAAI,CAAEC,GAAI,GAAnC,mBAGA,cAAC,IAAD,CAAYC,WAAS,EAArB,0HAIA,eAAC,IAAD,WACE,cAAC,IAAD,CAAUF,GAAI,CAAEG,GAAI,GAApB,SACE,cAAC,IAAD,CACEC,uBAAwB,CAAEL,QAAS,KAAMM,cAAc,GACvDC,yBAA0B,CAAEP,QAAS,aACrCQ,QAAQ,kBACRC,UAAU,wJAGd,cAAC,IAAD,CAASC,UAAU,OACnB,cAAC,IAAD,CAAUT,GAAI,CAAEG,GAAI,GAApB,SACE,cAAC,IAAD,CACEC,uBAAwB,CAAEL,QAAS,KAAMM,cAAc,GACvDC,yBAA0B,CAAEP,QAAS,aACrCQ,QAAQ,cACRC,UACE,2LAIE,cAAC,IAAD,CAAYT,QAAQ,KAAKC,GAAI,CAAEU,GAAI,GAAKL,cAAY,EAApD,iEAGA,cAAC,IAAD,CAAOM,WAAS,EAACC,SAAS,aAAaC,MAAOC,IAA9C,SAvEJ,yFA8EJ,cAAC,IAAD,CAASL,UAAU,OACnB,cAAC,IAAD,CAAUT,GAAI,CAAEG,GAAI,GAApB,SACE,cAAC,IAAD,CACEC,uBAAwB,CAAEL,QAAS,KAAMM,cAAc,GACvDC,yBAA0B,CAAEP,QAAS,aACrCQ,QAAQ,+BACRC,UACE,gLAIE,cAAC,IAAD,CAAOG,WAAS,EAACC,SAAS,aAAaC,MAAOC,IAA9C,SArFP,mDA6FH,uBACA,cAAC,IAAD,CAAYf,QAAQ,KAAKC,GAAI,CAAEC,GAAI,GAAnC,gCAGA,cAAC,IAAD,CAAYC,WAAS,EAArB,mJAKA,cAAC,IAAD,CAAYA,WAAS,EAArB,oIAIA,cAAC,IAAD,CAAOS,WAAS,EAACC,SAAS,aAAaC,MAAOC,IAA9C,SA5FO,kBA+FP,uBACA,cAAC,IAAD,CAAYZ,WAAS,EAArB,oJAKA,cAAC,IAAD,CAAOS,WAAS,EAACC,SAAS,aAAaC,MAAOC,IAA9C,SA/GI,8RAkHJ,uBACA,cAAC,IAAD,CAAYf,QAAQ,KAAKC,GAAI,CAAEC,GAAI,GAAnC,8BAGA,cAAC,IAAD,CAAYC,WAAS,EAArB,4IAIA,cAAC,IAAD,CAAOS,WAAS,EAACC,SAAS,aAAaC,MAAOC,IAA9C,SA/GQ,kBAkHR,uBACA,cAAC,IAAD,CAAYZ,WAAS,EAArB,sLAKA,cAAC,IAAD,CAAOS,WAAS,EAACC,SAAS,aAAaC,MAAOC,IAA9C,SAtHW,4U,wGC/BjBC,EAAcC,YAAmBC,IAAnBD,EAClB,gBAAGE,EAAH,EAAGA,MAAH,sCACoBA,EAAMxB,QAAQ,GADlC,UAwBayB,IAnBI,SAAC,GAAsC,IAApCtB,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAesB,EAAW,wCAC/CC,EAAMC,cAAND,EAER,OACE,eAACN,EAAD,2BAAiBK,GAAjB,cACGvB,GAAW,cAAC,IAAD,CAAYE,QAAQ,KAApB,SAA0BsB,EAAExB,KACvCC,GACC,cAAC,IAAD,CAAYC,QAAQ,YAApB,SAAiCsB,EAAEvB,KAErC,cAAC,IAAD,CAASE,GAAI,CAAEU,GAAI","file":"static/js/134.c3669c6b.chunk.js","sourcesContent":["import {\n  Container,\n  Grid,\n  Typography,\n  ListItemText,\n  ListItem,\n  List,\n  Divider\n} from '@material-ui/core';\n\nimport ContentWrapper from 'src/components/ContentWrapper';\nimport PageHeader from 'src/components/PageHeaderDocs';\nimport { Prism } from 'react-syntax-highlighter';\nimport a11yDark from 'react-syntax-highlighter/dist/cjs/styles/prism/a11y-dark';\n\nfunction Installation() {\n  const npmInstall = `// the -g parameter install npm globally on your system\n\nnpm install -g npm`;\n\n  const npmDeps = `cd application-folder\n\nnpm install`;\n\n  const devBuild = `Compiled successfully!\n\nYou can now view tokyo-react-admin-dashboard in the browser.\n\n  Local:            http://localhost:3000\n  On Your Network:  http://192.168.1.215:3000\n\nNote that the development build is not optimized.\nTo create a production build, use npm run build.`;\n\n  const devRunBuild = `npm run start`;\n  const prodRunBuild = `npm run build`;\n\n  const prodBuildFinish = `The project was built assuming it is hosted at /.\n  You can control this with the homepage field in your package.json.\n  \n  The build folder is ready to be deployed.\n  You may serve it with a static server:\n  \n    serve -s build\n  \n  Find out more about deployment here:\n  \n    https://cra.link/deployment`;\n\n  return (\n    <ContentWrapper title=\"Installation - Tokyo React Admin Dashboard\">\n      <Container maxWidth={false}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <PageHeader heading=\"Installation\" subheading=\"\"></PageHeader>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h2\" sx={{ mb: 2 }}>\n              Setup\n            </Typography>\n            <Typography paragraph>\n              Follow the instructions below in order to install the project\n              dependencies and start a new browser instance.\n            </Typography>\n            <List>\n              <ListItem sx={{ my: 2 }}>\n                <ListItemText\n                  primaryTypographyProps={{ variant: 'h4', gutterBottom: true }}\n                  secondaryTypographyProps={{ variant: 'subtitle2' }}\n                  primary=\"Install Node.js\"\n                  secondary=\"Before proceeding you will need to have Node.js installed on your system. Download and install the latest stable version from https://nodejs.org/\"\n                ></ListItemText>\n              </ListItem>\n              <Divider component=\"li\" />\n              <ListItem sx={{ my: 2 }}>\n                <ListItemText\n                  primaryTypographyProps={{ variant: 'h4', gutterBottom: true }}\n                  secondaryTypographyProps={{ variant: 'subtitle2' }}\n                  primary=\"Install NPM\"\n                  secondary={\n                    <>\n                      You will need to have the last stable version of NPM\n                      available. More informations about this package manager\n                      can be found at https://www.npmjs.com/\n                      <Typography variant=\"h4\" sx={{ mt: 2 }} gutterBottom>\n                        To install NPM run the following in a command line:\n                      </Typography>\n                      <Prism wrapLines language=\"javascript\" style={a11yDark}>\n                        {npmInstall}\n                      </Prism>\n                    </>\n                  }\n                ></ListItemText>\n              </ListItem>\n              <Divider component=\"li\" />\n              <ListItem sx={{ my: 2 }}>\n                <ListItemText\n                  primaryTypographyProps={{ variant: 'h4', gutterBottom: true }}\n                  secondaryTypographyProps={{ variant: 'subtitle2' }}\n                  primary=\"Install Project Dependencies\"\n                  secondary={\n                    <>\n                      The project dependencies are defined in the package.json\n                      file. Run the command below inside the root folder to\n                      install the dependencies.\n                      <Prism wrapLines language=\"javascript\" style={a11yDark}>\n                        {npmDeps}\n                      </Prism>\n                    </>\n                  }\n                ></ListItemText>\n              </ListItem>\n            </List>\n            <br />\n            <Typography variant=\"h2\" sx={{ mb: 2 }}>\n              Development Server\n            </Typography>\n            <Typography paragraph>\n              After finishing with the dependencies install process, you can\n              start a local development server and view the project in your\n              browser.\n            </Typography>\n            <Typography paragraph>\n              Inside the project folder run the following command. It takes a\n              few minutes to complete the initial development build.\n            </Typography>\n            <Prism wrapLines language=\"javascript\" style={a11yDark}>\n              {devRunBuild}\n            </Prism>\n            <br />\n            <Typography paragraph>\n              When finished, a browser window will be opened at\n              http://localhost:3000 and the terminal will show a message similar\n              to the one below:\n            </Typography>\n            <Prism wrapLines language=\"javascript\" style={a11yDark}>\n              {devBuild}\n            </Prism>\n            <br />\n            <Typography variant=\"h2\" sx={{ mb: 2 }}>\n              Production Build\n            </Typography>\n            <Typography paragraph>\n              When ready to launch in production your new project, run the\n              following command in a command line opened in the project folder:\n            </Typography>\n            <Prism wrapLines language=\"javascript\" style={a11yDark}>\n              {prodRunBuild}\n            </Prism>\n            <br />\n            <Typography paragraph>\n              This will create a production-ready build of your project. If the\n              build completed successfully, you will see in your terminal window\n              a message similar to the one below:\n            </Typography>\n            <Prism wrapLines language=\"javascript\" style={a11yDark}>\n              {prodBuildFinish}\n            </Prism>\n          </Grid>\n        </Grid>\n      </Container>\n    </ContentWrapper>\n  );\n}\n\nexport default Installation;\n","import PropTypes from 'prop-types';\n\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { Typography, Box, Divider } from '@material-ui/core';\n\nconst RootWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(5)};\n`\n);\n\nconst PageHeader = ({ heading, subheading, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <RootWrapper {...rest}>\n      {heading && <Typography variant=\"h1\">{t(heading)}</Typography>}\n      {subheading && (\n        <Typography variant=\"subtitle2\">{t(subheading)}</Typography>\n      )}\n      <Divider sx={{ mt: 5 }} />\n    </RootWrapper>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n  subheading: PropTypes.string\n};\n\nexport default PageHeader;\n"],"sourceRoot":""}