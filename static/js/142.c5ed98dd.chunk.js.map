{"version":3,"sources":["content/docs/ServerRequests/index.js","components/PageHeaderDocs/index.js"],"names":["ServerRequests","title","maxWidth","container","spacing","item","xs","heading","subheading","paragraph","showLineNumbers","wrapLines","language","style","a11yDark","RootWrapper","experimentalStyled","Box","theme","PageHeader","rest","t","useTranslation","variant","sx","mt"],"mappings":"qJAAA,4FA8GeA,UAvGf,WA4DE,OACE,cAAC,IAAD,CAAgBC,MAAM,gDAAtB,SACE,cAAC,IAAD,CAAWC,UAAU,EAArB,SACE,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAYC,QAAQ,kBAAkBC,WAAW,OAEnD,eAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,IAAD,CAAYG,WAAS,EAArB,mHAIA,cAAC,IAAD,CAAYA,WAAS,EAArB,sEAGA,cAAC,IAAD,CACEC,iBAAe,EACfC,WAAS,EACTC,SAAS,aACTC,MAAOC,IAJT,SA1EI,u8BAkFJ,uBACA,cAAC,IAAD,CAAYL,WAAS,EAArB,mGAIA,cAAC,IAAD,CACEC,iBAAe,EACfC,WAAS,EACTC,SAAS,aACTC,MAAOC,IAJT,SAlDK,ggB,wGCvCXC,EAAcC,YAAmBC,IAAnBD,EAClB,gBAAGE,EAAH,EAAGA,MAAH,sCACoBA,EAAMd,QAAQ,GADlC,UAwBae,IAnBI,SAAC,GAAsC,IAApCZ,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAeY,EAAW,wCAC/CC,EAAMC,cAAND,EAER,OACE,eAACN,EAAD,2BAAiBK,GAAjB,cACGb,GAAW,cAAC,IAAD,CAAYgB,QAAQ,KAApB,SAA0BF,EAAEd,KACvCC,GACC,cAAC,IAAD,CAAYe,QAAQ,YAApB,SAAiCF,EAAEb,KAErC,cAAC,IAAD,CAASgB,GAAI,CAAEC,GAAI","file":"static/js/142.c5ed98dd.chunk.js","sourcesContent":["import { Container, Typography, Grid } from '@material-ui/core';\n\nimport ContentWrapper from 'src/components/ContentWrapper';\nimport PageHeader from 'src/components/PageHeaderDocs';\nimport { Prism } from 'react-syntax-highlighter';\nimport a11yDark from 'react-syntax-highlighter/dist/cjs/styles/prism/a11y-dark';\n\nfunction ServerRequests() {\n  const axiosImp = `import { useState, useEffect, useCallback } from 'react';\n\n  import { Card } from '@material-ui/core';\n  import axios from 'src/utils/axios';\n  import useRefMounted from 'src/hooks/useRefMounted';\n  import RecentOrdersTable from './RecentOrdersTable';\n  \n  function RecentOrders() {\n    const isMountedRef = useRefMounted();\n    const [cryptoOrders, setCryptoOrders] = useState([]);\n  \n    const getCryptoOrders = useCallback(async () => {\n      try {\n        const response = await axios.get('/api/crypto-orders');\n  \n        if (isMountedRef.current) {\n          setCryptoOrders(response.data.cryptoOrders);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }, [isMountedRef]);\n  \n    useEffect(() => {\n      getCryptoOrders();\n    }, [getCryptoOrders]);\n  \n    return (\n      <Card>\n        <RecentOrdersTable cryptoOrders={cryptoOrders} />\n      </Card>\n    );\n  }\n  \n  export default RecentOrders;\n  `;\n\n  const axiosMock = `import mock from 'src/utils/mock';\n\nmock.onGet('/api/crypto-orders').reply(() => {\n  const cryptoOrders = [\n    {\n      id: '1',\n      orderDetails: 'Fiat Deposit',\n      orderDate: new Date().getTime(),\n      status: 'completed',\n      orderID: 'VUVX709ET7BY',\n      sourceName: 'Bank Account',\n      sourceDesc: '*** 1111',\n      amountCrypto: 34.4565,\n      amount: 56787,\n      cryptoCurrency: 'ETH',\n      currency: '$'\n    },\n  ];\n\n  return [200, { cryptoOrders }];\n});`;\n  \n  return (\n    <ContentWrapper title=\"Server Requests - Tokyo React Admin Dashboard\">\n      <Container maxWidth={false}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <PageHeader heading=\"Server Requests\" subheading=\"\"></PageHeader>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography paragraph>\n              Throughout Tokyo React Admin Dashboard you will find a few\n              examples of API calls, mocked using Axios.\n            </Typography>\n            <Typography paragraph>\n              Below is a simple example of an API call implementation.\n            </Typography>\n            <Prism\n              showLineNumbers\n              wrapLines\n              language=\"javascript\"\n              style={a11yDark}\n            >\n              {axiosImp}\n            </Prism>\n            <br />\n            <Typography paragraph>\n              Using Axios Mock Adapter you can simulate request calls. Check out\n              the example below:\n            </Typography>\n            <Prism\n              showLineNumbers\n              wrapLines\n              language=\"javascript\"\n              style={a11yDark}\n            >\n              {axiosMock}\n            </Prism>\n          </Grid>\n        </Grid>\n      </Container>\n    </ContentWrapper>\n  );\n}\n\nexport default ServerRequests;\n","import PropTypes from 'prop-types';\n\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { Typography, Box, Divider } from '@material-ui/core';\n\nconst RootWrapper = experimentalStyled(Box)(\n  ({ theme }) => `\n        margin-top: ${theme.spacing(5)};\n`\n);\n\nconst PageHeader = ({ heading, subheading, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <RootWrapper {...rest}>\n      {heading && <Typography variant=\"h1\">{t(heading)}</Typography>}\n      {subheading && (\n        <Typography variant=\"subtitle2\">{t(subheading)}</Typography>\n      )}\n      <Divider sx={{ mt: 5 }} />\n    </RootWrapper>\n  );\n};\n\nPageHeader.propTypes = {\n  heading: PropTypes.string,\n  subheading: PropTypes.string\n};\n\nexport default PageHeader;\n"],"sourceRoot":""}