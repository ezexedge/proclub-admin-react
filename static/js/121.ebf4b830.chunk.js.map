{"version":3,"sources":["content/pages/Auth/Login/LoginAuth0.js","content/pages/Auth/Login/LoginFirebaseAuth.js","content/pages/Auth/Login/LoginJWT.js","content/pages/Auth/Login/Basic/index.js","hooks/useRefMounted.js"],"names":["ImgWrapper","experimentalStyled","theme","spacing","LoginAuth0","loginWithPopup","useAuth","useState","error","setError","isMountedRef","useRefMounted","t","useTranslation","handleLogin","a","console","current","message","severity","fullWidth","onClick","size","sx","py","variant","alt","src","LoginFirebaseAuth","signInWithEmailAndPassword","signInWithGoogle","handleGoogleClick","mt","mb","initialValues","email","password","terms","submit","validationSchema","Yup","shape","max","required","oneOf","onSubmit","values","setErrors","setStatus","setSubmitting","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Boolean","helperText","label","placeholder","margin","name","onBlur","onChange","type","value","alignItems","display","justifyContent","control","checked","color","component","href","RouterLink","to","startIcon","disabled","useStyles","makeStyles","modified","LoginJWT","classes","useSnackbar","enqueueSnackbar","closeSnackbar","login","isAuthenticated","user","useHistory","log","accessToken","window","localStorage","getItem","usuario","jwtDecode","rol","autoFocus","className","icons","CardImg","Card","colors","alpha","black","transitions","create","primary","main","white","BottomWrapper","MainContent","Box","TopWrapper","LoginBasic","method","title","maxWidth","px","pt","pb","fontWeight","my","arrow","placement","height","isRef","useRef","useEffect"],"mappings":"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","file":"static/js/121.ebf4b830.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Button, Alert } from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst ImgWrapper = experimentalStyled('img')(\n  ({ theme }) => `\n    margin-right: ${theme.spacing(1)};\n    width: 32px;\n`\n);\n\nfunction LoginAuth0() {\n  const { loginWithPopup } = useAuth();\n  const [error, setError] = useState(null);\n  const isMountedRef = useRefMounted();\n  const { t } = useTranslation();\n\n  const handleLogin = async () => {\n    try {\n      await loginWithPopup();\n    } catch (err) {\n      console.error(err);\n      if (isMountedRef.current) {\n        setError(err.message);\n      }\n    }\n  };\n\n  return (\n    <>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n\n      <Button\n        fullWidth\n        onClick={handleLogin}\n        size=\"large\"\n        sx={{ py: 2 }}\n        variant=\"outlined\"\n      >\n        <ImgWrapper alt=\"Auth0\" src=\"/static/images/logo/auth0.svg\" />\n        {t('Sign in with')} Auth0\n      </Button>\n    </>\n  );\n}\n\nexport default LoginAuth0;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Box,\n  Button,\n  Divider,\n  FormHelperText,\n  Checkbox,\n  Link,\n  FormControlLabel,\n  TextField,\n  Typography,\n  CircularProgress\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst ImgWrapper = experimentalStyled('img')(\n  ({ theme }) => `\n    margin-right: ${theme.spacing(1)};\n`\n);\n\nfunction LoginFirebaseAuth() {\n  const { signInWithEmailAndPassword, signInWithGoogle } = useAuth();\n  const isMountedRef = useRefMounted();\n  const { t } = useTranslation();\n\n  const handleGoogleClick = async () => {\n    try {\n      await signInWithGoogle();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        fullWidth\n        onClick={handleGoogleClick}\n        size=\"large\"\n        variant=\"outlined\"\n      >\n        <ImgWrapper alt=\"Google\" src=\"/static/images/logo/google.svg\" />\n        Sign in with Google\n      </Button>\n      <Divider sx={{ mt: 4, mb: 2 }}>{t('or')}</Divider>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          terms: false,\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(t('The email provided should be a valid email address'))\n            .max(255)\n            .required(t('The email field is required')),\n          password: Yup.string()\n            .max(255)\n            .required(t('The password field is required')),\n          terms: Yup.boolean().oneOf(\n            [true],\n            t('You must agree to our terms and conditions')\n          )\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await signInWithEmailAndPassword(values.email, values.password);\n\n            if (isMountedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (isMountedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label={t('Email address')}\n              placeholder={t('Your email address here...')}\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label={t('Password')}\n              placeholder={t('Your password here...')}\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n              justifyContent=\"space-between\"\n            >\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={values.terms}\n                    name=\"terms\"\n                    color=\"primary\"\n                    onChange={handleChange}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"body2\">\n                      {t('I accept the')}{' '}\n                      <Link component=\"a\" href=\"#\">\n                        {t('terms and conditions')}\n                      </Link>\n                      .\n                    </Typography>\n                  </>\n                }\n              />\n              <Link component={RouterLink} to=\"/recover-password\">\n                <b>{t('Lost password?')}</b>\n              </Link>\n            </Box>\n            {Boolean(touched.terms && errors.terms) && (\n              <FormHelperText error>{errors.terms}</FormHelperText>\n            )}\n            <Button\n              sx={{ mt: 3 }}\n              color=\"primary\"\n              startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n              disabled={isSubmitting}\n              size=\"large\"\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              {t('Sign in')}\n            </Button>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default LoginFirebaseAuth;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  TextField,\n  Checkbox,\n  Typography,\n  Link,\n  FormControlLabel,\n  CircularProgress\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useRefMounted from 'src/hooks/useRefMounted';\nimport { useTranslation } from 'react-i18next';\nimport { useSnackbar } from 'notistack';\nimport jwtDecode from 'jwt-decode';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\nmodified: {\n  color: 'black!important'\n}\n\n}))\n\n\nfunction LoginJWT() {\n  const classes = useStyles();\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n\n  const { login, isAuthenticated , user } = useAuth();\n  const isMountedRef = useRefMounted();\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        terms: true,\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(t('El correo electrónico proporcionado debe ser una dirección de correo electrónico válida.'))\n          .max(255)\n          .required(t('El campo de correo electrónico es obligatorio.')),\n        password: Yup.string()\n          .max(255)\n          .required(t('El campo de contraseña es obligatorio.')),\n        terms: Yup.boolean().oneOf(\n          [true],\n          t('Debes aceptar nuestros términos y condiciones.')\n        )\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          \n              await login(values.email, values.password);\n          \n              console.log(isAuthenticated , user)\n         \n            const accessToken = window.localStorage.getItem('accessToken');\n            const usuario = jwtDecode(accessToken);\n\n            console.log('ress',user)\n          \n          if(usuario.rol === 'socio' || usuario.rol === 'manager'){\n\n            enqueueSnackbar('No tiene permisos suficientes para ingresar a esta área.',{ \n              variant: 'error',\n          })\n          }\n          \n      \n        \n\n          \n          if (isMountedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n\n          }\n        } catch (err) {\n\n\n    //      console.log('errrpepa',err);\n          \n          enqueueSnackbar('Usuario y/o contraseña incorrectos.',{ \n            variant: 'error',\n        })\n          if (isMountedRef.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            margin=\"normal\"\n            autoFocus\n            helperText={touched.email && errors.email}\n            label={t('Email')}\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            margin=\"normal\"\n            helperText={touched.password && errors.password}\n            label={t('Contraseña')}\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box\n            alignItems=\"center\"\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            mt={1}\n          \n          >\n           <Link component={RouterLink} to=\"/recover-password\" className={classes.modified}>\n              <b>{t('Recuperar contraseña')}</b>\n            </Link>\n            <Link component={RouterLink} to=\"/recover-password\">\n              <b>{t('')}</b>\n            </Link>\n\n           \n          \n          </Box>\n\n          {Boolean(touched.terms && errors.terms) && (\n            <FormHelperText error>{errors.terms}</FormHelperText>\n          )}\n\n          <Button\n            sx={{ mt: 3 }}\n            color=\"primary\"\n            startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n            disabled={isSubmitting}\n            type=\"submit\"\n            fullWidth\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {t('Ingresar')}\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default LoginJWT;\n","import { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Card,\n  Link,\n  Tooltip,\n  Typography,\n  Container,\n  Alert\n} from '@material-ui/core';\nimport ContentWrapper from 'src/components/ContentWrapper';\nimport useAuth from 'src/hooks/useAuth';\nimport Auth0Login from '../LoginAuth0';\nimport FirebaseAuthLogin from '../LoginFirebaseAuth';\nimport JWTLogin from '../LoginJWT';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport Logo from 'src/components/LogoSign';\n\nconst icons = {\n  Auth0: '/static/images/logo/auth0.svg',\n  FirebaseAuth: '/static/images/logo/firebase.svg',\n  JWT: '/static/images/logo/jwt.svg'\n};\n\nconst CardImg = experimentalStyled(Card)(\n  ({ theme }) => `\n    width: 90px;\n    height: 80px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    background: ${theme.colors.alpha.black[5]};\n    margin: 0 ${theme.spacing(1)};\n    border: 1px solid ${theme.colors.alpha.black[10]};\n    transition: ${theme.transitions.create(['all'])};\n\n    &:hover {\n      border-color: ${theme.colors.primary.main};\n      background: ${theme.colors.alpha.white[100]};\n    }\n`\n);\n\nconst BottomWrapper = experimentalStyled(Card)(\n  ({ theme }) => `\n    padding: ${theme.spacing(3)};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n`\n);\n\nconst MainContent = experimentalStyled(Box)(\n  () => `\n    height: 100%;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n`\n);\n\nconst TopWrapper = experimentalStyled(Box)(\n  () => `\n  overflow: auto;\n  display: flex;\n  width: 100%;\n  flex: 1;\n  padding: 20px;\n`\n);\n\nfunction LoginBasic() {\n  const { method } = useAuth();\n  const { t } = useTranslation();\n\n  return (\n    <ContentWrapper title=\"Login - Basic\">\n      <MainContent>\n        <TopWrapper>\n          <Container maxWidth=\"sm\">\n            <Logo />\n            <Card sx={{ mt: 3, px: 4, pt: 5, pb: 3 }}>\n              <Box>\n                <Typography variant=\"h2\" sx={{ mb: 1 }}>\n                  {t('Sign in')}\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  color=\"text.secondary\"\n                  fontWeight=\"normal\"\n                  sx={{ mb: 3 }}\n                >\n                  {t('Fill in the fields below to sign into your account.')}\n                </Typography>\n              </Box>\n              {method === 'Auth0' && <Auth0Login />}\n              {method === 'FirebaseAuth' && <FirebaseAuthLogin />}\n              {method === 'JWT' && <JWTLogin />}\n              <Box my={4}>\n                <Typography\n                  component=\"span\"\n                  variant=\"subtitle2\"\n                  color=\"text.primary\"\n                  fontWeight=\"bold\"\n                >\n                  {t('Don’t have an account, yet?')}\n                </Typography>{' '}\n                <Link component={RouterLink} to=\"/register-basic\">\n                  <b>Sign up here</b>\n                </Link>\n              </Box>\n              {method !== 'Auth0' && (\n                <Tooltip\n                  title={t('Used only for the live preview demonstration !')}\n                >\n                  <Alert severity=\"warning\">\n                    Use <b>demo@example.com</b> and password <b>TokyoPass1@</b>\n                  </Alert>\n                </Tooltip>\n              )}\n            </Card>\n          </Container>\n        </TopWrapper>\n        <BottomWrapper>\n          <Box mb={3}>\n            <Tooltip arrow placement=\"top\" title=\"Auth0\">\n              <CardImg>\n                <img height={50} alt=\"Auth0\" src={icons['Auth0']} />\n              </CardImg>\n            </Tooltip>\n            <Tooltip arrow placement=\"top\" title=\"Firebase\">\n              <CardImg>\n                <img height={50} alt=\"Firebase\" src={icons['FirebaseAuth']} />\n              </CardImg>\n            </Tooltip>\n            <Tooltip arrow placement=\"top\" title=\"JSON Web Token\">\n              <CardImg>\n                <img height={50} alt=\"JSON Web Token\" src={icons['JWT']} />\n              </CardImg>\n            </Tooltip>\n          </Box>\n\n          <Alert severity=\"warning\">\n            {t(\n              'Learn how to switch between auth methods by reading the section we’ve prepared in the documentation.'\n            )}\n          </Alert>\n        </BottomWrapper>\n      </MainContent>\n    </ContentWrapper>\n  );\n}\n\nexport default LoginBasic;\n","import { useRef, useEffect } from 'react';\n\nconst useRefMounted = () => {\n  const isRef = useRef(true);\n\n  useEffect(\n    () => () => {\n      isRef.current = false;\n    },\n    []\n  );\n\n  return isRef;\n};\n\nexport default useRefMounted;\n"],"sourceRoot":""}