{"version":3,"sources":["content/management/Products/shop/PageHeader.js","content/management/Products/shop/Sidebar.js","content/management/Products/shop/Results.js","content/management/Products/shop/index.js","hooks/useRefMounted.js"],"names":["PageHeader","t","useTranslation","Grid","container","justifyContent","alignItems","item","Box","display","Typography","variant","component","gutterBottom","Button","sx","mt","xs","sm","RouterLink","startIcon","to","AccordionSummaryWrapper","experimentalStyled","AccordionSummary","ListItemWrapper","ListItem","Sidebar","useState","checked2","setChecked2","handleToggle2","value","currentIndex","indexOf","newChecked","push","splice","checked3","setChecked3","handleToggle3","setValue","Card","Accordion","defaultExpanded","expandIcon","AccordionDetails","pt","Slider","step","min","max","onChange","event","newValue","valueLabelDisplay","valueLabelFormat","Divider","p","List","id","name","map","py","px","button","onClick","ListItemIcon","minWidth","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","primary","primaryTypographyProps","rating","Rating","precision","readOnly","Results","products","page","setPage","limit","setLimit","enqueueSnackbar","useSnackbar","query","setQuery","toggleView","setToggleView","handleCart","preventDuplicate","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","handlePageChange","newPage","handleLimitChange","parseInt","target","filteredProducts","filter","product","matches","containsQuery","forEach","property","toLowerCase","includes","applyFilters","paginatedProducts","slice","applyPagination","AvatarWrapper","theme","spacing","transitions","create","IconButtonError","IconButton","colors","error","main","lighter","TextField","fullWidth","persist","InputProps","startAdornment","InputAdornment","position","placeholder","length","ToggleButtonGroup","exclusive","ToggleButton","fontWeight","color","align","md","Avatar","src","images","textAlign","mb","summary","defaultValue","sale_price","pr","textDecorationLine","numeral","price","format","Text","pb","size","fontSize","stock","TablePagination","count","onPageChange","onRowsPerPageChange","rowsPerPage","rowsPerPageOptions","Hidden","mdDown","mr","orientation","flexItem","flex","my","defaultProps","sidebarContent","autoHide","DrawerWrapperMobile","Drawer","IconButtonToggle","ManagementProductsShop","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","isMountedRef","useRefMounted","setProducts","getProducts","useCallback","a","axios","get","response","current","data","console","useEffect","ContentWrapper","title","Container","maxWidth","direction","mdUp","anchor","open","onClose","Footer","isRef","useRef"],"mappings":"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","file":"static/js/64.8cd735bf.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport { Box, Grid, Typography, Button } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\n\nfunction PageHeader() {\n  const { t } = useTranslation();\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n              {t('Storefront')}\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              {t('This is a list of all commerce products')}\n            </Typography>\n          </Box>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button\n          sx={{ mt: { xs: 2, sm: 0 } }}\n          component={RouterLink}\n          startIcon={<EditTwoToneIcon />}\n          to=\"/preview/management/commerce/products\"\n          variant=\"contained\"\n        >\n          {t('Manage products')}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHeader;\n","import { useState } from 'react';\n\nimport {\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Divider,\n  Card,\n  ListItemIcon,\n  Slider,\n  Checkbox,\n  Rating,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst AccordionSummaryWrapper = experimentalStyled(AccordionSummary)(\n  () => `\n      &.Mui-expanded {\n        min-height: 48px;\n      }\n\n      .MuiAccordionSummary-content.Mui-expanded {\n        margin: 12px 0;\n      }\n  `\n);\n\nconst ListItemWrapper = experimentalStyled(ListItem)(\n  () => `\n      &.MuiButtonBase-root {\n        border-radius: 0;\n      }\n  `\n);\n\nfunction Sidebar() {\n  const { t } = useTranslation();\n\n  const categories = [\n    {\n      id: 1,\n      name: 'Toys & Hobbies',\n      value: 'toys_hobbies'\n    },\n    {\n      id: 2,\n      name: 'Office Supplies',\n      value: 'office_supplies'\n    },\n    {\n      id: 3,\n      name: 'Electronics',\n      value: 'electronics'\n    },\n    {\n      id: 4,\n      name: 'Video Games',\n      value: 'video_games'\n    }\n  ];\n\n  const rating = [\n    {\n      id: 1,\n      rating: 5\n    },\n    {\n      id: 2,\n      rating: 4\n    },\n    {\n      id: 3,\n      rating: 3\n    },\n    {\n      id: 4,\n      rating: 2\n    },\n    {\n      id: 5,\n      rating: 1\n    }\n  ];\n\n  const [checked2, setChecked2] = useState([0]);\n\n  const handleToggle2 = (value) => {\n    const currentIndex = checked2.indexOf(value);\n    const newChecked = [...checked2];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked2(newChecked);\n  };\n\n  const [checked3, setChecked3] = useState([0]);\n\n  const handleToggle3 = (value) => {\n    const currentIndex = checked3.indexOf(value);\n    const newChecked = [...checked3];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked3(newChecked);\n  };\n\n  const [value, setValue] = useState([200, 800]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Card>\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Price Range')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails sx={{ pt: 5 }}>\n          <Slider\n            value={value}\n            step={50}\n            min={100}\n            max={2000}\n            onChange={handleChange}\n            valueLabelDisplay=\"on\"\n            valueLabelFormat={(value) => <div>${value}</div>}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Divider />\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Categories')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails sx={{ p: 0 }}>\n          <List component=\"div\">\n            {categories.map((value) => {\n              return (\n                <ListItemWrapper\n                  sx={{ py: 0, px: 2 }}\n                  key={value.id}\n                  button\n                  onClick={handleToggle2(value.id)}\n                >\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked2.indexOf(value.id) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={value.name}\n                    primaryTypographyProps={{ variant: 'body1' }}\n                  />\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Divider />\n      <Accordion defaultExpanded>\n        <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n          <Typography variant=\"h5\">{t('Rating')}</Typography>\n        </AccordionSummaryWrapper>\n        <AccordionDetails sx={{ p: 0 }}>\n          <List component=\"div\">\n            {rating.map((value) => {\n              return (\n                <ListItemWrapper\n                  key={value.id}\n                  button\n                  onClick={handleToggle3(value.id)}\n                >\n                  <Rating value={value.rating} precision={1} readOnly />\n                </ListItemWrapper>\n              );\n            })}\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </Card>\n  );\n}\n\nexport default Sidebar;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Grid,\n  Typography,\n  Card,\n  Box,\n  TextField,\n  IconButton,\n  InputAdornment,\n  Avatar,\n  Button,\n  ToggleButton,\n  ToggleButtonGroup,\n  Rating,\n  Slide,\n  Divider,\n  Hidden,\n  TablePagination\n} from '@material-ui/core';\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport { useTranslation } from 'react-i18next';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport numeral from 'numeral';\nimport Text from 'src/components/Text';\nimport { useSnackbar } from 'notistack';\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\nimport GridViewTwoToneIcon from '@material-ui/icons/GridViewTwoTone';\nimport TableRowsTwoToneIcon from '@material-ui/icons/TableRowsTwoTone';\n\nconst applyFilters = (products, query) => {\n  return products.filter((product) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (product[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (products, page, limit) => {\n  return products.slice(page * limit, page * limit + limit);\n};\n\nconst Results = ({ products, ...rest }) => {\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(4);\n  const { t } = useTranslation();\n  const { enqueueSnackbar } = useSnackbar();\n  const [query, setQuery] = useState('');\n  const [toggleView, setToggleView] = useState('grid_view');\n\n  const handleViewOrientation = (event, newValue) => {\n    setToggleView(newValue);\n  };\n\n  const handleCart = () => {\n    enqueueSnackbar(t('You added a product to cart'), {\n      variant: 'success',\n      preventDuplicate: true,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      TransitionComponent: Slide\n    });\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const filteredProducts = applyFilters(products, query);\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\n\n  const AvatarWrapper = experimentalStyled(Box)(\n    ({ theme }) => `\n      .MuiAvatar-root {\n        height: auto;\n        width: ${theme.spacing(26)};\n        transition: ${theme.transitions.create(['opacity'])};\n\n        &:hover {\n          opacity: .8;\n        }\n      }\n`\n  );\n\n  const IconButtonError = experimentalStyled(IconButton)(\n    ({ theme }) => `\n       color: ${theme.colors.error.main};\n  \n       &:hover {\n        background: ${theme.colors.error.lighter};\n      }\n  `\n  );\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Card>\n          <TextField\n            fullWidth\n            onChange={handleQueryChange}\n            value={query}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchTwoToneIcon />\n                </InputAdornment>\n              )\n            }}\n            placeholder={t('Search by product name...')}\n          />\n        </Card>\n      </Grid>\n      <Grid item xs={12}>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <Typography component=\"span\" variant=\"subtitle1\">\n              {t('Showing')}:\n            </Typography>{' '}\n            <b>\n              {filteredProducts.length} {t('products')}\n            </b>\n          </Box>\n          <ToggleButtonGroup\n            value={toggleView}\n            exclusive\n            onChange={handleViewOrientation}\n          >\n            <ToggleButton disableRipple value=\"list_view\">\n              <TableRowsTwoToneIcon />\n            </ToggleButton>\n            <ToggleButton disableRipple value=\"grid_view\">\n              <GridViewTwoToneIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Grid>\n\n      {toggleView === 'grid_view' && (\n        <>\n          {paginatedProducts.length === 0 ? (\n            <Grid item xs={12}>\n              <Typography\n                sx={{ py: 10 }}\n                variant=\"h3\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n                align=\"center\"\n              >\n                {t(\n                  \"We couldn't find any products matching your search criteria\"\n                )}\n              </Typography>\n            </Grid>\n          ) : (\n            <>\n              {paginatedProducts.map((product) => {\n                return (\n                  <Grid key={product.id} item xs={12} md={6}>\n                    <Card>\n                      <AvatarWrapper\n                        p={3}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                      >\n                        <Avatar\n                          component={RouterLink}\n                          to={\n                            '/preview/management/commerce/product/' + product.id\n                          }\n                          src={product.images[0]}\n                          variant=\"rounded\"\n                        />\n                      </AvatarWrapper>\n                      <Box textAlign=\"center\" px={3}>\n                        <Typography variant=\"h3\" sx={{ mb: 1 }}>\n                          {product.name}\n                        </Typography>\n                        <Typography variant=\"h6\" color=\"text.secondary\">\n                          {product.summary}\n                        </Typography>\n                        <Box py={2}>\n                          <Rating\n                            readOnly\n                            defaultValue={product.rating}\n                            precision={0.5}\n                          />\n                        </Box>\n                      </Box>\n                      <Box display=\"flex\" justifyContent=\"center\">\n                        <Box>\n                          <Typography\n                            component=\"span\"\n                            variant={product.sale_price !== 0 ? 'h4' : 'h3'}\n                            sx={{\n                              pr: 2,\n                              textDecorationLine:\n                                product.sale_price !== 0 ? 'line-through' : ''\n                            }}\n                          >\n                            ${numeral(product.price).format(`0,0.00`)}\n                          </Typography>\n                          {product.sale_price !== 0 && (\n                            <Typography component=\"span\" variant=\"h3\">\n                              <Text color=\"error\">\n                                ${numeral(product.sale_price).format(`0,0.00`)}\n                              </Text>\n                            </Typography>\n                          )}\n                        </Box>\n                      </Box>\n                      <Box pb={3} pt={1} display=\"flex\" justifyContent=\"center\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outlined\"\n                          onClick={handleCart}\n                        >\n                          {t('Add to cart')}\n                        </Button>\n                      </Box>\n                      <Divider />\n                      <Box\n                        p={2}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                      >\n                        <IconButtonError size=\"small\">\n                          <FavoriteTwoToneIcon fontSize=\"small\" />\n                        </IconButtonError>\n                        <Typography variant=\"subtitle2\">\n                          {t('In Stock')}:{' '}\n                          <Typography\n                            component=\"span\"\n                            color=\"text.primary\"\n                            variant=\"h4\"\n                          >\n                            {product.stock}\n                          </Typography>\n                        </Typography>\n                      </Box>\n                    </Card>\n                  </Grid>\n                );\n              })}\n              <Grid item xs={12}>\n                <Card sx={{ p: 2 }}>\n                  <TablePagination\n                    component=\"div\"\n                    count={filteredProducts.length}\n                    onPageChange={handlePageChange}\n                    onRowsPerPageChange={handleLimitChange}\n                    page={page}\n                    rowsPerPage={limit}\n                    rowsPerPageOptions={[4, 8, 12]}\n                  />\n                </Card>\n              </Grid>\n            </>\n          )}\n        </>\n      )}\n      {toggleView === 'list_view' && (\n        <>\n          {paginatedProducts.length === 0 ? (\n            <Grid item xs={12}>\n              <Typography\n                sx={{ py: 10 }}\n                variant=\"h3\"\n                fontWeight=\"normal\"\n                color=\"text.secondary\"\n                align=\"center\"\n              >\n                {t(\n                  \"We couldn't find any products matching your search criteria\"\n                )}\n              </Typography>\n            </Grid>\n          ) : (\n            <>\n              {paginatedProducts.map((product) => {\n                return (\n                  <Grid key={product.id} item xs={12}>\n                    <Card\n                      sx={{\n                        p: 2,\n                        display: { md: 'flex' },\n                        alignItems: { md: 'center' }\n                      }}\n                    >\n                      <AvatarWrapper\n                        p={2}\n                        sx={{ justifyContent: { md: 'center' } }}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar\n                          component={RouterLink}\n                          to={\n                            '/preview/management/commerce/product/' + product.id\n                          }\n                          src={product.images[0]}\n                          variant=\"rounded\"\n                        />\n                      </AvatarWrapper>\n                      <Hidden mdDown>\n                        <Divider\n                          sx={{ mr: 2 }}\n                          orientation=\"vertical\"\n                          flexItem\n                        />\n                      </Hidden>\n                      <Box flex={1} p={2}>\n                        <Rating\n                          readOnly\n                          defaultValue={product.rating}\n                          precision={0.5}\n                        />\n                        <Typography variant=\"h3\" sx={{ my: 1 }}>\n                          {product.name}\n                        </Typography>\n                        <Typography variant=\"subtitle2\">\n                          {product.summary}\n                        </Typography>\n                        <Box py={2}>\n                          <Typography\n                            component=\"span\"\n                            variant={product.sale_price !== 0 ? 'h4' : 'h3'}\n                            sx={{\n                              pr: 2,\n                              textDecorationLine:\n                                product.sale_price !== 0 ? 'line-through' : ''\n                            }}\n                          >\n                            ${numeral(product.price).format(`0,0.00`)}\n                          </Typography>\n                          {product.sale_price !== 0 && (\n                            <Typography component=\"span\" variant=\"h3\">\n                              <Text color=\"error\">\n                                ${numeral(product.sale_price).format(`0,0.00`)}\n                              </Text>\n                            </Typography>\n                          )}\n                        </Box>\n                        <Box\n                          display=\"flex\"\n                          alignItems=\"center\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Box display=\"flex\" alignItems=\"center\">\n                            <Button\n                              sx={{ mr: 2 }}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={handleCart}\n                            >\n                              {t('Add to cart')}\n                            </Button>\n                            <IconButtonError size=\"small\">\n                              <FavoriteTwoToneIcon fontSize=\"small\" />\n                            </IconButtonError>\n                          </Box>\n\n                          <Typography variant=\"subtitle2\">\n                            {t('In Stock')}:{' '}\n                            <Typography\n                              component=\"span\"\n                              color=\"text.primary\"\n                              variant=\"h4\"\n                            >\n                              {product.stock}\n                            </Typography>\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </Card>\n                  </Grid>\n                );\n              })}\n              <Grid item xs={12}>\n                <Card sx={{ p: 2 }}>\n                  <TablePagination\n                    component=\"div\"\n                    count={filteredProducts.length}\n                    onPageChange={handlePageChange}\n                    onRowsPerPageChange={handleLimitChange}\n                    page={page}\n                    rowsPerPage={limit}\n                    rowsPerPageOptions={[4, 8, 12]}\n                  />\n                </Card>\n              </Grid>\n            </>\n          )}\n        </>\n      )}\n      {!toggleView && (\n        <Grid item xs={12}>\n          <Card sx={{ textAlign: 'center', p: 3 }}>\n            <Typography\n              align=\"center\"\n              variant=\"h4\"\n              fontWeight=\"normal\"\n              color=\"text.secondary\"\n              sx={{ my: 5 }}\n              gutterBottom\n            >\n              {t(\n                'Choose between table or grid views for displaying the projects list.'\n              )}\n            </Typography>\n          </Card>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nResults.propTypes = {\n  products: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  products: []\n};\n\nexport default Results;\n","import { useState, useEffect, useCallback } from 'react';\n\nimport ContentWrapper from 'src/components/ContentWrapper';\nimport Footer from 'src/components/Footer';\nimport PageHeader from './PageHeader';\nimport Sidebar from './Sidebar';\n\nimport {\n  Container,\n  Hidden,\n  Box,\n  Grid,\n  IconButton,\n  Drawer,\n  useTheme\n} from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport axios from 'src/utils/axios';\nimport MenuTwoToneIcon from '@material-ui/icons/MenuTwoTone';\n\nimport useRefMounted from 'src/hooks/useRefMounted';\n\nimport Results from './Results';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nconst sidebarContent = (\n  <Scrollbars autoHide>\n    <Sidebar />\n  </Scrollbars>\n);\n\nconst DrawerWrapperMobile = experimentalStyled(Drawer)(\n  () => `\n    width: 340px;\n    flex-shrink: 0;\n\n  & > .MuiPaper-root {\n        width: 340px;\n        z-index: 3;\n  }\n`\n);\n\nconst IconButtonToggle = experimentalStyled(IconButton)(\n  ({ theme }) => `\n  width: ${theme.spacing(6)};\n  height: ${theme.spacing(6)};\n`\n);\n\nfunction ManagementProductsShop() {\n  const theme = useTheme();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const isMountedRef = useRefMounted();\n  const [products, setProducts] = useState([]);\n\n  const getProducts = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/products');\n\n      if (isMountedRef.current) {\n        setProducts(response.data.products);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  return (\n    <ContentWrapper title=\"Products Platform - Applications\">\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid display=\"flex\" alignItems=\"center\" item xs={12}>\n            <Hidden mdUp>\n              <IconButtonToggle\n                sx={{ mr: 1 }}\n                color=\"primary\"\n                onClick={handleDrawerToggle}\n                size=\"small\"\n              >\n                <MenuTwoToneIcon />\n              </IconButtonToggle>\n            </Hidden>\n            <Box flex={1} mt={3}>\n              <PageHeader />\n            </Box>\n          </Grid>\n          <Hidden mdDown>\n            <Grid item xs={12} md={3}>\n              <Sidebar />\n            </Grid>\n          </Hidden>\n          <Grid item xs={12} md={9}>\n            {products && <Results products={products} />}\n          </Grid>\n        </Grid>\n      </Container>\n      <Hidden mdUp>\n        <DrawerWrapperMobile\n          variant=\"temporary\"\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n        >\n          {sidebarContent}\n        </DrawerWrapperMobile>\n      </Hidden>\n      <Footer />\n    </ContentWrapper>\n  );\n}\n\nexport default ManagementProductsShop;\n","import { useRef, useEffect } from 'react';\n\nconst useRefMounted = () => {\n  const isRef = useRef(true);\n\n  useEffect(\n    () => () => {\n      isRef.current = false;\n    },\n    []\n  );\n\n  return isRef;\n};\n\nexport default useRefMounted;\n"],"sourceRoot":""}